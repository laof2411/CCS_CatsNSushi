<members>
  <VrGamesDev.FiveSeconds>
    <signature>VrGamesDev.FiveSeconds</signature>
    <childcount>14</childcount>
    <type>Namespace</type>
    <name>VrGamesDev.FiveSeconds</name>
    <token>namespace VrGamesDev.FiveSeconds</token>
    <scope></scope>
    <comments>
      <summary>Get the highest score, being fast and accurate.
 
 The mini game to show how to use C.O.R.E.
 Collect the green check marks and the stars to get extra bonus points and time
 if you get a Red X, you lose the game, you have 5 seconds to do it and every try you
 get -0.20 seconds until you beat the game when you get under 1 second</summary>
    </comments>
  </VrGamesDev.FiveSeconds>
  <VrGamesDev.FiveSeconds.VRG_5sBonus>
    <signature>VrGamesDev.FiveSeconds.VRG_5sBonus</signature>
    <childcount>5</childcount>
    <type>Class</type>
    <name>VRG_5sBonus</name>
    <token>public class VRG_5sBonus : VRG_Base </token>
    <scope>VrGamesDev.FiveSeconds</scope>
    <comments>
      <summary>Add the time left when you collect the green check</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sBonus>
  <VrGamesDev.FiveSeconds.VRG_5sBonus.m_Timer>
    <signature>VrGamesDev.FiveSeconds.VRG_5sBonus.m_Timer</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Timer</name>
    <token>[Tooltip("The CountdownTimer component to modify")]
[SerializeField]
private VRG_5sTimer m_Timer </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sBonus</scope>
    <comments>
      <summary>The CountdownTimer component to modify</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sBonus.m_Timer>
  <VrGamesDev.FiveSeconds.VRG_5sBonus.m_Bonus>
    <signature>VrGamesDev.FiveSeconds.VRG_5sBonus.m_Bonus</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Bonus</name>
    <token>[Tooltip("The UI component to display the current bonus amount")]
[SerializeField]
private Text m_Bonus </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sBonus</scope>
    <comments>
      <summary>The UI component to display the current bonus amount</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sBonus.m_Bonus>
  <VrGamesDev.FiveSeconds.VRG_5sBonus.m_Decimals>
    <signature>VrGamesDev.FiveSeconds.VRG_5sBonus.m_Decimals</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Decimals</name>
    <token>[Tooltip("The detail of the floating point, by default is 2")]
[SerializeField]
private int m_Decimals </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sBonus</scope>
    <comments>
      <summary>The detail of the floating point, by default is 2</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sBonus.m_Decimals>
  <VrGamesDev.FiveSeconds.VRG_5sBonus.m_Duration>
    <signature>VrGamesDev.FiveSeconds.VRG_5sBonus.m_Duration</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Duration</name>
    <token>[Tooltip("The time in seconds to complete the scaling, by default is 0.5 seconds")]
[SerializeField]
private float m_Duration </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sBonus</scope>
    <comments>
      <summary>The time in seconds to complete the scaling, by default is 0.5 seconds</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sBonus.m_Duration>
  <VrGamesDev.FiveSeconds.VRG_5sBonus.Do_x0028__x0029_>
    <signature>VrGamesDev.FiveSeconds.VRG_5sBonus.Do()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Do</name>
    <token>protected override IEnumerator Do()</token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sBonus</scope>
    <comments>
      <summary>&lt;strong&gt;&lt;em&gt;Do it's thing: &lt;/em&gt;&lt;/strong&gt; Calculate the bonus times the speed and the time and update the Bonus text</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sBonus.Do_x0028__x0029_>
  <VrGamesDev.FiveSeconds.VRG_5sDifficultyConfiguration>
    <signature>VrGamesDev.FiveSeconds.VRG_5sDifficultyConfiguration</signature>
    <childcount>10</childcount>
    <type>Class</type>
    <name>VRG_5sDifficultyConfiguration</name>
    <token>[System.Serializable]
public class VRG_5sDifficultyConfiguration </token>
    <scope>VrGamesDev.FiveSeconds</scope>
    <comments>
      <summary>The class that has all the variables to set the difficulty of the 5second game</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sDifficultyConfiguration>
  <VrGamesDev.FiveSeconds.VRG_5sDifficultyConfiguration.winTime>
    <signature>VrGamesDev.FiveSeconds.VRG_5sDifficultyConfiguration.winTime</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>winTime</name>
    <token>[Tooltip("The time limit to win the game, by default is 1.5 seconds")]
[Range(1.5f, 0.5f)]
[SerializeField]
public float winTime </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sDifficultyConfiguration</scope>
    <comments>
      <summary>The time limit to win the game, by default is 1.5 seconds</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sDifficultyConfiguration.winTime>
  <VrGamesDev.FiveSeconds.VRG_5sDifficultyConfiguration.winRound>
    <signature>VrGamesDev.FiveSeconds.VRG_5sDifficultyConfiguration.winRound</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>winRound</name>
    <token>[Tooltip("How many rounds are needed to win the game, by default is 20")]
[Range(0, 30)]
[SerializeField]
public int winRound </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sDifficultyConfiguration</scope>
    <comments>
      <summary>How many rounds are needed to win the game, by default is 20</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sDifficultyConfiguration.winRound>
  <VrGamesDev.FiveSeconds.VRG_5sDifficultyConfiguration.starChance>
    <signature>VrGamesDev.FiveSeconds.VRG_5sDifficultyConfiguration.starChance</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>starChance</name>
    <token>[Tooltip("The probability to show a Star, by default is 4")]
[Range(4, 0)]
[SerializeField]
public int starChance </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sDifficultyConfiguration</scope>
    <comments>
      <summary>The probability to show a Star, by default is 4</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sDifficultyConfiguration.starChance>
  <VrGamesDev.FiveSeconds.VRG_5sDifficultyConfiguration.timeBonus>
    <signature>VrGamesDev.FiveSeconds.VRG_5sDifficultyConfiguration.timeBonus</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>timeBonus</name>
    <token>[Tooltip("The time in seconds to win when you get a star, by default is 1")]
[Range(1.0f, 0.0f)]
[SerializeField]
public float timeBonus </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sDifficultyConfiguration</scope>
    <comments>
      <summary>The time in seconds to win when you get a star, by default is 1</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sDifficultyConfiguration.timeBonus>
  <VrGamesDev.FiveSeconds.VRG_5sDifficultyConfiguration.timeMaxBonus>
    <signature>VrGamesDev.FiveSeconds.VRG_5sDifficultyConfiguration.timeMaxBonus</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>timeMaxBonus</name>
    <token>[Tooltip("The Maximum bonus available, by default is 0.25 seconds")]
[Range(0.25f, 0.0f)]
[SerializeField]
public float timeMaxBonus </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sDifficultyConfiguration</scope>
    <comments>
      <summary>The Maximum bonus available, by default is 0.25 seconds</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sDifficultyConfiguration.timeMaxBonus>
  <VrGamesDev.FiveSeconds.VRG_5sDifficultyConfiguration.timeLessPerRound>
    <signature>VrGamesDev.FiveSeconds.VRG_5sDifficultyConfiguration.timeLessPerRound</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>timeLessPerRound</name>
    <token>[Tooltip("How many seconds you lose per round, by default is -0.10 seconds")]
[Range(-0.10f, -0.50f)]
[SerializeField]
public float timeLessPerRound </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sDifficultyConfiguration</scope>
    <comments>
      <summary>How many seconds you lose per round, by default is -0.10 seconds</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sDifficultyConfiguration.timeLessPerRound>
  <VrGamesDev.FiveSeconds.VRG_5sDifficultyConfiguration.duration>
    <signature>VrGamesDev.FiveSeconds.VRG_5sDifficultyConfiguration.duration</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>duration</name>
    <token>[Tooltip("The duration of the game... 5 seconds game, has 5 seconds by default. Duh!")]
[Range(5.0f, 0.5f)]
[SerializeField]
public float duration </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sDifficultyConfiguration</scope>
    <comments>
      <summary>The duration of the game... 5 seconds game, has 5 seconds by default. Duh!</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sDifficultyConfiguration.duration>
  <VrGamesDev.FiveSeconds.VRG_5sDifficultyConfiguration.colorChange>
    <signature>VrGamesDev.FiveSeconds.VRG_5sDifficultyConfiguration.colorChange</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>colorChange</name>
    <token>[Tooltip("Boolean: change color or not, by default 0 (No)")]
[Range(0, 1)]
[SerializeField]
public int colorChange </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sDifficultyConfiguration</scope>
    <comments>
      <summary>Boolean: change color or not, by default 0 (No)</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sDifficultyConfiguration.colorChange>
  <VrGamesDev.FiveSeconds.VRG_5sDifficultyConfiguration.starScore>
    <signature>VrGamesDev.FiveSeconds.VRG_5sDifficultyConfiguration.starScore</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>starScore</name>
    <token>[Tooltip("When you get a Star, the bonus multiplier when the game is over, by default is 1")]
[Range(1.0f, 5.0f)]
[SerializeField]
public float starScore </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sDifficultyConfiguration</scope>
    <comments>
      <summary>When you get a Star, the bonus multiplier when the game is over, by default is 1</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sDifficultyConfiguration.starScore>
  <VrGamesDev.FiveSeconds.VRG_5sDifficultyConfiguration.bonusScore>
    <signature>VrGamesDev.FiveSeconds.VRG_5sDifficultyConfiguration.bonusScore</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>bonusScore</name>
    <token>[Tooltip("Check mark bonus score when the game is over, by default is 1")]
[Range(1.0f, 10.0f)]
[SerializeField]
public float bonusScore </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sDifficultyConfiguration</scope>
    <comments>
      <summary>Check mark bonus score when the game is over, by default is 1</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sDifficultyConfiguration.bonusScore>
  <VrGamesDev.FiveSeconds.VRG_5sDifficulty>
    <signature>VrGamesDev.FiveSeconds.VRG_5sDifficulty</signature>
    <childcount>12</childcount>
    <type>Class</type>
    <name>VRG_5sDifficulty</name>
    <token>public class VRG_5sDifficulty : VRG_Base </token>
    <scope>VrGamesDev.FiveSeconds</scope>
    <comments>
      <summary>Adjust the game difficulty and bonuses</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sDifficulty>
  <VrGamesDev.FiveSeconds.VRG_5sDifficulty.m_Sleeper>
    <signature>VrGamesDev.FiveSeconds.VRG_5sDifficulty.m_Sleeper</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Sleeper</name>
    <token>[Header("From: Difficulty")]
[Tooltip("The lowest difficulty, Sleeper (1)")]
[SerializeField]
private VRG_5sDifficultyConfiguration m_Sleeper </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sDifficulty</scope>
    <comments>
      <summary>The lowest difficulty, Sleeper (1)</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sDifficulty.m_Sleeper>
  <VrGamesDev.FiveSeconds.VRG_5sDifficulty.m_Aware>
    <signature>VrGamesDev.FiveSeconds.VRG_5sDifficulty.m_Aware</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Aware</name>
    <token>[Tooltip("The normal difficulty, Aware (2)")]
[SerializeField]
private VRG_5sDifficultyConfiguration m_Aware </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sDifficulty</scope>
    <comments>
      <summary>The normal difficulty, Aware (2)</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sDifficulty.m_Aware>
  <VrGamesDev.FiveSeconds.VRG_5sDifficulty.m_Enlighten>
    <signature>VrGamesDev.FiveSeconds.VRG_5sDifficulty.m_Enlighten</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Enlighten</name>
    <token>[Tooltip("The Hard difficulty, Enlighten (3)")]
[SerializeField]
private VRG_5sDifficultyConfiguration m_Enlighten </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sDifficulty</scope>
    <comments>
      <summary>The Hard difficulty, Enlighten (3)</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sDifficulty.m_Enlighten>
  <VrGamesDev.FiveSeconds.VRG_5sDifficulty.m_Awaken>
    <signature>VrGamesDev.FiveSeconds.VRG_5sDifficulty.m_Awaken</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Awaken</name>
    <token>[Tooltip("The Hardest difficulty, Awake (4)")]
[SerializeField]
private VRG_5sDifficultyConfiguration m_Awaken </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sDifficulty</scope>
    <comments>
      <summary>The Hardest difficulty, Awake (4)</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sDifficulty.m_Awaken>
  <VrGamesDev.FiveSeconds.VRG_5sDifficulty.m_5sTimer>
    <signature>VrGamesDev.FiveSeconds.VRG_5sDifficulty.m_5sTimer</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_5sTimer</name>
    <token>[Tooltip("From Components: The timer to update (clock backward)")]
[SerializeField]
private VRG_5sTimer m_5sTimer </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sDifficulty</scope>
    <comments>
      <summary>From Components: The timer to update (clock backward)</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sDifficulty.m_5sTimer>
  <VrGamesDev.FiveSeconds.VRG_5sDifficulty.m_5sMap>
    <signature>VrGamesDev.FiveSeconds.VRG_5sDifficulty.m_5sMap</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_5sMap</name>
    <token>[Tooltip("From Components: The 3x3 map, where the game happens")]
[SerializeField]
private VRG_5sMap m_5sMap </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sDifficulty</scope>
    <comments>
      <summary>From Components: The 3x3 map, where the game happens</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sDifficulty.m_5sMap>
  <VrGamesDev.FiveSeconds.VRG_5sDifficulty.m_5sTimerAdd>
    <signature>VrGamesDev.FiveSeconds.VRG_5sDifficulty.m_5sTimerAdd</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_5sTimerAdd</name>
    <token>[Tooltip("From Components: The add module to custom")]
[SerializeField]
private VRG_5sTimerAdd m_5sTimerAdd </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sDifficulty</scope>
    <comments>
      <summary>From Components: The add module to custom</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sDifficulty.m_5sTimerAdd>
  <VrGamesDev.FiveSeconds.VRG_5sDifficulty.m_5sTimerMax>
    <signature>VrGamesDev.FiveSeconds.VRG_5sDifficulty.m_5sTimerMax</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_5sTimerMax</name>
    <token>[Tooltip("From Components: The max timer, you can get above this clock time")]
[SerializeField]
private VRG_5sTimerMax m_5sTimerMax </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sDifficulty</scope>
    <comments>
      <summary>From Components: The max timer, you can get above this clock time</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sDifficulty.m_5sTimerMax>
  <VrGamesDev.FiveSeconds.VRG_5sDifficulty.m_5sTimerLess>
    <signature>VrGamesDev.FiveSeconds.VRG_5sDifficulty.m_5sTimerLess</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_5sTimerLess</name>
    <token>[Tooltip("From Components: The UI minus dancing")]
[SerializeField]
private VRG_5sTimerMax m_5sTimerLess </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sDifficulty</scope>
    <comments>
      <summary>From Components: The UI minus dancing</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sDifficulty.m_5sTimerLess>
  <VrGamesDev.FiveSeconds.VRG_5sDifficulty.m_5sScore>
    <signature>VrGamesDev.FiveSeconds.VRG_5sDifficulty.m_5sScore</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_5sScore</name>
    <token>[Tooltip("From Components: The score UI ")]
[SerializeField]
private VRG_5sScore m_5sScore </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sDifficulty</scope>
    <comments>
      <summary>From Components: The score UI</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sDifficulty.m_5sScore>
  <VrGamesDev.FiveSeconds.VRG_5sDifficulty.Awake_x0028__x0029_>
    <signature>VrGamesDev.FiveSeconds.VRG_5sDifficulty.Awake()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Awake</name>
    <token>private void Awake()</token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sDifficulty</scope>
    <comments>
      <summary>Validate all the From: Components variables, if there is a null, it destroy itself</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sDifficulty.Awake_x0028__x0029_>
  <VrGamesDev.FiveSeconds.VRG_5sDifficulty.Do_x0028__x0029_>
    <signature>VrGamesDev.FiveSeconds.VRG_5sDifficulty.Do()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Do</name>
    <token>protected override IEnumerator Do()</token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sDifficulty</scope>
    <comments>
      <summary>To it's thing modifiy the difficulty settings according with the campaign-&gt;current data</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sDifficulty.Do_x0028__x0029_>
  <VrGamesDev.FiveSeconds.VRG_5sLose>
    <signature>VrGamesDev.FiveSeconds.VRG_5sLose</signature>
    <childcount>3</childcount>
    <type>Class</type>
    <name>VRG_5sLose</name>
    <token>public class VRG_5sLose : VRG_Base </token>
    <scope>VrGamesDev.FiveSeconds</scope>
    <comments>
      <summary>Trigger the Stop function</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sLose>
  <VrGamesDev.FiveSeconds.VRG_5sLose.m_Timer>
    <signature>VrGamesDev.FiveSeconds.VRG_5sLose.m_Timer</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Timer</name>
    <token>[Tooltip("The CountdownTimer component to modify")]
[SerializeField]
private VRG_5sTimer m_Timer </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sLose</scope>
    <comments>
      <summary>The CountdownTimer component to modify</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sLose.m_Timer>
  <VrGamesDev.FiveSeconds.VRG_5sLose.m_Map>
    <signature>VrGamesDev.FiveSeconds.VRG_5sLose.m_Map</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Map</name>
    <token>[Tooltip("The map of the checks, X's and star, where the action happens")]
[SerializeField]
private VRG_5sMap m_Map </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sLose</scope>
    <comments>
      <summary>The map of the checks, X's and star, where the action happens</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sLose.m_Map>
  <VrGamesDev.FiveSeconds.VRG_5sLose.Do_x0028__x0029_>
    <signature>VrGamesDev.FiveSeconds.VRG_5sLose.Do()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Do</name>
    <token>protected override IEnumerator Do()</token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sLose</scope>
    <comments>
      <summary>To it's thing: hide and trigger the timer lose</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sLose.Do_x0028__x0029_>
  <VrGamesDev.FiveSeconds.VRG_5sMap>
    <signature>VrGamesDev.FiveSeconds.VRG_5sMap</signature>
    <childcount>15</childcount>
    <type>Class</type>
    <name>VRG_5sMap</name>
    <token>public class VRG_5sMap : VRG_Base </token>
    <scope>VrGamesDev.FiveSeconds</scope>
    <comments>
      <summary>Control the map of the X-Check-Stars</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sMap>
  <VrGamesDev.FiveSeconds.VRG_5sMap.changeColor>
    <signature>VrGamesDev.FiveSeconds.VRG_5sMap.changeColor</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>changeColor</name>
    <token>public bool changeColor { get; set; }</token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sMap</scope>
    <comments>
      <summary>The chance from 0-5 to spawn 1 star, each number is a 20% chance</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sMap.changeColor>
  <VrGamesDev.FiveSeconds.VRG_5sMap.duration>
    <signature>VrGamesDev.FiveSeconds.VRG_5sMap.duration</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>duration</name>
    <token>public float duration { get; set; }</token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sMap</scope>
    <comments>
      <summary>The chance from 0-5 to spawn 1 star, each number is a 20% chance</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sMap.duration>
  <VrGamesDev.FiveSeconds.VRG_5sMap.starChance>
    <signature>VrGamesDev.FiveSeconds.VRG_5sMap.starChance</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>starChance</name>
    <token>public int starChance { get; set; }</token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sMap</scope>
    <comments>
      <summary>The chance from 0-5 to spawn 1 star, each number is a 20% chance</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sMap.starChance>
  <VrGamesDev.FiveSeconds.VRG_5sMap.m_FAIL>
    <signature>VrGamesDev.FiveSeconds.VRG_5sMap.m_FAIL</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_FAIL</name>
    <token>[Tooltip("The fail buttons game Objects")]
[SerializeField]
private GameObject[] m_FAIL </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sMap</scope>
    <comments>
      <summary>The fail buttons game Objects</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sMap.m_FAIL>
  <VrGamesDev.FiveSeconds.VRG_5sMap.m_PASS>
    <signature>VrGamesDev.FiveSeconds.VRG_5sMap.m_PASS</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_PASS</name>
    <token>[Tooltip("The pass buttons game Objects")]
[SerializeField]
private GameObject[] m_PASS </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sMap</scope>
    <comments>
      <summary>The pass buttons game Objects</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sMap.m_PASS>
  <VrGamesDev.FiveSeconds.VRG_5sMap.m_STAR>
    <signature>VrGamesDev.FiveSeconds.VRG_5sMap.m_STAR</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_STAR</name>
    <token>[Tooltip("The star buttons game Objects")]
[SerializeField]
private GameObject[] m_STAR </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sMap</scope>
    <comments>
      <summary>The star buttons game Objects</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sMap.m_STAR>
  <VrGamesDev.FiveSeconds.VRG_5sMap.m_OnDone>
    <signature>VrGamesDev.FiveSeconds.VRG_5sMap.m_OnDone</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_OnDone</name>
    <token>[Tooltip("When the movement finish Activate the event OnFinish")]
[SerializeField]
private GameObject[] m_OnDone </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sMap</scope>
    <comments>
      <summary>When the movement finish Activate the event OnFinish</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sMap.m_OnDone>
  <VrGamesDev.FiveSeconds.VRG_5sMap.m_Colors>
    <signature>VrGamesDev.FiveSeconds.VRG_5sMap.m_Colors</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Colors</name>
    <token>[Tooltip("When the movement finish Activate the event OnFinish")]
[SerializeField]
private Color32[] m_Colors </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sMap</scope>
    <comments>
      <summary>When the movement finish Activate the event OnFinish</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sMap.m_Colors>
  <VrGamesDev.FiveSeconds.VRG_5sMap.Hide_x0028__x0029_>
    <signature>VrGamesDev.FiveSeconds.VRG_5sMap.Hide()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Hide</name>
    <token>public void Hide()</token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sMap</scope>
    <comments>
      <summary>Hide and unable all the buttons</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sMap.Hide_x0028__x0029_>
  <VrGamesDev.FiveSeconds.VRG_5sMap.Show_x0028__x0029_>
    <signature>VrGamesDev.FiveSeconds.VRG_5sMap.Show()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Show</name>
    <token>public void Show()</token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sMap</scope>
    <comments>
      <summary>Show and enable all the buttons</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sMap.Show_x0028__x0029_>
  <VrGamesDev.FiveSeconds.VRG_5sPlay>
    <signature>VrGamesDev.FiveSeconds.VRG_5sPlay</signature>
    <childcount>6</childcount>
    <type>Class</type>
    <name>VRG_5sPlay</name>
    <token>public class VRG_5sPlay : VRG_Base </token>
    <scope>VrGamesDev.FiveSeconds</scope>
    <comments>
      <summary>Start the timer and activate the map to play the collect game</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sPlay>
  <VrGamesDev.FiveSeconds.VRG_5sPlay.round>
    <signature>VrGamesDev.FiveSeconds.VRG_5sPlay.round</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>round</name>
    <token>public int round { get; set; }</token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sPlay</scope>
    <comments>
      <summary>The current round of the play</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sPlay.round>
  <VrGamesDev.FiveSeconds.VRG_5sPlay.m_Timer>
    <signature>VrGamesDev.FiveSeconds.VRG_5sPlay.m_Timer</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Timer</name>
    <token>[Header("The CountdownTimer component to modify")]
[SerializeField]
private VRG_5sTimer m_Timer </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sPlay</scope>
    <comments>
      <summary>The CountdownTimer component to modify</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sPlay.m_Timer>
  <VrGamesDev.FiveSeconds.VRG_5sPlay.m_Map>
    <signature>VrGamesDev.FiveSeconds.VRG_5sPlay.m_Map</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Map</name>
    <token>[Tooltip("The map of the checks, X's and star")]
[SerializeField]
private VRG_5sMap m_Map </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sPlay</scope>
    <comments>
      <summary>The map of the checks, X's and star</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sPlay.m_Map>
  <VrGamesDev.FiveSeconds.VRG_5sPlay.m_YouWin>
    <signature>VrGamesDev.FiveSeconds.VRG_5sPlay.m_YouWin</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_YouWin</name>
    <token>[Tooltip("Objects to trigger when you win")]
[SerializeField]
private GameObject[] m_YouWin </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sPlay</scope>
    <comments>
      <summary>Objects to trigger when you win</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sPlay.m_YouWin>
  <VrGamesDev.FiveSeconds.VRG_5sPlay.Do_x0028__x0029_>
    <signature>VrGamesDev.FiveSeconds.VRG_5sPlay.Do()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Do</name>
    <token>protected override IEnumerator Do()</token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sPlay</scope>
    <comments>
      <summary>&lt;strong&gt;&lt;em&gt;Do it's thing: &lt;/em&gt;&lt;/strong&gt; Show the map, count and check the game flow</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sPlay.Do_x0028__x0029_>
  <VrGamesDev.FiveSeconds.VRG_5sScore>
    <signature>VrGamesDev.FiveSeconds.VRG_5sScore</signature>
    <childcount>10</childcount>
    <type>Class</type>
    <name>VRG_5sScore</name>
    <token>public class VRG_5sScore : VRG_GrowingNumber </token>
    <scope>VrGamesDev.FiveSeconds</scope>
    <comments>
      <summary>Grow a graphical number used in the score</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sScore>
  <VrGamesDev.FiveSeconds.VRG_5sScore.starMultiplier>
    <signature>VrGamesDev.FiveSeconds.VRG_5sScore.starMultiplier</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>starMultiplier</name>
    <token>public float starMultiplier { get; set; }</token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sScore</scope>
    <comments>
      <summary>The amount to multiply the stars collected</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sScore.starMultiplier>
  <VrGamesDev.FiveSeconds.VRG_5sScore.bonusMultiplier>
    <signature>VrGamesDev.FiveSeconds.VRG_5sScore.bonusMultiplier</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>bonusMultiplier</name>
    <token>public float bonusMultiplier { get; set; }</token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sScore</scope>
    <comments>
      <summary>The amount to multiply the bonus time collected</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sScore.bonusMultiplier>
  <VrGamesDev.FiveSeconds.VRG_5sScore.m_GraphicalNumber>
    <signature>VrGamesDev.FiveSeconds.VRG_5sScore.m_GraphicalNumber</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_GraphicalNumber</name>
    <token>[Tooltip("The Graphical Number to modify")]
[SerializeField]
private VRG_GraphicalNumber m_GraphicalNumber </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sScore</scope>
    <comments>
      <summary>The Graphical Number to modify</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sScore.m_GraphicalNumber>
  <VrGamesDev.FiveSeconds.VRG_5sScore.m_Pass>
    <signature>VrGamesDev.FiveSeconds.VRG_5sScore.m_Pass</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Pass</name>
    <token>[Tooltip("The source data for the checks")]
[SerializeField]
private Text m_Pass </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sScore</scope>
    <comments>
      <summary>The source data for the checks</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sScore.m_Pass>
  <VrGamesDev.FiveSeconds.VRG_5sScore.m_Star>
    <signature>VrGamesDev.FiveSeconds.VRG_5sScore.m_Star</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Star</name>
    <token>[Tooltip("The source data for the stars")]
[SerializeField]
private Text m_Star </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sScore</scope>
    <comments>
      <summary>The source data for the stars</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sScore.m_Star>
  <VrGamesDev.FiveSeconds.VRG_5sScore.m_Bonus>
    <signature>VrGamesDev.FiveSeconds.VRG_5sScore.m_Bonus</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Bonus</name>
    <token>[Tooltip("The source data for the bonus time")]
[SerializeField]
private Text m_Bonus </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sScore</scope>
    <comments>
      <summary>The source data for the bonus time</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sScore.m_Bonus>
  <VrGamesDev.FiveSeconds.VRG_5sScore.Do_x0028__x0029_>
    <signature>VrGamesDev.FiveSeconds.VRG_5sScore.Do()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Do</name>
    <token>protected override IEnumerator Do()</token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sScore</scope>
    <comments>
      <summary>&lt;strong&gt;&lt;em&gt;Do it's thing: &lt;/em&gt;&lt;/strong&gt; Calculate the score and display it, take into consideration the stars and checks</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sScore.Do_x0028__x0029_>
  <VrGamesDev.FiveSeconds.VRG_5sSlider>
    <signature>VrGamesDev.FiveSeconds.VRG_5sSlider</signature>
    <childcount>5</childcount>
    <type>Class</type>
    <name>VRG_5sSlider</name>
    <token>public class VRG_5sSlider : VRG_Base </token>
    <scope>VrGamesDev.FiveSeconds</scope>
    <comments>
      <summary>Start the timer and activate the map to play the collect game and update the slider UI component</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sSlider>
  <VrGamesDev.FiveSeconds.VRG_5sSlider.m_Play>
    <signature>VrGamesDev.FiveSeconds.VRG_5sSlider.m_Play</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Play</name>
    <token>[Tooltip("The Play component that trigger the game over")]
[SerializeField]
private VRG_5sPlay m_Play </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sSlider</scope>
    <comments>
      <summary>The Play component that trigger the game over</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sSlider.m_Play>
  <VrGamesDev.FiveSeconds.VRG_5sSlider.m_Timer>
    <signature>VrGamesDev.FiveSeconds.VRG_5sSlider.m_Timer</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Timer</name>
    <token>[Tooltip("The CountdownTimer component to modify")]
[SerializeField]
private VRG_5sTimer m_Timer </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sSlider</scope>
    <comments>
      <summary>The CountdownTimer component to modify</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sSlider.m_Timer>
  <VrGamesDev.FiveSeconds.VRG_5sSlider.m_Slider>
    <signature>VrGamesDev.FiveSeconds.VRG_5sSlider.m_Slider</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Slider</name>
    <token>[Tooltip("Objects to trigger when you win")]
[SerializeField]
private Slider m_Slider </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sSlider</scope>
    <comments>
      <summary>Objects to trigger when you win</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sSlider.m_Slider>
  <VrGamesDev.FiveSeconds.VRG_5sSlider.Do_x0028__x0029_>
    <signature>VrGamesDev.FiveSeconds.VRG_5sSlider.Do()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Do</name>
    <token>protected override IEnumerator Do()</token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sSlider</scope>
    <comments>
      <summary>&lt;strong&gt;&lt;em&gt;Do it's thing: &lt;/em&gt;&lt;/strong&gt; Start the timer and activate the map to play the collect game and update the slider UI component</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sSlider.Do_x0028__x0029_>
  <VrGamesDev.FiveSeconds.VRG_5sTimer>
    <signature>VrGamesDev.FiveSeconds.VRG_5sTimer</signature>
    <childcount>22</childcount>
    <type>Class</type>
    <name>VRG_5sTimer</name>
    <token>[RequireComponent(typeof(Text))]
public class VRG_5sTimer : VRG_Base </token>
    <scope>VrGamesDev.FiveSeconds</scope>
    <comments>
      <summary>The timer of 5 seconds:
     - It can Lose the game,
     - Stop the timer,
     - set a Max timer,
     - Add or substract time to the timer</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sTimer>
  <VrGamesDev.FiveSeconds.VRG_5sTimer.m_Text>
    <signature>VrGamesDev.FiveSeconds.VRG_5sTimer.m_Text</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Text</name>
    <token>[Tooltip("The text UI component to display the countdown")]
[SerializeField]
private Text m_Text </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sTimer</scope>
    <comments>
      <summary>The text UI component to display the countdown</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sTimer.m_Text>
  <VrGamesDev.FiveSeconds.VRG_5sTimer.m_Time5SecondLimit>
    <signature>VrGamesDev.FiveSeconds.VRG_5sTimer.m_Time5SecondLimit</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Time5SecondLimit</name>
    <token>[Tooltip("The limit of the timer, it can't go above this value")]
[SerializeField]
private float m_Time5SecondLimit </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sTimer</scope>
    <comments>
      <summary>The limit of the timer, it can't go above this value</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sTimer.m_Time5SecondLimit>
  <VrGamesDev.FiveSeconds.VRG_5sTimer.m_Decimals>
    <signature>VrGamesDev.FiveSeconds.VRG_5sTimer.m_Decimals</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Decimals</name>
    <token>[Tooltip("The detail of the floating point")]
[SerializeField]
private int m_Decimals </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sTimer</scope>
    <comments>
      <summary>The detail of the floating point</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sTimer.m_Decimals>
  <VrGamesDev.FiveSeconds.VRG_5sTimer.timeMax>
    <signature>VrGamesDev.FiveSeconds.VRG_5sTimer.timeMax</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>timeMax</name>
    <token>public float timeMax { get; set; }</token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sTimer</scope>
    <comments>
      <summary>The Maximum time to play, 5 seconds is the default, you know, Five seconds game</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sTimer.timeMax>
  <VrGamesDev.FiveSeconds.VRG_5sTimer.time>
    <signature>VrGamesDev.FiveSeconds.VRG_5sTimer.time</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>time</name>
    <token>public float time { get; }</token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sTimer</scope>
    <comments>
      <summary>The current time of the timer</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sTimer.time>
  <VrGamesDev.FiveSeconds.VRG_5sTimer.winTime>
    <signature>VrGamesDev.FiveSeconds.VRG_5sTimer.winTime</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>winTime</name>
    <token>public float winTime { get; set; }</token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sTimer</scope>
    <comments>
      <summary>The time limit to win</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sTimer.winTime>
  <VrGamesDev.FiveSeconds.VRG_5sTimer.winRound>
    <signature>VrGamesDev.FiveSeconds.VRG_5sTimer.winRound</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>winRound</name>
    <token>public int winRound { get; set; }</token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sTimer</scope>
    <comments>
      <summary>The time limit to win</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sTimer.winRound>
  <VrGamesDev.FiveSeconds.VRG_5sTimer.m_OnFail>
    <signature>VrGamesDev.FiveSeconds.VRG_5sTimer.m_OnFail</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_OnFail</name>
    <token>[Tooltip("When you lose the game")]
[SerializeField]
private GameObject[] m_OnFail </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sTimer</scope>
    <comments>
      <summary>When you lose the game</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sTimer.m_OnFail>
  <VrGamesDev.FiveSeconds.VRG_5sTimer.m_OnPass>
    <signature>VrGamesDev.FiveSeconds.VRG_5sTimer.m_OnPass</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_OnPass</name>
    <token>[Tooltip("When it is stopped,trigget the event on Pass")]
[SerializeField]
private GameObject[] m_OnPass </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sTimer</scope>
    <comments>
      <summary>When it is stopped,trigget the event on Pass</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sTimer.m_OnPass>
  <VrGamesDev.FiveSeconds.VRG_5sTimer.m_OnStar>
    <signature>VrGamesDev.FiveSeconds.VRG_5sTimer.m_OnStar</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_OnStar</name>
    <token>[Tooltip("When it is stopped,trigget the event on Star")]
[SerializeField]
private GameObject[] m_OnStar </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sTimer</scope>
    <comments>
      <summary>When it is stopped,trigget the event on Star</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sTimer.m_OnStar>
  <VrGamesDev.FiveSeconds.VRG_5sTimer.Awake_x0028__x0029_>
    <signature>VrGamesDev.FiveSeconds.VRG_5sTimer.Awake()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Awake</name>
    <token>private void Awake()</token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sTimer</scope>
    <comments>
      <summary>Find the Text Element, it is RequireComponent, double check it exist and it is assigned</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sTimer.Awake_x0028__x0029_>
  <VrGamesDev.FiveSeconds.VRG_5sTimer.Display_x0028__x0029_>
    <signature>VrGamesDev.FiveSeconds.VRG_5sTimer.Display()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Display</name>
    <token>private void Display()</token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sTimer</scope>
    <comments>
      <summary>Update and display the data into the Text</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sTimer.Display_x0028__x0029_>
  <VrGamesDev.FiveSeconds.VRG_5sTimer.Do_x0028__x0029_>
    <signature>VrGamesDev.FiveSeconds.VRG_5sTimer.Do()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Do</name>
    <token>protected override IEnumerator Do()</token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sTimer</scope>
    <comments>
      <summary>&lt;strong&gt;&lt;em&gt;Do it's thing: &lt;/em&gt;&lt;/strong&gt; Run the timer and count backward from the m_TimeMax.</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sTimer.Do_x0028__x0029_>
  <VrGamesDev.FiveSeconds.VRG_5sTimer.Lose_x0028__x0029_>
    <signature>VrGamesDev.FiveSeconds.VRG_5sTimer.Lose()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Lose</name>
    <token>public void Lose()</token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sTimer</scope>
    <comments>
      <summary>When you lose the game stop everything and call the OnFail listeners</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sTimer.Lose_x0028__x0029_>
  <VrGamesDev.FiveSeconds.VRG_5sTimer.Stop_x0028__x0029_>
    <signature>VrGamesDev.FiveSeconds.VRG_5sTimer.Stop()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Stop</name>
    <token>public void Stop()</token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sTimer</scope>
    <comments>
      <summary>Stop the timer, and call the listeners depending on the timer</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sTimer.Stop_x0028__x0029_>
  <VrGamesDev.FiveSeconds.VRG_5sTimer.Max_x0028_float_x0029_>
    <signature>VrGamesDev.FiveSeconds.VRG_5sTimer.Max(float)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Max</name>
    <token>public void Max(float valueLocal)</token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sTimer</scope>
    <comments>
      <summary>Add an amount of seconds to the max timer</summary>
      <param-valueLocal>The value to add to the max timer</param-valueLocal>
    </comments>
    <params>
      <valueLocal>float</valueLocal>
    </params>
  </VrGamesDev.FiveSeconds.VRG_5sTimer.Max_x0028_float_x0029_>
  <VrGamesDev.FiveSeconds.VRG_5sTimer.Add_x0028_float_x0029_>
    <signature>VrGamesDev.FiveSeconds.VRG_5sTimer.Add(float)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Add</name>
    <token>public void Add(float valueLocal)</token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sTimer</scope>
    <comments>
      <summary>Add an ammount of seconds to current time</summary>
      <param-valueLocal>The value to add to the current time</param-valueLocal>
    </comments>
    <params>
      <valueLocal>float</valueLocal>
    </params>
  </VrGamesDev.FiveSeconds.VRG_5sTimer.Add_x0028_float_x0029_>
  <VrGamesDev.FiveSeconds.VRG_5sTimerAdd>
    <signature>VrGamesDev.FiveSeconds.VRG_5sTimerAdd</signature>
    <childcount>4</childcount>
    <type>Class</type>
    <name>VRG_5sTimerAdd</name>
    <token>public class VRG_5sTimerAdd : VRG_Base </token>
    <scope>VrGamesDev.FiveSeconds</scope>
    <comments>
      <summary>Trigger the Add function, increment the current time</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sTimerAdd>
  <VrGamesDev.FiveSeconds.VRG_5sTimerAdd.m_Timer>
    <signature>VrGamesDev.FiveSeconds.VRG_5sTimerAdd.m_Timer</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Timer</name>
    <token>[Tooltip("The CountdownTimer component to modify")]
[SerializeField]
private VRG_5sTimer m_Timer </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sTimerAdd</scope>
    <comments>
      <summary>The CountdownTimer component to modify</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sTimerAdd.m_Timer>
  <VrGamesDev.FiveSeconds.VRG_5sTimerAdd.amount>
    <signature>VrGamesDev.FiveSeconds.VRG_5sTimerAdd.amount</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>amount</name>
    <token>public float amount { get; set; }</token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sTimerAdd</scope>
    <comments>
      <summary>The amount to add to the current time in the timer</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sTimerAdd.amount>
  <VrGamesDev.FiveSeconds.VRG_5sTimerAdd.Do_x0028__x0029_>
    <signature>VrGamesDev.FiveSeconds.VRG_5sTimerAdd.Do()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Do</name>
    <token>protected override IEnumerator Do()</token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sTimerAdd</scope>
    <comments>
      <summary>&lt;strong&gt;&lt;em&gt;Do it's thing: &lt;/em&gt;&lt;/strong&gt; Add the amount seconds to the timer</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sTimerAdd.Do_x0028__x0029_>
  <VrGamesDev.FiveSeconds.VRG_5sTimerMax>
    <signature>VrGamesDev.FiveSeconds.VRG_5sTimerMax</signature>
    <childcount>5</childcount>
    <type>Class</type>
    <name>VRG_5sTimerMax</name>
    <token>public class VRG_5sTimerMax : VRG_Base </token>
    <scope>VrGamesDev.FiveSeconds</scope>
    <comments>
      <summary>Trigger the Max function, increment the Maximum time from timer</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sTimerMax>
  <VrGamesDev.FiveSeconds.VRG_5sTimerMax.amount>
    <signature>VrGamesDev.FiveSeconds.VRG_5sTimerMax.amount</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>amount</name>
    <token>public float amount { get; set; }</token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sTimerMax</scope>
    <comments>
      <summary>The amount to add to the Max time in the timer</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sTimerMax.amount>
  <VrGamesDev.FiveSeconds.VRG_5sTimerMax.m_Timer>
    <signature>VrGamesDev.FiveSeconds.VRG_5sTimerMax.m_Timer</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Timer</name>
    <token>[Tooltip("FROM Components: The CountdownTimer component to modify")]
[SerializeField]
private VRG_5sTimer m_Timer </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sTimerMax</scope>
    <comments>
      <summary>FROM Components: The CountdownTimer component to modify</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sTimerMax.m_Timer>
  <VrGamesDev.FiveSeconds.VRG_5sTimerMax.m_Text>
    <signature>VrGamesDev.FiveSeconds.VRG_5sTimerMax.m_Text</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Text</name>
    <token>[Tooltip("FROM Components: The CountdownTimer Text UI")]
[SerializeField]
private Text m_Text </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sTimerMax</scope>
    <comments>
      <summary>FROM Components: The CountdownTimer Text UI</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sTimerMax.m_Text>
  <VrGamesDev.FiveSeconds.VRG_5sTimerMax.Do_x0028__x0029_>
    <signature>VrGamesDev.FiveSeconds.VRG_5sTimerMax.Do()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Do</name>
    <token>protected override IEnumerator Do()</token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sTimerMax</scope>
    <comments>
      <summary>&lt;strong&gt;&lt;em&gt;Do it's thing: &lt;/em&gt;&lt;/strong&gt; Set the max amount seconds possible</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sTimerMax.Do_x0028__x0029_>
  <VrGamesDev.FiveSeconds.VRG_5sTimerProxy>
    <signature>VrGamesDev.FiveSeconds.VRG_5sTimerProxy</signature>
    <childcount>3</childcount>
    <type>Class</type>
    <name>VRG_5sTimerProxy</name>
    <token>public class VRG_5sTimerProxy : VRG_Move </token>
    <scope>VrGamesDev.FiveSeconds</scope>
    <comments>
      <summary>Create a proxy from the Timer and move it to the target</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sTimerProxy>
  <VrGamesDev.FiveSeconds.VRG_5sTimerProxy.m_Timer>
    <signature>VrGamesDev.FiveSeconds.VRG_5sTimerProxy.m_Timer</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Timer</name>
    <token>[Tooltip("The CountdownTimer component to modify")]
[SerializeField]
private VRG_5sTimer m_Timer </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sTimerProxy</scope>
    <comments>
      <summary>The CountdownTimer component to modify</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sTimerProxy.m_Timer>
  <VrGamesDev.FiveSeconds.VRG_5sTimerProxy.m_MyText>
    <signature>VrGamesDev.FiveSeconds.VRG_5sTimerProxy.m_MyText</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_MyText</name>
    <token>[Tooltip("The proxy text")]
[SerializeField]
private Text m_MyText </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sTimerProxy</scope>
    <comments>
      <summary>The proxy text</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sTimerProxy.m_MyText>
  <VrGamesDev.FiveSeconds.VRG_5sTimerProxy.Do_x0028__x0029_>
    <signature>VrGamesDev.FiveSeconds.VRG_5sTimerProxy.Do()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Do</name>
    <token>protected override IEnumerator Do()</token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sTimerProxy</scope>
    <comments>
      <summary>&lt;strong&gt;&lt;em&gt;Do it's thing: &lt;/em&gt;&lt;/strong&gt; Create a proxy text and copy the value</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sTimerProxy.Do_x0028__x0029_>
  <VrGamesDev.FiveSeconds.VRG_5sTimerStop>
    <signature>VrGamesDev.FiveSeconds.VRG_5sTimerStop</signature>
    <childcount>3</childcount>
    <type>Class</type>
    <name>VRG_5sTimerStop</name>
    <token>public class VRG_5sTimerStop : VRG_Base </token>
    <scope>VrGamesDev.FiveSeconds</scope>
    <comments>
      <summary>Trigger the Stop function from timer</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sTimerStop>
  <VrGamesDev.FiveSeconds.VRG_5sTimerStop.m_Timer>
    <signature>VrGamesDev.FiveSeconds.VRG_5sTimerStop.m_Timer</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Timer</name>
    <token>[Tooltip("The CountdownTimer component to modify")]
[SerializeField]
private VRG_5sTimer m_Timer </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sTimerStop</scope>
    <comments>
      <summary>The CountdownTimer component to modify</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sTimerStop.m_Timer>
  <VrGamesDev.FiveSeconds.VRG_5sTimerStop.m_Map>
    <signature>VrGamesDev.FiveSeconds.VRG_5sTimerStop.m_Map</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Map</name>
    <token>[Tooltip("The map of the checks, X's and star")]
[SerializeField]
private VRG_5sMap m_Map </token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sTimerStop</scope>
    <comments>
      <summary>The map of the checks, X's and star</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sTimerStop.m_Map>
  <VrGamesDev.FiveSeconds.VRG_5sTimerStop.Do_x0028__x0029_>
    <signature>VrGamesDev.FiveSeconds.VRG_5sTimerStop.Do()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Do</name>
    <token>protected override IEnumerator Do()</token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sTimerStop</scope>
    <comments>
      <summary>&lt;strong&gt;&lt;em&gt;Do it's thing: &lt;/em&gt;&lt;/strong&gt; Hide the map and stop the timer.</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sTimerStop.Do_x0028__x0029_>
  <VrGamesDev.FiveSeconds.VRG_5sTitle>
    <signature>VrGamesDev.FiveSeconds.VRG_5sTitle</signature>
    <childcount>1</childcount>
    <type>Class</type>
    <name>VRG_5sTitle</name>
    <token>public class VRG_5sTitle : VRG_SessionData </token>
    <scope>VrGamesDev.FiveSeconds</scope>
    <comments>
      <summary>It shows the correct title according to the Session data difficulty</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sTitle>
  <VrGamesDev.FiveSeconds.VRG_5sTitle.Do_x0028__x0029_>
    <signature>VrGamesDev.FiveSeconds.VRG_5sTitle.Do()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Do</name>
    <token>protected override IEnumerator Do()</token>
    <scope>VrGamesDev.FiveSeconds.VRG_5sTitle</scope>
    <comments>
      <summary>&lt;strong&gt;&lt;em&gt;Do it's thing: &lt;/em&gt;&lt;/strong&gt; Display the named child and hide the others.</summary>
    </comments>
  </VrGamesDev.FiveSeconds.VRG_5sTitle.Do_x0028__x0029_>
  <VrGamesDev.BHEL>
    <signature>VrGamesDev.BHEL</signature>
    <childcount>1</childcount>
    <type>Namespace</type>
    <name>VrGamesDev.BHEL</name>
    <token>namespace VrGamesDev.BHEL</token>
    <scope></scope>
    <comments>
      <summary>VRG_BHEL Namespace, Beautiful Html Enhanced Logs, let get you the most useful
 and well documented logs to track bugs, or follow the flow of your game.
 You can custom:&lt;br&gt;&lt;/br&gt;
 - The level of verbosity,
 - Where and how they will be saved,
 - and the Html visuals,&lt;br&gt;&lt;/br&gt;
 By default is in a preconfigured folder. You can find the Logs, in the
 “[Your-project's-name] / LogsLocal / [Your-project's-name].html"

 You can download it from &lt;a href="https://assetstore.unity.com/packages/slug/186164"&gt;here&lt;/a&gt;</summary>
    </comments>
  </VrGamesDev.BHEL>
  <VrGamesDev.BHEL.VRG_Bhel>
    <signature>VrGamesDev.BHEL.VRG_Bhel</signature>
    <childcount>11</childcount>
    <type>Class</type>
    <name>VRG_Bhel</name>
    <token>public class VRG_Bhel : VRG_Base </token>
    <scope>VrGamesDev.BHEL</scope>
    <comments>
      <summary>Colored debug simplified</summary>
    </comments>
  </VrGamesDev.BHEL.VRG_Bhel>
  <VrGamesDev.BHEL.VRG_Bhel.Instance>
    <signature>VrGamesDev.BHEL.VRG_Bhel.Instance</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>Instance</name>
    <token>public static VRG_Bhel Instance </token>
    <scope>VrGamesDev.BHEL.VRG_Bhel</scope>
    <comments>
      <summary>Singleton pattern, Instance is the variable that save the data from every class.</summary>
    </comments>
  </VrGamesDev.BHEL.VRG_Bhel.Instance>
  <VrGamesDev.BHEL.VRG_Bhel.Do_x0028_string_x002C__x0020_string_x002C__x0020_ENUM_Verbose_x002C__x0020_string_x0029_>
    <signature>VrGamesDev.BHEL.VRG_Bhel.Do(string, string, ENUM_Verbose, string)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Do</name>
    <token>public static void Do(string valueLocal, string fromWhereLocal, ENUM_Verbose ENUM_VerboseLocal, string gameObjectLocal)</token>
    <scope>VrGamesDev.BHEL.VRG_Bhel</scope>
    <comments>
      <summary>Do the work you are supposed to do, send the message to the console, easy and clean</summary>
      <param-valueLocal>The string message to send to the log file</param-valueLocal>
      <param-fromWhereLocal>Helps to understand who summon the log</param-fromWhereLocal>
      <param-ENUM_VerboseLocal>Custom Verbose level, the higher the less likely it will be to be saved</param-ENUM_VerboseLocal>
      <param-gameObjectLocal>The object that summons this</param-gameObjectLocal>
    </comments>
    <params>
      <valueLocal>string</valueLocal>
      <fromWhereLocal>string</fromWhereLocal>
      <ENUM_VerboseLocal>ENUM_Verbose</ENUM_VerboseLocal>
      <gameObjectLocal>string</gameObjectLocal>
    </params>
  </VrGamesDev.BHEL.VRG_Bhel.Do_x0028_string_x002C__x0020_string_x002C__x0020_ENUM_Verbose_x002C__x0020_string_x0029_>
  <VrGamesDev>
    <signature>VrGamesDev</signature>
    <childcount>82</childcount>
    <type>Namespace</type>
    <name>VrGamesDev</name>
    <token>namespace VrGamesDev</token>
    <scope></scope>
    <comments>
      <summary>The main namespace, all the packages inherit from the class &lt;a href="index.html#VrGamesDev.VRG_Base"&gt;VRG_Base&lt;/a&gt;.
 
 It has the base and core classes, It also contains general purpose utility
 functions to handle and mofidy objects
 or simple process like destroy, parent, unparent or rotate.</summary>
    </comments>
  </VrGamesDev>
  <VrGamesDev.ENUM_AudioMixer>
    <signature>VrGamesDev.ENUM_AudioMixer</signature>
    <childcount>6</childcount>
    <type>Enum</type>
    <name>ENUM_AudioMixer</name>
    <token>public enum ENUM_AudioMixer </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>Audio mixer channels, they should be the same as the main mixer audio channels
     you need to configure this volume in the &lt;a href="https://docs.unity3d.com/Manual/AudioMixer.html"&gt;AudioMixer&lt;/a&gt;
     When you create a &lt;a href="https://docs.unity3d.com/ScriptReference/AudioSource.html"&gt;Audio source&lt;/a&gt;,
     configure the output with this values</summary>
    </comments>
  </VrGamesDev.ENUM_AudioMixer>
  <VrGamesDev.ENUM_AudioMixer.Master>
    <signature>VrGamesDev.ENUM_AudioMixer.Master</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>Master</name>
    <token>Master</token>
    <scope>VrGamesDev.ENUM_AudioMixer</scope>
    <comments>
      <summary>Master channel, it controls every single volume</summary>
    </comments>
  </VrGamesDev.ENUM_AudioMixer.Master>
  <VrGamesDev.ENUM_AudioMixer.Music>
    <signature>VrGamesDev.ENUM_AudioMixer.Music</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>Music</name>
    <token>Music</token>
    <scope>VrGamesDev.ENUM_AudioMixer</scope>
    <comments>
      <summary>The music channel, it is the background music</summary>
    </comments>
  </VrGamesDev.ENUM_AudioMixer.Music>
  <VrGamesDev.ENUM_AudioMixer.SFx>
    <signature>VrGamesDev.ENUM_AudioMixer.SFx</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>SFx</name>
    <token>SFx</token>
    <scope>VrGamesDev.ENUM_AudioMixer</scope>
    <comments>
      <summary>Sound effects</summary>
    </comments>
  </VrGamesDev.ENUM_AudioMixer.SFx>
  <VrGamesDev.ENUM_AudioMixer.UI>
    <signature>VrGamesDev.ENUM_AudioMixer.UI</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>UI</name>
    <token>UI</token>
    <scope>VrGamesDev.ENUM_AudioMixer</scope>
    <comments>
      <summary>The ui clicks and beeps</summary>
    </comments>
  </VrGamesDev.ENUM_AudioMixer.UI>
  <VrGamesDev.ENUM_AudioMixer.Ambience>
    <signature>VrGamesDev.ENUM_AudioMixer.Ambience</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>Ambience</name>
    <token>Ambience</token>
    <scope>VrGamesDev.ENUM_AudioMixer</scope>
    <comments>
      <summary>The ambience sounds, it is used with the music to provide a good experience</summary>
    </comments>
  </VrGamesDev.ENUM_AudioMixer.Ambience>
  <VrGamesDev.ENUM_AudioMixer.Voice>
    <signature>VrGamesDev.ENUM_AudioMixer.Voice</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>Voice</name>
    <token>Voice</token>
    <scope>VrGamesDev.ENUM_AudioMixer</scope>
    <comments>
      <summary>Voices in case your game needs it</summary>
    </comments>
  </VrGamesDev.ENUM_AudioMixer.Voice>
  <VrGamesDev.ENUM_DataType>
    <signature>VrGamesDev.ENUM_DataType</signature>
    <childcount>4</childcount>
    <type>Enum</type>
    <name>ENUM_DataType</name>
    <token>public enum ENUM_DataType </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>The data types supported by the &lt;a href="#VrGamesDev.VRG_Session"&gt;VRG_Session&lt;/a&gt; class</summary>
    </comments>
  </VrGamesDev.ENUM_DataType>
  <VrGamesDev.ENUM_DataType.BOOL>
    <signature>VrGamesDev.ENUM_DataType.BOOL</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>BOOL</name>
    <token>BOOL</token>
    <scope>VrGamesDev.ENUM_DataType</scope>
    <comments>
      <summary>A &lt;a href="https://docs.microsoft.com/en-us/dotnet/api/system.boolean.parse?view=net-5.0"&gt;Bool data type&lt;/a&gt; used in &lt;a href="#VrGamesDev.VRG_RemoteBool"&gt;VRG_RemoteBool&lt;/a&gt; struct by the &lt;a href="#VrGamesDev.VRG_Remote"&gt;VRG_Remote&lt;/a&gt; class</summary>
    </comments>
  </VrGamesDev.ENUM_DataType.BOOL>
  <VrGamesDev.ENUM_DataType.INT>
    <signature>VrGamesDev.ENUM_DataType.INT</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>INT</name>
    <token>INT</token>
    <scope>VrGamesDev.ENUM_DataType</scope>
    <comments>
      <summary>A &lt;a href="https://docs.microsoft.com/en-us/dotnet/api/system.int32.parse?view=net-5.0"&gt;Int data type&lt;/a&gt; used in &lt;a href="#VrGamesDev.VRG_RemoteInt"&gt;VRG_RemoteInt&lt;/a&gt; struct by the &lt;a href="#VrGamesDev.VRG_Remote"&gt;VRG_Remote&lt;/a&gt; class</summary>
    </comments>
  </VrGamesDev.ENUM_DataType.INT>
  <VrGamesDev.ENUM_DataType.FLOAT>
    <signature>VrGamesDev.ENUM_DataType.FLOAT</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>FLOAT</name>
    <token>FLOAT</token>
    <scope>VrGamesDev.ENUM_DataType</scope>
    <comments>
      <summary>A &lt;a href="https://docs.microsoft.com/en-us/dotnet/api/system.single.parse?view=net-5.0"&gt;Float data type&lt;/a&gt; used in &lt;a href="#VrGamesDev.VRG_RemoteFloat"&gt;VRG_RemoteFloat&lt;/a&gt; struct by the &lt;a href="#VrGamesDev.VRG_Remote"&gt;VRG_Remote&lt;/a&gt; class</summary>
    </comments>
  </VrGamesDev.ENUM_DataType.FLOAT>
  <VrGamesDev.ENUM_DataType.STRING>
    <signature>VrGamesDev.ENUM_DataType.STRING</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>STRING</name>
    <token>STRING</token>
    <scope>VrGamesDev.ENUM_DataType</scope>
    <comments>
      <summary>A &lt;a href="https://docs.unity3d.com/ScriptReference/String.html"&gt;String data type&lt;/a&gt; used in &lt;a href="#VrGamesDev.VRG_RemoteString"&gt;VRG_RemoteString&lt;/a&gt; struct by the &lt;a href="#VrGamesDev.VRG_Remote"&gt;VRG_Remote&lt;/a&gt; class</summary>
    </comments>
  </VrGamesDev.ENUM_DataType.STRING>
  <VrGamesDev.ENUM_Fader>
    <signature>VrGamesDev.ENUM_Fader</signature>
    <childcount>4</childcount>
    <type>Enum</type>
    <name>ENUM_Fader</name>
    <token>public enum ENUM_Fader </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>It just show the internal FSM status of the &lt;a href="#VrGamesDev.VRG_Fader"&gt;VRG_Fader&lt;/a&gt;</summary>
    </comments>
  </VrGamesDev.ENUM_Fader>
  <VrGamesDev.ENUM_Fader.NONE>
    <signature>VrGamesDev.ENUM_Fader.NONE</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>NONE</name>
    <token>NONE</token>
    <scope>VrGamesDev.ENUM_Fader</scope>
    <comments>
      <summary>The fader is not doing anything, all is visible</summary>
    </comments>
  </VrGamesDev.ENUM_Fader.NONE>
  <VrGamesDev.ENUM_Fader.FADE_IN>
    <signature>VrGamesDev.ENUM_Fader.FADE_IN</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>FADE_IN</name>
    <token>FADE_IN</token>
    <scope>VrGamesDev.ENUM_Fader</scope>
    <comments>
      <summary>The fader is fading in</summary>
    </comments>
  </VrGamesDev.ENUM_Fader.FADE_IN>
  <VrGamesDev.ENUM_Fader.FADED>
    <signature>VrGamesDev.ENUM_Fader.FADED</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>FADED</name>
    <token>FADED</token>
    <scope>VrGamesDev.ENUM_Fader</scope>
    <comments>
      <summary>The fader is fully faded, it can just fade out</summary>
    </comments>
  </VrGamesDev.ENUM_Fader.FADED>
  <VrGamesDev.ENUM_Fader.FADE_OUT>
    <signature>VrGamesDev.ENUM_Fader.FADE_OUT</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>FADE_OUT</name>
    <token>FADE_OUT</token>
    <scope>VrGamesDev.ENUM_Fader</scope>
    <comments>
      <summary>Th fader is fading out</summary>
    </comments>
  </VrGamesDev.ENUM_Fader.FADE_OUT>
  <VrGamesDev.ENUM_Mission>
    <signature>VrGamesDev.ENUM_Mission</signature>
    <childcount>4</childcount>
    <type>Enum</type>
    <name>ENUM_Mission</name>
    <token>public enum ENUM_Mission </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>The states of the FSM Mission's system of &lt;a href="#VrGamesDev.VRG_Campaign"&gt;VRG_Campaign&lt;/a&gt;</summary>
    </comments>
  </VrGamesDev.ENUM_Mission>
  <VrGamesDev.ENUM_Mission.FAIL>
    <signature>VrGamesDev.ENUM_Mission.FAIL</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>FAIL</name>
    <token>FAIL</token>
    <scope>VrGamesDev.ENUM_Mission</scope>
    <comments>
      <summary>When it fails the mission</summary>
    </comments>
  </VrGamesDev.ENUM_Mission.FAIL>
  <VrGamesDev.ENUM_Mission.NEXT>
    <signature>VrGamesDev.ENUM_Mission.NEXT</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>NEXT</name>
    <token>NEXT</token>
    <scope>VrGamesDev.ENUM_Mission</scope>
    <comments>
      <summary>It goes to the next one, from the current mission</summary>
    </comments>
  </VrGamesDev.ENUM_Mission.NEXT>
  <VrGamesDev.ENUM_Mission.PASS>
    <signature>VrGamesDev.ENUM_Mission.PASS</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>PASS</name>
    <token>PASS</token>
    <scope>VrGamesDev.ENUM_Mission</scope>
    <comments>
      <summary>THe mission was successfully completed</summary>
    </comments>
  </VrGamesDev.ENUM_Mission.PASS>
  <VrGamesDev.ENUM_Mission.STAR>
    <signature>VrGamesDev.ENUM_Mission.STAR</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>STAR</name>
    <token>STAR</token>
    <scope>VrGamesDev.ENUM_Mission</scope>
    <comments>
      <summary>IT was complted with excelence, it deserver a star</summary>
    </comments>
  </VrGamesDev.ENUM_Mission.STAR>
  <VrGamesDev.ENUM_VRG_Remote>
    <signature>VrGamesDev.ENUM_VRG_Remote</signature>
    <childcount>5</childcount>
    <type>Enum</type>
    <name>ENUM_VRG_Remote</name>
    <token>public enum ENUM_VRG_Remote </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>Shows the internal FSM status of the &lt;a href="#VrGamesDev.VRG_Remote"&gt;VRG_Remote&lt;/a&gt;</summary>
    </comments>
  </VrGamesDev.ENUM_VRG_Remote>
  <VrGamesDev.ENUM_VRG_Remote.NONE>
    <signature>VrGamesDev.ENUM_VRG_Remote.NONE</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>NONE</name>
    <token>NONE</token>
    <scope>VrGamesDev.ENUM_VRG_Remote</scope>
    <comments>
      <summary>It is disable, or has not started</summary>
    </comments>
  </VrGamesDev.ENUM_VRG_Remote.NONE>
  <VrGamesDev.ENUM_VRG_Remote.INIT>
    <signature>VrGamesDev.ENUM_VRG_Remote.INIT</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>INIT</name>
    <token>INIT</token>
    <scope>VrGamesDev.ENUM_VRG_Remote</scope>
    <comments>
      <summary>It just inited, and starting its processes</summary>
    </comments>
  </VrGamesDev.ENUM_VRG_Remote.INIT>
  <VrGamesDev.ENUM_VRG_Remote.WAITING>
    <signature>VrGamesDev.ENUM_VRG_Remote.WAITING</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>WAITING</name>
    <token>WAITING</token>
    <scope>VrGamesDev.ENUM_VRG_Remote</scope>
    <comments>
      <summary>Waiting for the remote server config answer the petitions</summary>
    </comments>
  </VrGamesDev.ENUM_VRG_Remote.WAITING>
  <VrGamesDev.ENUM_VRG_Remote.UPDATING>
    <signature>VrGamesDev.ENUM_VRG_Remote.UPDATING</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>UPDATING</name>
    <token>UPDATING</token>
    <scope>VrGamesDev.ENUM_VRG_Remote</scope>
    <comments>
      <summary>Updating the local data with the remote data</summary>
    </comments>
  </VrGamesDev.ENUM_VRG_Remote.UPDATING>
  <VrGamesDev.ENUM_VRG_Remote.READY>
    <signature>VrGamesDev.ENUM_VRG_Remote.READY</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>READY</name>
    <token>READY</token>
    <scope>VrGamesDev.ENUM_VRG_Remote</scope>
    <comments>
      <summary>I'm ready, query me for info</summary>
    </comments>
  </VrGamesDev.ENUM_VRG_Remote.READY>
  <VrGamesDev.ENUM_VRG_UIColor>
    <signature>VrGamesDev.ENUM_VRG_UIColor</signature>
    <childcount>4</childcount>
    <type>Enum</type>
    <name>ENUM_VRG_UIColor</name>
    <token>public enum ENUM_VRG_UIColor </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>The kind of color to colorize an image or a renderer when a skin is set
     to any &lt;a href="#VrGamesDev.VRG_UI"&gt;VRG_UI&lt;/a&gt; component</summary>
    </comments>
  </VrGamesDev.ENUM_VRG_UIColor>
  <VrGamesDev.ENUM_VRG_UIColor.NONE>
    <signature>VrGamesDev.ENUM_VRG_UIColor.NONE</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>NONE</name>
    <token>NONE</token>
    <scope>VrGamesDev.ENUM_VRG_UIColor</scope>
    <comments>
      <summary>This element will not be colored</summary>
    </comments>
  </VrGamesDev.ENUM_VRG_UIColor.NONE>
  <VrGamesDev.ENUM_VRG_UIColor.BACKGROUND>
    <signature>VrGamesDev.ENUM_VRG_UIColor.BACKGROUND</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>BACKGROUND</name>
    <token>BACKGROUND</token>
    <scope>VrGamesDev.ENUM_VRG_UIColor</scope>
    <comments>
      <summary>Assign the background color and all its aspect</summary>
    </comments>
  </VrGamesDev.ENUM_VRG_UIColor.BACKGROUND>
  <VrGamesDev.ENUM_VRG_UIColor.FOREGROUND>
    <signature>VrGamesDev.ENUM_VRG_UIColor.FOREGROUND</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>FOREGROUND</name>
    <token>FOREGROUND</token>
    <scope>VrGamesDev.ENUM_VRG_UIColor</scope>
    <comments>
      <summary>Assign the foreground color</summary>
    </comments>
  </VrGamesDev.ENUM_VRG_UIColor.FOREGROUND>
  <VrGamesDev.ENUM_VRG_UIColor.THIRD>
    <signature>VrGamesDev.ENUM_VRG_UIColor.THIRD</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>THIRD</name>
    <token>THIRD</token>
    <scope>VrGamesDev.ENUM_VRG_UIColor</scope>
    <comments>
      <summary>Assign the third color from the VRG_Skin element</summary>
    </comments>
  </VrGamesDev.ENUM_VRG_UIColor.THIRD>
  <VrGamesDev.ENUM_VRG_UIExcept>
    <signature>VrGamesDev.ENUM_VRG_UIExcept</signature>
    <childcount>3</childcount>
    <type>Enum</type>
    <name>ENUM_VRG_UIExcept</name>
    <token>public enum ENUM_VRG_UIExcept </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>The type of exception to make on this game object when evaluated by the &lt;a href="#VrGamesDev.VRG_UI"&gt;VRG_UI&lt;/a&gt;</summary>
    </comments>
  </VrGamesDev.ENUM_VRG_UIExcept>
  <VrGamesDev.ENUM_VRG_UIExcept.NONE>
    <signature>VrGamesDev.ENUM_VRG_UIExcept.NONE</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>NONE</name>
    <token>NONE</token>
    <scope>VrGamesDev.ENUM_VRG_UIExcept</scope>
    <comments>
      <summary>It will not be excepted</summary>
    </comments>
  </VrGamesDev.ENUM_VRG_UIExcept.NONE>
  <VrGamesDev.ENUM_VRG_UIExcept.SELF>
    <signature>VrGamesDev.ENUM_VRG_UIExcept.SELF</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>SELF</name>
    <token>SELF</token>
    <scope>VrGamesDev.ENUM_VRG_UIExcept</scope>
    <comments>
      <summary>Just except this game object</summary>
    </comments>
  </VrGamesDev.ENUM_VRG_UIExcept.SELF>
  <VrGamesDev.ENUM_VRG_UIExcept.ALL_CHILDREN>
    <signature>VrGamesDev.ENUM_VRG_UIExcept.ALL_CHILDREN</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>ALL_CHILDREN</name>
    <token>ALL_CHILDREN</token>
    <scope>VrGamesDev.ENUM_VRG_UIExcept</scope>
    <comments>
      <summary>It except itself and all its child, EVERYBODY</summary>
    </comments>
  </VrGamesDev.ENUM_VRG_UIExcept.ALL_CHILDREN>
  <VrGamesDev.ENUM_Verbose>
    <signature>VrGamesDev.ENUM_Verbose</signature>
    <childcount>6</childcount>
    <type>Enum</type>
    <name>ENUM_Verbose</name>
    <token>public enum ENUM_Verbose </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>Level of verbose, there are 7 level of verbose from silence up to full debug</summary>
    </comments>
  </VrGamesDev.ENUM_Verbose>
  <VrGamesDev.ENUM_Verbose.NONE>
    <signature>VrGamesDev.ENUM_Verbose.NONE</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>NONE</name>
    <token>NONE = 0</token>
    <scope>VrGamesDev.ENUM_Verbose</scope>
    <comments>
      <summary>ENUM_Verbose.NONE = Silence, NONE is always sent to the editor log window</summary>
    </comments>
  </VrGamesDev.ENUM_Verbose.NONE>
  <VrGamesDev.ENUM_Verbose.ERROR>
    <signature>VrGamesDev.ENUM_Verbose.ERROR</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>ERROR</name>
    <token>ERROR = 1</token>
    <scope>VrGamesDev.ENUM_Verbose</scope>
    <comments>
      <summary>ENUM_Verbose.&lt;font color = red&gt; ERROR &lt;/font&gt; = When you need to show an error to the user and record a posible failure</summary>
    </comments>
  </VrGamesDev.ENUM_Verbose.ERROR>
  <VrGamesDev.ENUM_Verbose.WARNING>
    <signature>VrGamesDev.ENUM_Verbose.WARNING</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>WARNING</name>
    <token>WARNING = 2</token>
    <scope>VrGamesDev.ENUM_Verbose</scope>
    <comments>
      <summary>ENUM_Verbose.&lt;font color = yellow&gt; WARNING &lt;/font&gt; = Something was cheesy, if something is wacky, strange, or unexpected</summary>
    </comments>
  </VrGamesDev.ENUM_Verbose.WARNING>
  <VrGamesDev.ENUM_Verbose.LOGS>
    <signature>VrGamesDev.ENUM_Verbose.LOGS</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>LOGS</name>
    <token>LOGS = 3</token>
    <scope>VrGamesDev.ENUM_Verbose</scope>
    <comments>
      <summary>ENUM_Verbose.&lt;font color = green&gt; LOGS &lt;/font&gt; = To track some basic information, or to send logs to BHEL</summary>
    </comments>
  </VrGamesDev.ENUM_Verbose.LOGS>
  <VrGamesDev.ENUM_Verbose.DEBUG>
    <signature>VrGamesDev.ENUM_Verbose.DEBUG</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>DEBUG</name>
    <token>DEBUG = 4</token>
    <scope>VrGamesDev.ENUM_Verbose</scope>
    <comments>
      <summary>ENUM_Verbose.&lt;font color = blue&gt; DEBUG &lt;/font&gt; = More information, ins and outs, flow of the game, useful for debug using asynchronous activities</summary>
    </comments>
  </VrGamesDev.ENUM_Verbose.DEBUG>
  <VrGamesDev.ENUM_Verbose.ALL>
    <signature>VrGamesDev.ENUM_Verbose.ALL</signature>
    <childcount>0</childcount>
    <type>EnumValue</type>
    <name>ALL</name>
    <token>ALL = 5</token>
    <scope>VrGamesDev.ENUM_Verbose</scope>
    <comments>
      <summary>ENUM_Verbose.&lt;font color = cyan&gt; ALL &lt;/font&gt; = The most verbose, it basically shows EVERYTHING!!!</summary>
    </comments>
  </VrGamesDev.ENUM_Verbose.ALL>
  <VrGamesDev.VRG>
    <signature>VrGamesDev.VRG</signature>
    <childcount>8</childcount>
    <type>Class</type>
    <name>VRG</name>
    <token>public class VRG : MonoBehaviour </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>Static class, do not instantiate this class
	
	 This class has all the static methods, not related to any class</summary>
    </comments>
  </VrGamesDev.VRG>
  <VrGamesDev.VRG.IsReady>
    <signature>VrGamesDev.VRG.IsReady</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>IsReady</name>
    <token>public static int IsReady </token>
    <scope>VrGamesDev.VRG</scope>
    <comments>
      <summary>Constant value: The frames the IsReady() functions will wait</summary>
    </comments>
  </VrGamesDev.VRG.IsReady>
  <VrGamesDev.VRG.GetHtmlFromColor_x0028_Color_x0029_>
    <signature>VrGamesDev.VRG.GetHtmlFromColor(Color)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetHtmlFromColor</name>
    <token>public static string GetHtmlFromColor(Color valueLocal)</token>
    <scope>VrGamesDev.VRG</scope>
    <comments>
      <summary>Get the hexadecimal value of a Color. Example: Black = #000000</summary>
      <returns>Get the Hexadecimal value of the color valueLocal</returns>
      <param-valueLocal>a Color variable,</param-valueLocal>
    </comments>
    <params>
      <valueLocal>Color</valueLocal>
    </params>
  </VrGamesDev.VRG.GetHtmlFromColor_x0028_Color_x0029_>
  <VrGamesDev.VRG.GetRandomColor_x0028__x0029_>
    <signature>VrGamesDev.VRG.GetRandomColor()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetRandomColor</name>
    <token>public static Color32 GetRandomColor()</token>
    <scope>VrGamesDev.VRG</scope>
    <comments>
      <summary>Get a Color32 variable with a random red, green, blue values.</summary>
      <returns>The randomized color</returns>
    </comments>
  </VrGamesDev.VRG.GetRandomColor_x0028__x0029_>
  <VrGamesDev.VRG.GetSceneGameObject_x0028_GameObject_x0029_>
    <signature>VrGamesDev.VRG.GetSceneGameObject(GameObject)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetSceneGameObject</name>
    <token>public static string GetSceneGameObject(GameObject valueLocal)</token>
    <scope>VrGamesDev.VRG</scope>
    <comments>
      <summary>Receive a GameObject, to analize its route in the scene</summary>
      <returns>The route to find the hierarchy in the Scene</returns>
    </comments>
    <params>
      <valueLocal>GameObject</valueLocal>
    </params>
  </VrGamesDev.VRG.GetSceneGameObject_x0028_GameObject_x0029_>
  <VrGamesDev.VRG.GetEnumColor_x0028_ENUM_Verbose_x0029_>
    <signature>VrGamesDev.VRG.GetEnumColor(ENUM_Verbose)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetEnumColor</name>
    <token>public static string GetEnumColor(ENUM_Verbose valueLocal)</token>
    <scope>VrGamesDev.VRG</scope>
    <comments>
      <summary>Constant value: The color order to colorize the verbose messages</summary>
      <returns>The color in plain text</returns>
      <param-valueLocal>ENUM_Verbose: The verbose enumerator</param-valueLocal>
    </comments>
    <params>
      <valueLocal>ENUM_Verbose</valueLocal>
    </params>
  </VrGamesDev.VRG.GetEnumColor_x0028_ENUM_Verbose_x0029_>
  <VrGamesDev.VRG.LongToBytes_x0028_long_x002C__x0020_bool_x0029_>
    <signature>VrGamesDev.VRG.LongToBytes(long, bool)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>LongToBytes</name>
    <token>public static string LongToBytes(long valueLocal, bool addUnitLocal)</token>
    <scope>VrGamesDev.VRG</scope>
    <comments>
      <summary>Transform the number bytes into a a string megabytes</summary>
      <param-valueLocal>The value to transform (long)</param-valueLocal>
      <param-addUnitLocal>By default true; you can get the value with Mb string</param-addUnitLocal>
    </comments>
    <params>
      <valueLocal>long</valueLocal>
      <addUnitLocal>bool</addUnitLocal>
    </params>
  </VrGamesDev.VRG.LongToBytes_x0028_long_x002C__x0020_bool_x0029_>
  <VrGamesDev.VRG.OpenUrl_x0028_string_x0029_>
    <signature>VrGamesDev.VRG.OpenUrl(string)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>OpenUrl</name>
    <token>public static bool OpenUrl(string valueLocal)</token>
    <scope>VrGamesDev.VRG</scope>
    <comments>
      <summary>Application.OpenURL, trimmed and escaped</summary>
      <returns>if it succeed</returns>
      <param-valueLocal>The url to open</param-valueLocal>
    </comments>
    <params>
      <valueLocal>string</valueLocal>
    </params>
  </VrGamesDev.VRG.OpenUrl_x0028_string_x0029_>
  <VrGamesDev.VRG_Base>
    <signature>VrGamesDev.VRG_Base</signature>
    <childcount>11</childcount>
    <type>Class</type>
    <name>VRG_Base</name>
    <token>public class VRG_Base : MonoBehaviour </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>Mother class of all VrGamesDev framework, it contains all the common methods
     to all classes, it controls the flow of OnEnable and Play() and the different
     modules for internal comunication.
     
     It is also useful when you debug and verbose control</summary>
    </comments>
  </VrGamesDev.VRG_Base>
  <VrGamesDev.VRG_Base.verbose>
    <signature>VrGamesDev.VRG_Base.verbose</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>verbose</name>
    <token>public ENUM_Verbose verbose { get; set; }</token>
    <scope>VrGamesDev.VRG_Base</scope>
    <comments>
      <summary>&lt;p&gt;Level of verbose, there are 6 level of verbose from silence up to full debug&lt;/p&gt;
         &lt;p&gt;ENUM_Verbose.NONE = Silence, NONE is sent to the editor log window&lt;/p&gt;
         &lt;p&gt;ENUM_Verbose.&lt;font color=red&gt;ERROR&lt;/font&gt; =  When you need to show an error to the user and record a posible failure&lt;/p&gt;
         &lt;p&gt;ENUM_Verbose.&lt;font color=yellow&gt;WARNING&lt;/font&gt; = Something was cheesy, if something is wacky, strange, or unexpected&lt;/p&gt;
         &lt;p&gt;ENUM_Verbose.&lt;font color=green&gt;LOGS&lt;/font&gt; =To track some basic information, or to send logs to BHEL&lt;/p&gt;
         &lt;p&gt;ENUM_Verbose.&lt;font color=blue&gt;DEBUG&lt;/font&gt; = More information, ins and outs, flow of the game, useful for debug using asynchronous activities&lt;/p&gt;
         &lt;p&gt;ENUM_Verbose.&lt;font color=cyan&gt;ALL&lt;/font&gt; = The most verbose, it basically shows EVERYTHING!!!&lt;/p&gt;</summary>
    </comments>
  </VrGamesDev.VRG_Base.verbose>
  <VrGamesDev.VRG_Base.m_PlayOnEnable>
    <signature>VrGamesDev.VRG_Base.m_PlayOnEnable</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_PlayOnEnable</name>
    <token>[Tooltip("The default behiavor is to play OnEnable, when false, you need to call method .Play() to do it's thing")]
[SerializeField]
protected bool m_PlayOnEnable </token>
    <scope>VrGamesDev.VRG_Base</scope>
    <comments>
      <summary>The default behiavor is to play OnEnable, when false, you need to call method .Play() to do it's thing</summary>
    </comments>
  </VrGamesDev.VRG_Base.m_PlayOnEnable>
  <VrGamesDev.VRG_Base.m_NextFrame>
    <signature>VrGamesDev.VRG_Base.m_NextFrame</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_NextFrame</name>
    <token>[Tooltip("If it will wait until the next frame, useful if used on coroutines, or waiting some elements or components are declared")]
[SerializeField]
protected bool m_NextFrame </token>
    <scope>VrGamesDev.VRG_Base</scope>
    <comments>
      <summary>If it will wait until the next frame, useful if used on coroutines, or waiting some elements or components are declared</summary>
    </comments>
  </VrGamesDev.VRG_Base.m_NextFrame>
  <VrGamesDev.VRG_Base.m_SelfTurnOff>
    <signature>VrGamesDev.VRG_Base.m_SelfTurnOff</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_SelfTurnOff</name>
    <token>[Tooltip("It will turn off itself after it's done")]
[SerializeField]
protected bool m_SelfTurnOff </token>
    <scope>VrGamesDev.VRG_Base</scope>
    <comments>
      <summary>It will turn off itself after the Play() -&gt; Do() methods are done</summary>
    </comments>
  </VrGamesDev.VRG_Base.m_SelfTurnOff>
  <VrGamesDev.VRG_Base.OnEnable_x0028__x0029_>
    <signature>VrGamesDev.VRG_Base.OnEnable()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>OnEnable</name>
    <token>protected void OnEnable()</token>
    <scope>VrGamesDev.VRG_Base</scope>
    <comments>
      <summary>If this.m_PlayOnEnable is true = Start the &lt;strong&gt;&lt;em&gt;"do your thing"&lt;/em&gt;&lt;/strong&gt; (The &lt;em&gt;"play()"&lt;/em&gt; method)</summary>
    </comments>
  </VrGamesDev.VRG_Base.OnEnable_x0028__x0029_>
  <VrGamesDev.VRG_Base.Play_x0028__x0029_>
    <signature>VrGamesDev.VRG_Base.Play()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Play</name>
    <token>public virtual void Play()</token>
    <scope>VrGamesDev.VRG_Base</scope>
    <comments>
      <summary>&lt;strong&gt;&lt;em&gt;Do it's thing: &lt;/em&gt;&lt;/strong&gt; Override this method in your own classes</summary>
    </comments>
  </VrGamesDev.VRG_Base.Play_x0028__x0029_>
  <VrGamesDev.VRG_Base.Play_IEnumerator_x0028__x0029_>
    <signature>VrGamesDev.VRG_Base.Play_IEnumerator()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Play_IEnumerator</name>
    <token>protected IEnumerator Play_IEnumerator()</token>
    <scope>VrGamesDev.VRG_Base</scope>
    <comments>
      <summary>Enumerator proxy, wait a frame, run the Do() coruotine and turn it off.</summary>
    </comments>
  </VrGamesDev.VRG_Base.Play_IEnumerator_x0028__x0029_>
  <VrGamesDev.VRG_Base.FindMy_x0028_object_x002C__x0020_bool_x0029_>
    <signature>VrGamesDev.VRG_Base.FindMy(object, bool)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>FindMy</name>
    <token>protected void FindMy(object valueLocal, bool destroyLocal)</token>
    <scope>VrGamesDev.VRG_Base</scope>
    <comments>
      <summary>This method finds the closest typeOf(Object) valueLocal element in itself, child and parents
         and return the same kind of object</summary>
      <param-valueLocal>the data to search for</param-valueLocal>
      <param-destroyLocal>[optional] TRUE by default, it destroy the object if not found</param-destroyLocal>
    </comments>
    <params>
      <valueLocal>object</valueLocal>
      <destroyLocal>bool</destroyLocal>
    </params>
  </VrGamesDev.VRG_Base.FindMy_x0028_object_x002C__x0020_bool_x0029_>
  <VrGamesDev.VRG_Base.Logs_x0028_string_x002C__x0020_string_x002C__x0020_ENUM_Verbose_x0029_>
    <signature>VrGamesDev.VRG_Base.Logs(string, string, ENUM_Verbose)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Logs</name>
    <token>protected virtual void Logs(string valueLocal, string sourceLocal, ENUM_Verbose ENUM_VerboseLocal)</token>
    <scope>VrGamesDev.VRG_Base</scope>
    <comments>
      <summary>VRG_BHEL wrapper, this method, send any message to the VRG_BHEL singleton</summary>
      <param-valueLocal>The message to log</param-valueLocal>
      <param-sourceLocal>From where the messag was sent, Use the format &lt;strong&gt;&lt;em&gt;Class-&gt;Method()&lt;/em&gt;&lt;/strong&gt;</param-sourceLocal>
      <param-ENUM_VerboseLocal>Custom Verbose level, to be logged it should be equal or higher than the one defined in the VRG_Remote</param-ENUM_VerboseLocal>
    </comments>
    <params>
      <valueLocal>string</valueLocal>
      <sourceLocal>string</sourceLocal>
      <ENUM_VerboseLocal>ENUM_Verbose</ENUM_VerboseLocal>
    </params>
  </VrGamesDev.VRG_Base.Logs_x0028_string_x002C__x0020_string_x002C__x0020_ENUM_Verbose_x0029_>
  <VrGamesDev.VRG_Campaign>
    <signature>VrGamesDev.VRG_Campaign</signature>
    <childcount>28</childcount>
    <type>Class</type>
    <name>VRG_Campaign</name>
    <token>public class VRG_Campaign : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>This class handles all the data of the game missions
	 and it can be accessed by its public static methods,
     VRG_Campaign.Instance works with the singleton pattern.</summary>
    </comments>
  </VrGamesDev.VRG_Campaign>
  <VrGamesDev.VRG_Campaign.isReady>
    <signature>VrGamesDev.VRG_Campaign.isReady</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>isReady</name>
    <token>public static bool isReady { get; }</token>
    <scope>VrGamesDev.VRG_Campaign</scope>
    <comments>
      <summary>You can ask for this variable to know if the object is ready or is still querying information</summary>
    </comments>
  </VrGamesDev.VRG_Campaign.isReady>
  <VrGamesDev.VRG_Campaign.missionPage>
    <signature>VrGamesDev.VRG_Campaign.missionPage</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>missionPage</name>
    <token>[SerializeField]
public static GameObject missionPage { get; }</token>
    <scope>VrGamesDev.VRG_Campaign</scope>
    <comments>
      <summary>The page container the mission buttons</summary>
    </comments>
  </VrGamesDev.VRG_Campaign.missionPage>
  <VrGamesDev.VRG_Campaign.missionButton>
    <signature>VrGamesDev.VRG_Campaign.missionButton</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>missionButton</name>
    <token>[SerializeField]
public static GameObject missionButton { get; }</token>
    <scope>VrGamesDev.VRG_Campaign</scope>
    <comments>
      <summary>The button prefabs into the mission pages</summary>
    </comments>
  </VrGamesDev.VRG_Campaign.missionButton>
  <VrGamesDev.VRG_Campaign.missionTotal>
    <signature>VrGamesDev.VRG_Campaign.missionTotal</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>missionTotal</name>
    <token>[SerializeField]
public static int missionTotal { get; }</token>
    <scope>VrGamesDev.VRG_Campaign</scope>
    <comments>
      <summary>The total missions in your game, this data will be used to generate the missions pages</summary>
    </comments>
  </VrGamesDev.VRG_Campaign.missionTotal>
  <VrGamesDev.VRG_Campaign.missionColumn>
    <signature>VrGamesDev.VRG_Campaign.missionColumn</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>missionColumn</name>
    <token>[SerializeField]
public static int missionColumn { get; }</token>
    <scope>VrGamesDev.VRG_Campaign</scope>
    <comments>
      <summary>The missions columns shown per page, it will used to genereate the mission pages</summary>
    </comments>
  </VrGamesDev.VRG_Campaign.missionColumn>
  <VrGamesDev.VRG_Campaign.missionRow>
    <signature>VrGamesDev.VRG_Campaign.missionRow</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>missionRow</name>
    <token>[SerializeField]
public static int missionRow { get; }</token>
    <scope>VrGamesDev.VRG_Campaign</scope>
    <comments>
      <summary>The missions rows shown per page, it will used to genereate the mission pages</summary>
    </comments>
  </VrGamesDev.VRG_Campaign.missionRow>
  <VrGamesDev.VRG_Campaign.Instance>
    <signature>VrGamesDev.VRG_Campaign.Instance</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>Instance</name>
    <token>public static VRG_Campaign Instance </token>
    <scope>VrGamesDev.VRG_Campaign</scope>
    <comments>
      <summary>Singleton pattern, Instance property should be the unique class in the scene</summary>
    </comments>
  </VrGamesDev.VRG_Campaign.Instance>
  <VrGamesDev.VRG_Campaign.IsValid_x0028__x0029_>
    <signature>VrGamesDev.VRG_Campaign.IsValid()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>IsValid</name>
    <token>public static IEnumerator IsValid()</token>
    <scope>VrGamesDev.VRG_Campaign</scope>
    <comments>
      <summary>You can yield this function to wait until it is ready, and instantiated</summary>
    </comments>
  </VrGamesDev.VRG_Campaign.IsValid_x0028__x0029_>
  <VrGamesDev.VRG_Campaign.IsValid_x0028_bool_x0029_>
    <signature>VrGamesDev.VRG_Campaign.IsValid(bool)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>IsValid</name>
    <token>public static IEnumerator IsValid(bool valueLocal)</token>
    <scope>VrGamesDev.VRG_Campaign</scope>
    <comments>
      <summary>Ask for this ienumerator if the VRG_Campaign.instance is ready
		
		 yield return VRG_Campaign.IsValid();
         
         Then ask for the Instance object if it is not null
         
         if (VRG_Campaign.Instance != null)</summary>
      <returns>Null when the VRG_Campaign is ready to be queried</returns>
    </comments>
    <params>
      <valueLocal>bool</valueLocal>
    </params>
  </VrGamesDev.VRG_Campaign.IsValid_x0028_bool_x0029_>
  <VrGamesDev.VRG_Campaign.Integrity_x0028__x0029_>
    <signature>VrGamesDev.VRG_Campaign.Integrity()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Integrity</name>
    <token>public static bool Integrity()</token>
    <scope>VrGamesDev.VRG_Campaign</scope>
    <comments>
      <summary>Check for the integrity of the mission loaded, if you try to load an invalid mission, it will return false</summary>
    </comments>
  </VrGamesDev.VRG_Campaign.Integrity_x0028__x0029_>
  <VrGamesDev.VRG_Campaign.Pass_x0028__x0029_>
    <signature>VrGamesDev.VRG_Campaign.Pass()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Pass</name>
    <token>public static void Pass()</token>
    <scope>VrGamesDev.VRG_Campaign</scope>
    <comments>
      <summary>Pass the current mission, set it as "passed" and save it to session</summary>
    </comments>
  </VrGamesDev.VRG_Campaign.Pass_x0028__x0029_>
  <VrGamesDev.VRG_Campaign.Star_x0028__x0029_>
    <signature>VrGamesDev.VRG_Campaign.Star()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Star</name>
    <token>public static void Star()</token>
    <scope>VrGamesDev.VRG_Campaign</scope>
    <comments>
      <summary>Save the current mission as a starred mission</summary>
    </comments>
  </VrGamesDev.VRG_Campaign.Star_x0028__x0029_>
  <VrGamesDev.VRG_Campaign.Next_x0028__x0029_>
    <signature>VrGamesDev.VRG_Campaign.Next()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Next</name>
    <token>public static void Next()</token>
    <scope>VrGamesDev.VRG_Campaign</scope>
    <comments>
      <summary>Move the current to the next mission</summary>
    </comments>
  </VrGamesDev.VRG_Campaign.Next_x0028__x0029_>
  <VrGamesDev.VRG_MissionFinish>
    <signature>VrGamesDev.VRG_MissionFinish</signature>
    <childcount>3</childcount>
    <type>Class</type>
    <name>VRG_MissionFinish</name>
    <token>public class VRG_MissionFinish : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>Trigger the result of the mission in the VRG_Campaign, next, pass, star</summary>
    </comments>
  </VrGamesDev.VRG_MissionFinish>
  <VrGamesDev.VRG_MissionFinish.m_Mission>
    <signature>VrGamesDev.VRG_MissionFinish.m_Mission</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Mission</name>
    <token>[Tooltip("Enumerator Mission: ENUM_Mission.FAIL by default")]
[SerializeField]
private ENUM_Mission m_Mission </token>
    <scope>VrGamesDev.VRG_MissionFinish</scope>
    <comments>
      <summary>&lt;a href="#VrGamesDev.ENUM_Mission"&gt;Enumerator Mission&lt;/a&gt;: ENUM_Mission.FAIL by default</summary>
    </comments>
  </VrGamesDev.VRG_MissionFinish.m_Mission>
  <VrGamesDev.VRG_MissionFinish.Do_x0028__x0029_>
    <signature>VrGamesDev.VRG_MissionFinish.Do()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Do</name>
    <token>protected override IEnumerator Do()</token>
    <scope>VrGamesDev.VRG_MissionFinish</scope>
    <comments>
      <summary>&lt;strong&gt;&lt;em&gt;Do it's thing: &lt;/em&gt;&lt;/strong&gt; Call the &lt;a href="#VrGamesDev.VRG_Campaign"&gt;VRG_Campaign&lt;/a&gt; methods, Next, pass or star</summary>
    </comments>
  </VrGamesDev.VRG_MissionFinish.Do_x0028__x0029_>
  <VrGamesDev.VRG_MissionIntegrity>
    <signature>VrGamesDev.VRG_MissionIntegrity</signature>
    <childcount>6</childcount>
    <type>Class</type>
    <name>VRG_MissionIntegrity</name>
    <token>[RequireComponent(typeof(Image))]
public class VRG_MissionIntegrity : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>Check for the integrity of the missions, this is to stop a possible invalid load,
     with more missions than defined or trying to play a mission not unlocked yet</summary>
    </comments>
  </VrGamesDev.VRG_MissionIntegrity>
  <VrGamesDev.VRG_MissionIntegrity.m_Image>
    <signature>VrGamesDev.VRG_MissionIntegrity.m_Image</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Image</name>
    <token>[Tooltip("The background Image, a curtain while checking for the integrity")]
[SerializeField]
private Image m_Image </token>
    <scope>VrGamesDev.VRG_MissionIntegrity</scope>
    <comments>
      <summary>The background Image, a curtain</summary>
    </comments>
  </VrGamesDev.VRG_MissionIntegrity.m_Image>
  <VrGamesDev.VRG_MissionIntegrity.m_Delayed>
    <signature>VrGamesDev.VRG_MissionIntegrity.m_Delayed</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Delayed</name>
    <token>[Tooltip("The go to scene object to go to home in case of an invalid mission")]
[SerializeField]
private VRG_Delayed m_Delayed </token>
    <scope>VrGamesDev.VRG_MissionIntegrity</scope>
    <comments>
      <summary>The go to scene object to go to home in case of an invalid mission</summary>
    </comments>
  </VrGamesDev.VRG_MissionIntegrity.m_Delayed>
  <VrGamesDev.VRG_MissionIntegrity.m_Scene>
    <signature>VrGamesDev.VRG_MissionIntegrity.m_Scene</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Scene</name>
    <token>[Tooltip("The name of the Scene to load")]
[SerializeField]
[SceneName]
private string m_Scene </token>
    <scope>VrGamesDev.VRG_MissionIntegrity</scope>
    <comments>
      <summary>The name of the Scene to load</summary>
    </comments>
  </VrGamesDev.VRG_MissionIntegrity.m_Scene>
  <VrGamesDev.VRG_MissionIntegrity.Do_x0028__x0029_>
    <signature>VrGamesDev.VRG_MissionIntegrity.Do()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Do</name>
    <token>protected override IEnumerator Do()</token>
    <scope>VrGamesDev.VRG_MissionIntegrity</scope>
    <comments>
      <summary>&lt;strong&gt;&lt;em&gt;Do it's thing: &lt;/em&gt;&lt;/strong&gt; Wait for the &lt;a href="#VrGamesDev.VRG_Campaign"&gt;VRG_Campaign&lt;/a&gt; isValid() and to the integrity
         In case it is false, it will load the Scene defined</summary>
    </comments>
  </VrGamesDev.VRG_MissionIntegrity.Do_x0028__x0029_>
  <VrGamesDev.VRG_MissionPage>
    <signature>VrGamesDev.VRG_MissionPage</signature>
    <childcount>10</childcount>
    <type>Class</type>
    <name>VRG_MissionPage</name>
    <token>[RequireComponent(typeof(RectTransform))]
[RequireComponent(typeof(GridLayoutGroup))]
public class VRG_MissionPage : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>Adjust the canvas and the viewport to size the buttons into the page
     this data is defined in the VRG_Campaign singleton</summary>
    </comments>
  </VrGamesDev.VRG_MissionPage>
  <VrGamesDev.VRG_MissionPage.m_Padding>
    <signature>VrGamesDev.VRG_MissionPage.m_Padding</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Padding</name>
    <token>[Tooltip("The pixels that gets padding from upper left corner")]
[SerializeField]
private int m_Padding </token>
    <scope>VrGamesDev.VRG_MissionPage</scope>
    <comments>
      <summary>The pixels that gets padding from upper left corner</summary>
    </comments>
  </VrGamesDev.VRG_MissionPage.m_Padding>
  <VrGamesDev.VRG_MissionPage.m_RectTransform>
    <signature>VrGamesDev.VRG_MissionPage.m_RectTransform</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_RectTransform</name>
    <token>[Tooltip("The RectTransform where to render the page")]
[SerializeField]
private RectTransform m_RectTransform </token>
    <scope>VrGamesDev.VRG_MissionPage</scope>
    <comments>
      <summary>The RectTransform where to render the page</summary>
    </comments>
  </VrGamesDev.VRG_MissionPage.m_RectTransform>
  <VrGamesDev.VRG_MissionPage.m_GridLayoutGroup>
    <signature>VrGamesDev.VRG_MissionPage.m_GridLayoutGroup</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_GridLayoutGroup</name>
    <token>[Tooltip("A grid layout UI unity component")]
[SerializeField]
private GridLayoutGroup m_GridLayoutGroup </token>
    <scope>VrGamesDev.VRG_MissionPage</scope>
    <comments>
      <summary>A grid layout UI unity component</summary>
    </comments>
  </VrGamesDev.VRG_MissionPage.m_GridLayoutGroup>
  <VrGamesDev.VRG_MissionPage.Do_x0028__x0029_>
    <signature>VrGamesDev.VRG_MissionPage.Do()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Do</name>
    <token>protected override IEnumerator Do()</token>
    <scope>VrGamesDev.VRG_MissionPage</scope>
    <comments>
      <summary>&lt;strong&gt;&lt;em&gt;Do it's thing: &lt;/em&gt;&lt;/strong&gt; Adjust the row and columns pixels to fit the screen content and display the page according</summary>
    </comments>
  </VrGamesDev.VRG_MissionPage.Do_x0028__x0029_>
  <VrGamesDev.VRG_MissionPageButton>
    <signature>VrGamesDev.VRG_MissionPageButton</signature>
    <childcount>8</childcount>
    <type>Class</type>
    <name>VRG_MissionPageButton</name>
    <token>public class VRG_MissionPageButton : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>The button in the page, it is just a button with a "go to the mission" funcionality
     It is configured by the pages with the Id of the mission, if you want to use a string
     name, you can configure it in the VRG_Remote using the following syntax
     
     "VRG_MissionPageButton." + this.m_Id
    
     As a string, if there are an image with that name, it will use it as the button label</summary>
    </comments>
  </VrGamesDev.VRG_MissionPageButton>
  <VrGamesDev.VRG_MissionPageButton.m_Id>
    <signature>VrGamesDev.VRG_MissionPageButton.m_Id</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Id</name>
    <token>[Tooltip("My Own Id, it is the mission i will try to load")]
[SerializeField]
private int m_Id </token>
    <scope>VrGamesDev.VRG_MissionPageButton</scope>
    <comments>
      <summary>My Own Id, it is the mission i will try to load</summary>
    </comments>
  </VrGamesDev.VRG_MissionPageButton.m_Id>
  <VrGamesDev.VRG_MissionPageButton.m_Star>
    <signature>VrGamesDev.VRG_MissionPageButton.m_Star</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Star</name>
    <token>[Tooltip("aTo know if i need to draw a starsdasd")]
[SerializeField]
private bool m_Star </token>
    <scope>VrGamesDev.VRG_MissionPageButton</scope>
    <comments>
      <summary>To know if i need to draw a star</summary>
    </comments>
  </VrGamesDev.VRG_MissionPageButton.m_Star>
  <VrGamesDev.VRG_MissionPageButton.m_Interactable>
    <signature>VrGamesDev.VRG_MissionPageButton.m_Interactable</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Interactable</name>
    <token>[Tooltip("If i am still locked, i won't be pushable")]
[SerializeField]
private bool m_Interactable </token>
    <scope>VrGamesDev.VRG_MissionPageButton</scope>
    <comments>
      <summary>If i am still locked, i won't be pushable</summary>
    </comments>
  </VrGamesDev.VRG_MissionPageButton.m_Interactable>
  <VrGamesDev.VRG_MissionPageButton.m_GoStar>
    <signature>VrGamesDev.VRG_MissionPageButton.m_GoStar</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_GoStar</name>
    <token>[Tooltip("The star game object")]
[SerializeField]
private Transform m_GoStar </token>
    <scope>VrGamesDev.VRG_MissionPageButton</scope>
    <comments>
      <summary>The star game object</summary>
    </comments>
  </VrGamesDev.VRG_MissionPageButton.m_GoStar>
  <VrGamesDev.VRG_MissionPageButton.m_GoText>
    <signature>VrGamesDev.VRG_MissionPageButton.m_GoText</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_GoText</name>
    <token>[Tooltip("My text Game object")]
[SerializeField]
private Text m_GoText </token>
    <scope>VrGamesDev.VRG_MissionPageButton</scope>
    <comments>
      <summary>My text Game object</summary>
    </comments>
  </VrGamesDev.VRG_MissionPageButton.m_GoText>
  <VrGamesDev.VRG_MissionPageButton.Init_x0028_int_x002C__x0020_int_x002C__x0020_bool_x0029_>
    <signature>VrGamesDev.VRG_MissionPageButton.Init(int, int, bool)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Init</name>
    <token>public void Init(int valueLocal, int currentLocal, bool starLocal)</token>
    <scope>VrGamesDev.VRG_MissionPageButton</scope>
    <comments>
      <summary>Init the button, and set itself into a mission button</summary>
      <param-valueLocal>My Id, the mission i will load</param-valueLocal>
      <param-currentLocal>The latest mission active, if am i Higher i am locked</param-currentLocal>
      <param-starLocal>If i was star-ed, draw it</param-starLocal>
    </comments>
    <params>
      <valueLocal>int</valueLocal>
      <currentLocal>int</currentLocal>
      <starLocal>bool</starLocal>
    </params>
  </VrGamesDev.VRG_MissionPageButton.Init_x0028_int_x002C__x0020_int_x002C__x0020_bool_x0029_>
  <VrGamesDev.VRG_MissionPageButton.OnClick_x0028__x0029_>
    <signature>VrGamesDev.VRG_MissionPageButton.OnClick()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>OnClick</name>
    <token>public void OnClick()</token>
    <scope>VrGamesDev.VRG_MissionPageButton</scope>
    <comments>
      <summary>I was clicked, load the stage and mission</summary>
    </comments>
  </VrGamesDev.VRG_MissionPageButton.OnClick_x0028__x0029_>
  <VrGamesDev.VRG_MissionPageButtonTitles>
    <signature>VrGamesDev.VRG_MissionPageButtonTitles</signature>
    <childcount>5</childcount>
    <type>Class</type>
    <name>VRG_MissionPageButtonTitles</name>
    <token>public class VRG_MissionPageButtonTitles : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>The button in the page search for any image that matches the id of the button
     and replace the text with the image, useful to create custom buttons with images
     Check the &lt;a href="#VrGamesDev.FiveSeconds"&gt;FiveSeconds&lt;/a&gt; for an example how
     to use it.</summary>
    </comments>
  </VrGamesDev.VRG_MissionPageButtonTitles>
  <VrGamesDev.VRG_MissionPageButtonTitles.m_Childs>
    <signature>VrGamesDev.VRG_MissionPageButtonTitles.m_Childs</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Childs</name>
    <token>[Tooltip("The star game object")]
[SerializeField]
private List&lt;Transform&gt; m_Childs </token>
    <scope>VrGamesDev.VRG_MissionPageButtonTitles</scope>
    <comments>
      <summary>The star game object</summary>
    </comments>
  </VrGamesDev.VRG_MissionPageButtonTitles.m_Childs>
  <VrGamesDev.VRG_MissionPageButtonTitles.Instance>
    <signature>VrGamesDev.VRG_MissionPageButtonTitles.Instance</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>Instance</name>
    <token>public static VRG_MissionPageButtonTitles Instance </token>
    <scope>VrGamesDev.VRG_MissionPageButtonTitles</scope>
    <comments>
      <summary>Singleton pattern, Instance is the unique variable in the scene from this class</summary>
    </comments>
  </VrGamesDev.VRG_MissionPageButtonTitles.Instance>
  <VrGamesDev.VRG_MissionPageButtonTitles.Get_x0028_string_x0029_>
    <signature>VrGamesDev.VRG_MissionPageButtonTitles.Get(string)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Get</name>
    <token>public Image Get(string valueLocal)</token>
    <scope>VrGamesDev.VRG_MissionPageButtonTitles</scope>
    <comments>
      <summary>Get the first child image of this object</summary>
      <returns>An UI Image</returns>
      <param-valueLocal>The name of the Image (child gameObject)</param-valueLocal>
    </comments>
    <params>
      <valueLocal>string</valueLocal>
    </params>
  </VrGamesDev.VRG_MissionPageButtonTitles.Get_x0028_string_x0029_>
  <VrGamesDev.VRG_MissionPages>
    <signature>VrGamesDev.VRG_MissionPages</signature>
    <childcount>9</childcount>
    <type>Class</type>
    <name>VRG_MissionPages</name>
    <token>[RequireComponent(typeof(RectTransform))]
[RequireComponent(typeof(GridLayoutGroup))]
public class VRG_MissionPages : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>Create the pages with the buttons to load the missions</summary>
    </comments>
  </VrGamesDev.VRG_MissionPages>
  <VrGamesDev.VRG_MissionPages.Do_x0028__x0029_>
    <signature>VrGamesDev.VRG_MissionPages.Do()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Do</name>
    <token>protected override IEnumerator Do()</token>
    <scope>VrGamesDev.VRG_MissionPages</scope>
    <comments>
      <summary>&lt;strong&gt;&lt;em&gt;Do it's thing: &lt;/em&gt;&lt;/strong&gt; Create and configure the page</summary>
    </comments>
  </VrGamesDev.VRG_MissionPages.Do_x0028__x0029_>
  <VrGamesDev.VRG_Credits>
    <signature>VrGamesDev.VRG_Credits</signature>
    <childcount>6</childcount>
    <type>Class</type>
    <name>VRG_Credits</name>
    <token>public class VRG_Credits : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>Scroll a RectTransform to produce a credits scrolling effect</summary>
    </comments>
  </VrGamesDev.VRG_Credits>
  <VrGamesDev.VRG_Credits.m_Content>
    <signature>VrGamesDev.VRG_Credits.m_Content</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Content</name>
    <token>private RectTransform m_Content </token>
    <scope>VrGamesDev.VRG_Credits</scope>
    <comments>
      <summary>From UI: The Body text container as a RectTransform, the information from credits will be displayed here</summary>
    </comments>
  </VrGamesDev.VRG_Credits.m_Content>
  <VrGamesDev.VRG_Credits.m_Speed>
    <signature>VrGamesDev.VRG_Credits.m_Speed</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Speed</name>
    <token>[Tooltip("The speed of scrolling")]
[SerializeField]
private float m_Speed </token>
    <scope>VrGamesDev.VRG_Credits</scope>
    <comments>
      <summary>The speed of scrolling</summary>
    </comments>
  </VrGamesDev.VRG_Credits.m_Speed>
  <VrGamesDev.VRG_Credits.m_YCurrent>
    <signature>VrGamesDev.VRG_Credits.m_YCurrent</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_YCurrent</name>
    <token>private float m_YCurrent </token>
    <scope>VrGamesDev.VRG_Credits</scope>
    <comments>
      <summary>The y height that is displaying</summary>
    </comments>
  </VrGamesDev.VRG_Credits.m_YCurrent>
  <VrGamesDev.VRG_Credits.m_YMax>
    <signature>VrGamesDev.VRG_Credits.m_YMax</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_YMax</name>
    <token>private float m_YMax </token>
    <scope>VrGamesDev.VRG_Credits</scope>
    <comments>
      <summary>The height includig all the content</summary>
    </comments>
  </VrGamesDev.VRG_Credits.m_YMax>
  <VrGamesDev.VRG_Credits.Do_x0028__x0029_>
    <signature>VrGamesDev.VRG_Credits.Do()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Do</name>
    <token>protected override IEnumerator Do()</token>
    <scope>VrGamesDev.VRG_Credits</scope>
    <comments>
      <summary>&lt;strong&gt;&lt;em&gt;Do it's thing: &lt;/em&gt;&lt;/strong&gt; Scroll the credits</summary>
    </comments>
  </VrGamesDev.VRG_Credits.Do_x0028__x0029_>
  <VrGamesDev.VRG_Remote>
    <signature>VrGamesDev.VRG_Remote</signature>
    <childcount>46</childcount>
    <type>Class</type>
    <name>VRG_Remote</name>
    <token>public class VRG_Remote : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>This class control the remote settings, Local or from the unity cloud server
     You can override the remote data if you use the local arrays
    
     It uses the &lt;a href="https://unity.com/remote-config"&gt;Unity Remote Config&lt;/a&gt; module
    
     You need to set the REMOTE_CONFIG_INSTALLED &lt;a href="https://docs.unity3d.com/Manual/PlatformDependentCompilation.html"&gt;player defined symbol &lt;/a&gt;
    
     Add it from the Menu &lt;em&gt;Tools-&gt;Vr Games Dev-&gt;VRG_Remote-&gt;REMOTE_CONFIG_INSTALLED: Add&lt;/em&gt;</summary>
    </comments>
  </VrGamesDev.VRG_Remote>
  <VrGamesDev.VRG_Remote.m_UseRemote>
    <signature>VrGamesDev.VRG_Remote.m_UseRemote</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_UseRemote</name>
    <token>[Tooltip("Force in editor mode to pick the server data or the local data")]
[SerializeField]
private bool m_UseRemote </token>
    <scope>VrGamesDev.VRG_Remote</scope>
    <comments>
      <summary>Force in editor mode to pick the server data or the local data</summary>
    </comments>
  </VrGamesDev.VRG_Remote.m_UseRemote>
  <VrGamesDev.VRG_Remote.id>
    <signature>VrGamesDev.VRG_Remote.id</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>id</name>
    <token>public string id { get; set; }</token>
    <scope>VrGamesDev.VRG_Remote</scope>
    <comments>
      <summary>The Id of the data this VRG_Remote contains</summary>
    </comments>
  </VrGamesDev.VRG_Remote.id>
  <VrGamesDev.VRG_Remote.m_Bools>
    <signature>VrGamesDev.VRG_Remote.m_Bools</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Bools</name>
    <token>[Tooltip("LOCAL: the Bool data that override the remote settings")]
[SerializeField]
private List&lt;VRG_RemoteBool&gt; m_Bools </token>
    <scope>VrGamesDev.VRG_Remote</scope>
    <comments>
      <summary>LOCAL: the Bool array that override the remote settings</summary>
    </comments>
  </VrGamesDev.VRG_Remote.m_Bools>
  <VrGamesDev.VRG_Remote.m_Ints>
    <signature>VrGamesDev.VRG_Remote.m_Ints</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Ints</name>
    <token>[Tooltip("LOCAL: the Int data that override the remote settings")]
[SerializeField]
private List&lt;VRG_RemoteInt&gt; m_Ints </token>
    <scope>VrGamesDev.VRG_Remote</scope>
    <comments>
      <summary>LOCAL: the Int data that override the remote settings</summary>
    </comments>
  </VrGamesDev.VRG_Remote.m_Ints>
  <VrGamesDev.VRG_Remote.m_Floats>
    <signature>VrGamesDev.VRG_Remote.m_Floats</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Floats</name>
    <token>[Tooltip("LOCAL: the Float data that override the remote settings")]
[SerializeField]
private List&lt;VRG_RemoteFloat&gt; m_Floats </token>
    <scope>VrGamesDev.VRG_Remote</scope>
    <comments>
      <summary>LOCAL: the Float data that override the remote settings</summary>
    </comments>
  </VrGamesDev.VRG_Remote.m_Floats>
  <VrGamesDev.VRG_Remote.m_Strings>
    <signature>VrGamesDev.VRG_Remote.m_Strings</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Strings</name>
    <token>[Tooltip("LOCAL: the String data that override the remote settings")]
[SerializeField]
private List&lt;VRG_RemoteString&gt; m_Strings </token>
    <scope>VrGamesDev.VRG_Remote</scope>
    <comments>
      <summary>LOCAL: the String data that override the remote settings</summary>
    </comments>
  </VrGamesDev.VRG_Remote.m_Strings>
  <VrGamesDev.VRG_Remote.isCached>
    <signature>VrGamesDev.VRG_Remote.isCached</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>isCached</name>
    <token>public static bool isCached { get; }</token>
    <scope>VrGamesDev.VRG_Remote</scope>
    <comments>
      <summary>You can ask for this variable to know if the information was cached</summary>
    </comments>
  </VrGamesDev.VRG_Remote.isCached>
  <VrGamesDev.VRG_Remote.Instance>
    <signature>VrGamesDev.VRG_Remote.Instance</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>Instance</name>
    <token>public static VRG_Remote Instance </token>
    <scope>VrGamesDev.VRG_Remote</scope>
    <comments>
      <summary>Singleton pattern, Instance is the unique variable in the scene from this class</summary>
    </comments>
  </VrGamesDev.VRG_Remote.Instance>
  <VrGamesDev.VRG_Remote.IsValid_x0028_bool_x0029_>
    <signature>VrGamesDev.VRG_Remote.IsValid(bool)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>IsValid</name>
    <token>public static IEnumerator IsValid(bool valueLocal)</token>
    <scope>VrGamesDev.VRG_Remote</scope>
    <comments>
      <summary>Ask for this ienumerator if the VRG_Remote is ready</summary>
      <returns>Null when the VRG_Remote is ready to be queried</returns>
    </comments>
    <params>
      <valueLocal>bool</valueLocal>
    </params>
  </VrGamesDev.VRG_Remote.IsValid_x0028_bool_x0029_>
  <VrGamesDev.VRG_Remote.ApplyRemoteSettings_x0028_ConfigResponse_x0029_>
    <signature>VrGamesDev.VRG_Remote.ApplyRemoteSettings(ConfigResponse)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>ApplyRemoteSettings</name>
    <token>protected virtual void ApplyRemoteSettings(ConfigResponse valueLocal)</token>
    <scope>VrGamesDev.VRG_Remote</scope>
    <comments>
      <summary>Delegated virtual function to wait and check for the remote settings and data</summary>
      <param-configResponse>A regular &lt;a href="https://docs.unity3d.com/Packages/com.unity.remote-config@1.1/api/Unity.RemoteConfig.ConfigResponse.html"&gt;configResponse&lt;/a&gt;</param-configResponse>
    </comments>
    <params>
      <valueLocal>ConfigResponse</valueLocal>
    </params>
  </VrGamesDev.VRG_Remote.ApplyRemoteSettings_x0028_ConfigResponse_x0029_>
  <VrGamesDev.VRG_Remote.GetBool_x0028_string_x002C__x0020_bool_x0029_>
    <signature>VrGamesDev.VRG_Remote.GetBool(string, bool)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetBool</name>
    <token>public static bool GetBool(string valueLocal, bool bhelLocal)</token>
    <scope>VrGamesDev.VRG_Remote</scope>
    <comments>
      <summary>Returns the value of the bool searched, remote or local</summary>
      <returns>The bool value from the string searched</returns>
      <param-valueLocal>The name of the string to search</param-valueLocal>
    </comments>
    <params>
      <valueLocal>string</valueLocal>
      <bhelLocal>bool</bhelLocal>
    </params>
  </VrGamesDev.VRG_Remote.GetBool_x0028_string_x002C__x0020_bool_x0029_>
  <VrGamesDev.VRG_Remote.GetInt_x0028_string_x002C__x0020_bool_x0029_>
    <signature>VrGamesDev.VRG_Remote.GetInt(string, bool)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetInt</name>
    <token>public static int GetInt(string valueLocal, bool bhelLocal)</token>
    <scope>VrGamesDev.VRG_Remote</scope>
    <comments>
      <summary>Returns the value of the bool searched, remote or local</summary>
      <returns>The int value from the string searched</returns>
      <param-valueLocal>The name of the int to search</param-valueLocal>
    </comments>
    <params>
      <valueLocal>string</valueLocal>
      <bhelLocal>bool</bhelLocal>
    </params>
  </VrGamesDev.VRG_Remote.GetInt_x0028_string_x002C__x0020_bool_x0029_>
  <VrGamesDev.VRG_Remote.GetFloat_x0028_string_x002C__x0020_bool_x0029_>
    <signature>VrGamesDev.VRG_Remote.GetFloat(string, bool)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetFloat</name>
    <token>public static float GetFloat(string valueLocal, bool bhelLocal)</token>
    <scope>VrGamesDev.VRG_Remote</scope>
    <comments>
      <summary>Returns the value of the float searched, remote or local</summary>
      <returns>The int value from the string searched</returns>
      <param-valueLocal>The name of the int to search</param-valueLocal>
    </comments>
    <params>
      <valueLocal>string</valueLocal>
      <bhelLocal>bool</bhelLocal>
    </params>
  </VrGamesDev.VRG_Remote.GetFloat_x0028_string_x002C__x0020_bool_x0029_>
  <VrGamesDev.VRG_Remote.GetString_x0028_string_x002C__x0020_bool_x0029_>
    <signature>VrGamesDev.VRG_Remote.GetString(string, bool)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetString</name>
    <token>public static string GetString(string valueLocal, bool bhelLocal)</token>
    <scope>VrGamesDev.VRG_Remote</scope>
    <comments>
      <summary>Returns the value of the string searched, remote or local</summary>
      <returns>The string value from the string searched</returns>
      <param-valueLocal>The name of the string to search</param-valueLocal>
    </comments>
    <params>
      <valueLocal>string</valueLocal>
      <bhelLocal>bool</bhelLocal>
    </params>
  </VrGamesDev.VRG_Remote.GetString_x0028_string_x002C__x0020_bool_x0029_>
  <VrGamesDev.VRG_Remote.ExistBool_x0028_string_x0029_>
    <signature>VrGamesDev.VRG_Remote.ExistBool(string)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>ExistBool</name>
    <token>public static bool ExistBool(string valueLocal)</token>
    <scope>VrGamesDev.VRG_Remote</scope>
    <comments>
      <summary>It search for the datalocal into the array of Bools to find if it exists</summary>
      <returns>true if the value exists in the array</returns>
      <param-dataLocal>The name of the data to search for</param-dataLocal>
    </comments>
    <params>
      <valueLocal>string</valueLocal>
    </params>
  </VrGamesDev.VRG_Remote.ExistBool_x0028_string_x0029_>
  <VrGamesDev.VRG_Remote.ExistInt_x0028_string_x0029_>
    <signature>VrGamesDev.VRG_Remote.ExistInt(string)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>ExistInt</name>
    <token>public static bool ExistInt(string valueLocal)</token>
    <scope>VrGamesDev.VRG_Remote</scope>
    <comments>
      <summary>It search for the datalocal into the array of Ints to find if it exists</summary>
      <returns>true if the value exists in the array</returns>
      <param-dataLocal>The name of the data to search for</param-dataLocal>
    </comments>
    <params>
      <valueLocal>string</valueLocal>
    </params>
  </VrGamesDev.VRG_Remote.ExistInt_x0028_string_x0029_>
  <VrGamesDev.VRG_Remote.ExistFloat_x0028_string_x0029_>
    <signature>VrGamesDev.VRG_Remote.ExistFloat(string)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>ExistFloat</name>
    <token>public static bool ExistFloat(string valueLocal)</token>
    <scope>VrGamesDev.VRG_Remote</scope>
    <comments>
      <summary>It search for the datalocal into the array of Floats to find if it exists</summary>
      <returns>true if the value exists in the array</returns>
      <param-dataLocal>The name of the data to search for</param-dataLocal>
    </comments>
    <params>
      <valueLocal>string</valueLocal>
    </params>
  </VrGamesDev.VRG_Remote.ExistFloat_x0028_string_x0029_>
  <VrGamesDev.VRG_Remote.ExistString_x0028_string_x0029_>
    <signature>VrGamesDev.VRG_Remote.ExistString(string)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>ExistString</name>
    <token>public static bool ExistString(string valueLocal)</token>
    <scope>VrGamesDev.VRG_Remote</scope>
    <comments>
      <summary>It search for the datalocal into the array of Strings to find if it exists</summary>
      <returns>true if the value exists in the array</returns>
      <param-dataLocal>The name of the data to search for</param-dataLocal>
    </comments>
    <params>
      <valueLocal>string</valueLocal>
    </params>
  </VrGamesDev.VRG_Remote.ExistString_x0028_string_x0029_>
  <VrGamesDev.VRG_Remote.AddBool_x0028_string_x002C__x0020_bool_x0029_>
    <signature>VrGamesDev.VRG_Remote.AddBool(string, bool)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>AddBool</name>
    <token>public string AddBool(string dataLocal, bool valueLocal)</token>
    <scope>VrGamesDev.VRG_Remote</scope>
    <comments>
      <summary>Add a bool to the bools array, it adds it to the very last</summary>
      <param-dataLocal>The name of the data parameter to add to the array</param-dataLocal>
      <param-valueLocal>the value of the data</param-valueLocal>
      <param-forceLocal>(Default = false) When you add this value, if it is local or remote forced</param-forceLocal>
    </comments>
    <params>
      <dataLocal>string</dataLocal>
      <valueLocal>bool</valueLocal>
    </params>
  </VrGamesDev.VRG_Remote.AddBool_x0028_string_x002C__x0020_bool_x0029_>
  <VrGamesDev.VRG_Remote.AddInt_x0028_string_x002C__x0020_int_x0029_>
    <signature>VrGamesDev.VRG_Remote.AddInt(string, int)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>AddInt</name>
    <token>public string AddInt(string dataLocal, int valueLocal)</token>
    <scope>VrGamesDev.VRG_Remote</scope>
    <comments>
      <summary>Add a Int to the Ints array, it adds it to the very last item</summary>
      <param-dataLocal>The name of the data parameter to add to the array</param-dataLocal>
      <param-valueLocal>the value of the data</param-valueLocal>
      <param-forceLocal>(Default = false) When you add this value, if it is local or remote forced</param-forceLocal>
    </comments>
    <params>
      <dataLocal>string</dataLocal>
      <valueLocal>int</valueLocal>
    </params>
  </VrGamesDev.VRG_Remote.AddInt_x0028_string_x002C__x0020_int_x0029_>
  <VrGamesDev.VRG_Remote.AddFloat_x0028_string_x002C__x0020_float_x0029_>
    <signature>VrGamesDev.VRG_Remote.AddFloat(string, float)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>AddFloat</name>
    <token>public string AddFloat(string dataLocal, float valueLocal)</token>
    <scope>VrGamesDev.VRG_Remote</scope>
    <comments>
      <summary>Add a FLOAT to the strings array, it adds it to the very last item in case of new, or update the data if is already set</summary>
      <param-dataLocal>The name of the data parameter to add to the array</param-dataLocal>
      <param-valueLocal>the value of the data</param-valueLocal>
    </comments>
    <params>
      <dataLocal>string</dataLocal>
      <valueLocal>float</valueLocal>
    </params>
  </VrGamesDev.VRG_Remote.AddFloat_x0028_string_x002C__x0020_float_x0029_>
  <VrGamesDev.VRG_Remote.AddString_x0028_string_x002C__x0020_string_x0029_>
    <signature>VrGamesDev.VRG_Remote.AddString(string, string)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>AddString</name>
    <token>public string AddString(string dataLocal, string valueLocal)</token>
    <scope>VrGamesDev.VRG_Remote</scope>
    <comments>
      <summary>Add a string to the strings array, it adds it to the very last item in case of new, or update the data if is already set</summary>
      <param-dataLocal>The name of the data parameter to add to the array</param-dataLocal>
      <param-valueLocal>the value of the data</param-valueLocal>
    </comments>
    <params>
      <dataLocal>string</dataLocal>
      <valueLocal>string</valueLocal>
    </params>
  </VrGamesDev.VRG_Remote.AddString_x0028_string_x002C__x0020_string_x0029_>
  <VrGamesDev.VRG_Announcement>
    <signature>VrGamesDev.VRG_Announcement</signature>
    <childcount>23</childcount>
    <type>Class</type>
    <name>VRG_Announcement</name>
    <token>public class VRG_Announcement : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>This class retrieve the cloud server Remote config data
     and display a full screen pop up announcement to the user
     To use it add it from menu -&gt; Tools -&gt; Vr Games Dev -&gt; Announcement</summary>
    </comments>
  </VrGamesDev.VRG_Announcement>
  <VrGamesDev.VRG_Announcement.m_IsReady>
    <signature>VrGamesDev.VRG_Announcement.m_IsReady</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_IsReady</name>
    <token>[Tooltip("The available status, ask for this property to know if it is available")]
[SerializeField]
protected bool m_IsReady </token>
    <scope>VrGamesDev.VRG_Announcement</scope>
    <comments>
      <summary>The available status, ask for this property to know if it is available to use</summary>
    </comments>
  </VrGamesDev.VRG_Announcement.m_IsReady>
  <VrGamesDev.VRG_Announcement.m_News>
    <signature>VrGamesDev.VRG_Announcement.m_News</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_News</name>
    <token>[Tooltip("If we have new information, this will be true")]
[SerializeField]
private bool m_News </token>
    <scope>VrGamesDev.VRG_Announcement</scope>
    <comments>
      <summary>If we have new information, this will be true</summary>
    </comments>
  </VrGamesDev.VRG_Announcement.m_News>
  <VrGamesDev.VRG_Announcement.m_Date>
    <signature>VrGamesDev.VRG_Announcement.m_Date</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Date</name>
    <token>[Tooltip("From UI: The date text container")]
[SerializeField]
private Text m_Date </token>
    <scope>VrGamesDev.VRG_Announcement</scope>
    <comments>
      <summary>From UI: The date text container</summary>
    </comments>
  </VrGamesDev.VRG_Announcement.m_Date>
  <VrGamesDev.VRG_Announcement.m_Title>
    <signature>VrGamesDev.VRG_Announcement.m_Title</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Title</name>
    <token>[Tooltip("From UI: The Title text container")]
[SerializeField]
private Text m_Title </token>
    <scope>VrGamesDev.VRG_Announcement</scope>
    <comments>
      <summary>From UI: The Title text container</summary>
    </comments>
  </VrGamesDev.VRG_Announcement.m_Title>
  <VrGamesDev.VRG_Announcement.m_Content>
    <signature>VrGamesDev.VRG_Announcement.m_Content</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Content</name>
    <token>[Tooltip("From UI: The Body text container as a RectTransform, the information from server will be displayed here")]
[SerializeField]
private RectTransform m_Content </token>
    <scope>VrGamesDev.VRG_Announcement</scope>
    <comments>
      <summary>From UI: The Body text container as a RectTransform, the information from server will be displayed here</summary>
    </comments>
  </VrGamesDev.VRG_Announcement.m_Content>
  <VrGamesDev.VRG_Announcement.m_Body>
    <signature>VrGamesDev.VRG_Announcement.m_Body</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Body</name>
    <token>[Tooltip("From UI: The Body text container")]
[SerializeField]
private Text m_Body </token>
    <scope>VrGamesDev.VRG_Announcement</scope>
    <comments>
      <summary>From UI: The Body text container</summary>
    </comments>
  </VrGamesDev.VRG_Announcement.m_Body>
  <VrGamesDev.VRG_Announcement.m_Loading>
    <signature>VrGamesDev.VRG_Announcement.m_Loading</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Loading</name>
    <token>[Tooltip("From UI: The date text container")]
[SerializeField]
private GameObject m_Loading </token>
    <scope>VrGamesDev.VRG_Announcement</scope>
    <comments>
      <summary>From UI: The date text container</summary>
    </comments>
  </VrGamesDev.VRG_Announcement.m_Loading>
  <VrGamesDev.VRG_Announcement.Instance>
    <signature>VrGamesDev.VRG_Announcement.Instance</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>Instance</name>
    <token>public static VRG_Announcement Instance </token>
    <scope>VrGamesDev.VRG_Announcement</scope>
    <comments>
      <summary>Singleton pattern, Instance is the unique variable in the scene from this class</summary>
    </comments>
  </VrGamesDev.VRG_Announcement.Instance>
  <VrGamesDev.VRG_Announcement.IsValid_x0028_bool_x0029_>
    <signature>VrGamesDev.VRG_Announcement.IsValid(bool)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>IsValid</name>
    <token>public static IEnumerator IsValid(bool valueLocal)</token>
    <scope>VrGamesDev.VRG_Announcement</scope>
    <comments>
      <summary>Ask for this ienumerator if the VRG_Announcement is ready</summary>
      <returns>Null when the VRG_Announcement is ready to be queried</returns>
    </comments>
    <params>
      <valueLocal>bool</valueLocal>
    </params>
  </VrGamesDev.VRG_Announcement.IsValid_x0028_bool_x0029_>
  <VrGamesDev.VRG_AnnouncementNews>
    <signature>VrGamesDev.VRG_AnnouncementNews</signature>
    <childcount>3</childcount>
    <type>Class</type>
    <name>VRG_AnnouncementNews</name>
    <token>public class VRG_AnnouncementNews : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>This class retrieve the cloud server Remote config data
     and display a full screen pop up announcement to the user
     To use it add it from menu -&gt; Tools -&gt; Vr Games Dev -&gt; Announcement</summary>
    </comments>
  </VrGamesDev.VRG_AnnouncementNews>
  <VrGamesDev.VRG_AnnouncementNews.m_Button>
    <signature>VrGamesDev.VRG_AnnouncementNews.m_Button</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Button</name>
    <token>[Tooltip("The button owner if this news icon")]
[SerializeField]
private GameObject m_Button </token>
    <scope>VrGamesDev.VRG_AnnouncementNews</scope>
    <comments>
      <summary>The gameobjects to affect based on the news update</summary>
    </comments>
  </VrGamesDev.VRG_AnnouncementNews.m_Button>
  <VrGamesDev.VRG_AnnouncementNews.m_GameObjects>
    <signature>VrGamesDev.VRG_AnnouncementNews.m_GameObjects</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_GameObjects</name>
    <token>[Tooltip("The gameobjects to affect based on the news update")]
[SerializeField]
private GameObject[] m_GameObjects </token>
    <scope>VrGamesDev.VRG_AnnouncementNews</scope>
    <comments>
      <summary>The gameobjects to affect based on the news update</summary>
    </comments>
  </VrGamesDev.VRG_AnnouncementNews.m_GameObjects>
  <VrGamesDev.VRG_AnnouncementPlay>
    <signature>VrGamesDev.VRG_AnnouncementPlay</signature>
    <childcount>2</childcount>
    <type>Class</type>
    <name>VRG_AnnouncementPlay</name>
    <token>public class VRG_AnnouncementPlay : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>This class retrieve the cloud server Remote config data
     and display a full screen pop up announcement to the user
     To use it add it from menu -&gt; Tools -&gt; Vr Games Dev -&gt; Announcement</summary>
    </comments>
  </VrGamesDev.VRG_AnnouncementPlay>
  <VrGamesDev.VRG_AnnouncementPlay.VRG_AnnouncementPlay_x0028__x0029_>
    <signature>VrGamesDev.VRG_AnnouncementPlay.VRG_AnnouncementPlay()</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>VRG_AnnouncementPlay</name>
    <token>public  VRG_AnnouncementPlay()</token>
    <scope>VrGamesDev.VRG_AnnouncementPlay</scope>
    <comments>
      <summary>Constructor to have all true</summary>
    </comments>
  </VrGamesDev.VRG_AnnouncementPlay.VRG_AnnouncementPlay_x0028__x0029_>
  <VrGamesDev.VRG_AnnouncementStop>
    <signature>VrGamesDev.VRG_AnnouncementStop</signature>
    <childcount>2</childcount>
    <type>Class</type>
    <name>VRG_AnnouncementStop</name>
    <token>public class VRG_AnnouncementStop : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>This class retrieve the cloud server Remote config data
     and display a full screen pop up announcement to the user
     To use it add it from menu -&gt; Tools -&gt; Vr Games Dev -&gt; Announcement</summary>
    </comments>
  </VrGamesDev.VRG_AnnouncementStop>
  <VrGamesDev.VRG_AnnouncementStop.VRG_AnnouncementStop_x0028__x0029_>
    <signature>VrGamesDev.VRG_AnnouncementStop.VRG_AnnouncementStop()</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>VRG_AnnouncementStop</name>
    <token>public  VRG_AnnouncementStop()</token>
    <scope>VrGamesDev.VRG_AnnouncementStop</scope>
    <comments>
      <summary>Constructor to have all true</summary>
    </comments>
  </VrGamesDev.VRG_AnnouncementStop.VRG_AnnouncementStop_x0028__x0029_>
  <VrGamesDev.VRG_Fader>
    <signature>VrGamesDev.VRG_Fader</signature>
    <childcount>23</childcount>
    <type>Class</type>
    <name>VRG_Fader</name>
    <token>public class VRG_Fader : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>This class modify the alpha value of an element &lt;a href="https://docs.unity3d.com/Packages/com.unity.ugui@1.0/manual/class-CanvasGroup.html"&gt;Canvas group&lt;/a&gt;
     It can fade in and fade out, it has events on every step to inform the other objects</summary>
    </comments>
  </VrGamesDev.VRG_Fader>
  <VrGamesDev.VRG_Fader.autoFadeOut>
    <signature>VrGamesDev.VRG_Fader.autoFadeOut</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>autoFadeOut</name>
    <token>public bool autoFadeOut { get; set; }</token>
    <scope>VrGamesDev.VRG_Fader</scope>
    <comments>
      <summary>Public Getter: from m_AutoFadeOut - Flag that inform the class if it should fade out after the fade in is finished</summary>
    </comments>
  </VrGamesDev.VRG_Fader.autoFadeOut>
  <VrGamesDev.VRG_Fader.m_ObjectsToFade>
    <signature>VrGamesDev.VRG_Fader.m_ObjectsToFade</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_ObjectsToFade</name>
    <token>[Tooltip("The items to turn on when the fade occurs")]
[SerializeField]
private GameObject[] m_ObjectsToFade </token>
    <scope>VrGamesDev.VRG_Fader</scope>
    <comments>
      <summary>Array that can activate some gameobjects, When it starts the fading</summary>
    </comments>
  </VrGamesDev.VRG_Fader.m_ObjectsToFade>
  <VrGamesDev.VRG_Fader.m_Status>
    <signature>VrGamesDev.VRG_Fader.m_Status</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Status</name>
    <token>[Tooltip("Flag that inform what the class is doing")]
[SerializeField]
private ENUM_Fader m_Status </token>
    <scope>VrGamesDev.VRG_Fader</scope>
    <comments>
      <summary>Flag that inform what the class is doing.</summary>
    </comments>
  </VrGamesDev.VRG_Fader.m_Status>
  <VrGamesDev.VRG_Fader.fadeInDelay>
    <signature>VrGamesDev.VRG_Fader.fadeInDelay</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>fadeInDelay</name>
    <token>public float fadeInDelay { get; set; }</token>
    <scope>VrGamesDev.VRG_Fader</scope>
    <comments>
      <summary>How long will wait before it apply the fade in</summary>
    </comments>
  </VrGamesDev.VRG_Fader.fadeInDelay>
  <VrGamesDev.VRG_Fader.fadeInDuration>
    <signature>VrGamesDev.VRG_Fader.fadeInDuration</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>fadeInDuration</name>
    <token>public float fadeInDuration { get; set; }</token>
    <scope>VrGamesDev.VRG_Fader</scope>
    <comments>
      <summary>The duration in seconds for how long will it takes to apply the fade to alpha 100%</summary>
    </comments>
  </VrGamesDev.VRG_Fader.fadeInDuration>
  <VrGamesDev.VRG_Fader.fadeOutDelay>
    <signature>VrGamesDev.VRG_Fader.fadeOutDelay</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>fadeOutDelay</name>
    <token>public float fadeOutDelay { get; set; }</token>
    <scope>VrGamesDev.VRG_Fader</scope>
    <comments>
      <summary>How long will wait before it apply the fade out</summary>
    </comments>
  </VrGamesDev.VRG_Fader.fadeOutDelay>
  <VrGamesDev.VRG_Fader.fadeOutDuration>
    <signature>VrGamesDev.VRG_Fader.fadeOutDuration</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>fadeOutDuration</name>
    <token>public float fadeOutDuration { get; set; }</token>
    <scope>VrGamesDev.VRG_Fader</scope>
    <comments>
      <summary>The duration in seconds for how long will it takes to apply the fade to alpha 0%</summary>
    </comments>
  </VrGamesDev.VRG_Fader.fadeOutDuration>
  <VrGamesDev.VRG_Fader.WhenFadeIn>
    <signature>VrGamesDev.VRG_Fader.WhenFadeIn</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>WhenFadeIn</name>
    <token>public event Action WhenFadeIn </token>
    <scope>VrGamesDev.VRG_Fader</scope>
    <comments>
      <summary>Public Event: OnFadeIn = When the fader finished the fade in, this event is triggered</summary>
    </comments>
  </VrGamesDev.VRG_Fader.WhenFadeIn>
  <VrGamesDev.VRG_Fader.WhenFadeOut>
    <signature>VrGamesDev.VRG_Fader.WhenFadeOut</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>WhenFadeOut</name>
    <token>public event Action WhenFadeOut </token>
    <scope>VrGamesDev.VRG_Fader</scope>
    <comments>
      <summary>Public Event: OnFadeOut = When the fader finished the fade OUT, this event is triggered</summary>
    </comments>
  </VrGamesDev.VRG_Fader.WhenFadeOut>
  <VrGamesDev.VRG_Fader.Play_x0028_bool_x0029_>
    <signature>VrGamesDev.VRG_Fader.Play(bool)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Play</name>
    <token>public void Play(bool valueLocal)</token>
    <scope>VrGamesDev.VRG_Fader</scope>
    <comments>
      <summary>Public method, to start the fading process</summary>
      <param-valueLocal>&lt;strong&gt;TRUE&lt;/strong&gt; = Fade in&lt;br&gt;&lt;/br&gt;
         &lt;strong&gt;FALSE&lt;/strong&gt; = Fade out</param-valueLocal>
    </comments>
    <params>
      <valueLocal>bool</valueLocal>
    </params>
  </VrGamesDev.VRG_Fader.Play_x0028_bool_x0029_>
  <VrGamesDev.VRG_FaderScene>
    <signature>VrGamesDev.VRG_FaderScene</signature>
    <childcount>13</childcount>
    <type>Class</type>
    <name>VRG_FaderScene</name>
    <token>public class VRG_FaderScene : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>Use a &lt;a href="#VrGamesDev.VRG_Fader"&gt;VRG_Fader&lt;/a&gt; to sync with the scene loading and unloading, for easier and smooth transition</summary>
    </comments>
  </VrGamesDev.VRG_FaderScene>
  <VrGamesDev.VRG_FaderScene.m_IsReady>
    <signature>VrGamesDev.VRG_FaderScene.m_IsReady</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_IsReady</name>
    <token>[Tooltip("The available status, ask for this property to know if it is available")]
[SerializeField]
protected bool m_IsReady </token>
    <scope>VrGamesDev.VRG_FaderScene</scope>
    <comments>
      <summary>The available status, ask for this property to know if it is available to use</summary>
    </comments>
  </VrGamesDev.VRG_FaderScene.m_IsReady>
  <VrGamesDev.VRG_FaderScene.m_VRG_Fader>
    <signature>VrGamesDev.VRG_FaderScene.m_VRG_Fader</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_VRG_Fader</name>
    <token>[Tooltip("Luke, I'm your Fader")]
[SerializeField]
private VRG_Fader m_VRG_Fader </token>
    <scope>VrGamesDev.VRG_FaderScene</scope>
    <comments>
      <summary>Luke, I'm your &lt;a href="index.html#VrGamesDev.VRG_Fader"&gt;Fader&lt;/a&gt;</summary>
    </comments>
  </VrGamesDev.VRG_FaderScene.m_VRG_Fader>
  <VrGamesDev.VRG_FaderScene.m_Scene>
    <signature>VrGamesDev.VRG_FaderScene.m_Scene</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Scene</name>
    <token>[Tooltip("The name of the Scene to unload")]
[SerializeField]
[SceneName]
private string m_Scene </token>
    <scope>VrGamesDev.VRG_FaderScene</scope>
    <comments>
      <summary>The name of the Scene to unload</summary>
    </comments>
  </VrGamesDev.VRG_FaderScene.m_Scene>
  <VrGamesDev.VRG_FaderScene.current>
    <signature>VrGamesDev.VRG_FaderScene.current</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>current</name>
    <token>public static string current { get; }</token>
    <scope>VrGamesDev.VRG_FaderScene</scope>
    <comments>
      <summary>The scene currently loaded</summary>
    </comments>
  </VrGamesDev.VRG_FaderScene.current>
  <VrGamesDev.VRG_FaderScene.Instance>
    <signature>VrGamesDev.VRG_FaderScene.Instance</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>Instance</name>
    <token>public static VRG_FaderScene Instance </token>
    <scope>VrGamesDev.VRG_FaderScene</scope>
    <comments>
      <summary>Singleton pattern, Instance is the unique variable in the scene from this class</summary>
    </comments>
  </VrGamesDev.VRG_FaderScene.Instance>
  <VrGamesDev.VRG_FaderScene.Load_x0028_string_x0029_>
    <signature>VrGamesDev.VRG_FaderScene.Load(string)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Load</name>
    <token>public static void Load(string valueLocal)</token>
    <scope>VrGamesDev.VRG_FaderScene</scope>
    <comments>
      <summary>Load a scene as a public static VRG_FaderScene.Load("Scene To load", "delay in seconds");
         This class is called by the script: "VRG_GoToScene.cs"</summary>
      <param-valueLocal>The name of the scene to load</param-valueLocal>
      <param-delayLocal>(Optional) The delay to start the loading, by default is 0 for an instant scene loading</param-delayLocal>
    </comments>
    <params>
      <valueLocal>string</valueLocal>
    </params>
  </VrGamesDev.VRG_FaderScene.Load_x0028_string_x0029_>
  <VrGamesDev.VRG_GoToScene>
    <signature>VrGamesDev.VRG_GoToScene</signature>
    <childcount>3</childcount>
    <type>Class</type>
    <name>VRG_GoToScene</name>
    <token>public class VRG_GoToScene : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>Load a scene using the &lt;a href="#VrGamesDev.Missions.VRG_Fader"&gt;VRG_Fader&lt;/a&gt;, using a &lt;a href="#VrGamesDev.Missions.VRG_Campaign"&gt;VRG_Campaign&lt;/a&gt; scenes configuration
     The &lt;a href="#VrGamesDev.Missions.ENUM_GameScenes"&gt;type of ENUM_GameScenes&lt;/a&gt; if not ENUM_GameScenes.CUSTOM, the m_Scene data is ignored.</summary>
    </comments>
  </VrGamesDev.VRG_GoToScene>
  <VrGamesDev.VRG_GoToScene.m_Scene>
    <signature>VrGamesDev.VRG_GoToScene.m_Scene</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Scene</name>
    <token>[Tooltip("The name of the Scene to load")]
[SerializeField]
[SceneName]
private string m_Scene </token>
    <scope>VrGamesDev.VRG_GoToScene</scope>
    <comments>
      <summary>The name of the Scene to load</summary>
    </comments>
  </VrGamesDev.VRG_GoToScene.m_Scene>
  <VrGamesDev.VRG_GoToScene.Do_x0028__x0029_>
    <signature>VrGamesDev.VRG_GoToScene.Do()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Do</name>
    <token>protected override IEnumerator Do()</token>
    <scope>VrGamesDev.VRG_GoToScene</scope>
    <comments>
      <summary>&lt;strong&gt;&lt;em&gt;Do it's thing: &lt;/em&gt;&lt;/strong&gt; Send to a new scene using &lt;a href="#VrGamesDev.Missions.VRG_Fader"&gt;VRG_Fader&lt;/a&gt;</summary>
    </comments>
  </VrGamesDev.VRG_GoToScene.Do_x0028__x0029_>
  <VrGamesDev.VRG_Managers>
    <signature>VrGamesDev.VRG_Managers</signature>
    <childcount>5</childcount>
    <type>Class</type>
    <name>VRG_Managers</name>
    <token>public class VRG_Managers : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>You need to add this prefab to any scene that will load the core classes
     and singletons like &lt;a href="#VrGamesDev.Missions.VRG_Campaign"&gt;VRG_Campaign&lt;/a&gt; for all the game settings, If the core was
     already loaded, this class ignores the loading.</summary>
    </comments>
  </VrGamesDev.VRG_Managers>
  <VrGamesDev.VRG_Managers.m_Scene>
    <signature>VrGamesDev.VRG_Managers.m_Scene</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Scene</name>
    <token>[Tooltip("The name of the core Scene to load the singletons and managers")]
[SerializeField]
[SceneName]
private string m_Scene </token>
    <scope>VrGamesDev.VRG_Managers</scope>
    <comments>
      <summary>The name of the core Scene to load the singletons and managers</summary>
    </comments>
  </VrGamesDev.VRG_Managers.m_Scene>
  <VrGamesDev.VRG_UnloadAdditiveScene>
    <signature>VrGamesDev.VRG_UnloadAdditiveScene</signature>
    <childcount>2</childcount>
    <type>Class</type>
    <name>VRG_UnloadAdditiveScene</name>
    <token>public class VRG_UnloadAdditiveScene : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>Unload an additive scene, just provide the name of the scene
     If custom you need to fill the m_Scene property, this property will
     be ignored if m_Type is not custom.</summary>
    </comments>
  </VrGamesDev.VRG_UnloadAdditiveScene>
  <VrGamesDev.VRG_Skin>
    <signature>VrGamesDev.VRG_Skin</signature>
    <childcount>18</childcount>
    <type>Class</type>
    <name>VRG_Skin</name>
    <token>[System.Serializable]
public class VRG_Skin </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>Load the current skin theme to the VRG_SkinPool</summary>
    </comments>
  </VrGamesDev.VRG_Skin>
  <VrGamesDev.VRG_Skin.font>
    <signature>VrGamesDev.VRG_Skin.font</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>font</name>
    <token>[Tooltip("The font used, you can change the font of every text component with this master")]
[SerializeField]
public Font font </token>
    <scope>VrGamesDev.VRG_Skin</scope>
    <comments>
      <summary>The font used, you can change the font of every text component with this master for the background components</summary>
    </comments>
  </VrGamesDev.VRG_Skin.font>
  <VrGamesDev.VRG_Skin.fontColor>
    <signature>VrGamesDev.VRG_Skin.fontColor</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>fontColor</name>
    <token>[Tooltip("The font color used by default")]
[SerializeField]
public Color fontColor </token>
    <scope>VrGamesDev.VRG_Skin</scope>
    <comments>
      <summary>The font color used by default</summary>
    </comments>
  </VrGamesDev.VRG_Skin.fontColor>
  <VrGamesDev.VRG_Skin.fontColorTitle>
    <signature>VrGamesDev.VRG_Skin.fontColorTitle</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>fontColorTitle</name>
    <token>[Tooltip("The font color used by default")]
[SerializeField]
public Color fontColorTitle </token>
    <scope>VrGamesDev.VRG_Skin</scope>
    <comments>
      <summary>The font color used by default for the titles</summary>
    </comments>
  </VrGamesDev.VRG_Skin.fontColorTitle>
  <VrGamesDev.VRG_Skin.fontColorForeground>
    <signature>VrGamesDev.VRG_Skin.fontColorForeground</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>fontColorForeground</name>
    <token>[Tooltip("The font color used by default in the foregrownd layer")]
[SerializeField]
public Color fontColorForeground </token>
    <scope>VrGamesDev.VRG_Skin</scope>
    <comments>
      <summary>The font color used by default in the foregrownd layer</summary>
    </comments>
  </VrGamesDev.VRG_Skin.fontColorForeground>
  <VrGamesDev.VRG_Skin.fontColorForegroundTitle>
    <signature>VrGamesDev.VRG_Skin.fontColorForegroundTitle</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>fontColorForegroundTitle</name>
    <token>[Tooltip("The font color used by default in the foregrownd layer")]
[SerializeField]
public Color fontColorForegroundTitle </token>
    <scope>VrGamesDev.VRG_Skin</scope>
    <comments>
      <summary>The font color used by default in the foregrownd layer for the titles</summary>
    </comments>
  </VrGamesDev.VRG_Skin.fontColorForegroundTitle>
  <VrGamesDev.VRG_Skin.backgroundColor>
    <signature>VrGamesDev.VRG_Skin.backgroundColor</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>backgroundColor</name>
    <token>[Tooltip("The background color used by default")]
[SerializeField]
public Color backgroundColor </token>
    <scope>VrGamesDev.VRG_Skin</scope>
    <comments>
      <summary>The background color used by default</summary>
    </comments>
  </VrGamesDev.VRG_Skin.backgroundColor>
  <VrGamesDev.VRG_Skin.foregroundColor>
    <signature>VrGamesDev.VRG_Skin.foregroundColor</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>foregroundColor</name>
    <token>[SerializeField]
public Color foregroundColor </token>
    <scope>VrGamesDev.VRG_Skin</scope>
    <comments>
      <summary>The background color used by default</summary>
    </comments>
  </VrGamesDev.VRG_Skin.foregroundColor>
  <VrGamesDev.VRG_Skin.thirdColor>
    <signature>VrGamesDev.VRG_Skin.thirdColor</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>thirdColor</name>
    <token>[Tooltip("The color of the background of the camera it is a renderer")]
[SerializeField]
public Color thirdColor </token>
    <scope>VrGamesDev.VRG_Skin</scope>
    <comments>
      <summary>The color of the background of the camera it is a renderer</summary>
    </comments>
  </VrGamesDev.VRG_Skin.thirdColor>
  <VrGamesDev.VRG_Skin.iconBackground>
    <signature>VrGamesDev.VRG_Skin.iconBackground</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>iconBackground</name>
    <token>[SerializeField]
public Color iconBackground </token>
    <scope>VrGamesDev.VRG_Skin</scope>
    <comments>
      <summary>In the VRG_Button - Icon and Label prefab, the icon background color</summary>
    </comments>
  </VrGamesDev.VRG_Skin.iconBackground>
  <VrGamesDev.VRG_Skin.iconColor>
    <signature>VrGamesDev.VRG_Skin.iconColor</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>iconColor</name>
    <token>[SerializeField]
public Color iconColor </token>
    <scope>VrGamesDev.VRG_Skin</scope>
    <comments>
      <summary>In the VRG_Button - Icon and Label prefab, the icon color itself</summary>
    </comments>
  </VrGamesDev.VRG_Skin.iconColor>
  <VrGamesDev.VRG_Skin.iconText>
    <signature>VrGamesDev.VRG_Skin.iconText</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>iconText</name>
    <token>[SerializeField]
public Color iconText </token>
    <scope>VrGamesDev.VRG_Skin</scope>
    <comments>
      <summary>In the VRG_Button - Icon and Label prefab, the font color</summary>
    </comments>
  </VrGamesDev.VRG_Skin.iconText>
  <VrGamesDev.VRG_Skin.buttonText>
    <signature>VrGamesDev.VRG_Skin.buttonText</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>buttonText</name>
    <token>[SerializeField]
public Color buttonText </token>
    <scope>VrGamesDev.VRG_Skin</scope>
    <comments>
      <summary>The text of the &lt;a href="https://docs.unity3d.com/2018.3/Documentation/ScriptReference/UI.Button.html"&gt;Unity UI - button element&lt;/a&gt;</summary>
    </comments>
  </VrGamesDev.VRG_Skin.buttonText>
  <VrGamesDev.VRG_Skin.buttonNormal>
    <signature>VrGamesDev.VRG_Skin.buttonNormal</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>buttonNormal</name>
    <token>[SerializeField]
public Color buttonNormal </token>
    <scope>VrGamesDev.VRG_Skin</scope>
    <comments>
      <summary>The button Normal color from &lt;a href="https://docs.unity3d.com/2018.3/Documentation/ScriptReference/UI.ColorBlock.html"&gt;ColorBlock&lt;/a&gt;</summary>
    </comments>
  </VrGamesDev.VRG_Skin.buttonNormal>
  <VrGamesDev.VRG_Skin.buttonHighlighted>
    <signature>VrGamesDev.VRG_Skin.buttonHighlighted</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>buttonHighlighted</name>
    <token>[SerializeField]
public Color buttonHighlighted </token>
    <scope>VrGamesDev.VRG_Skin</scope>
    <comments>
      <summary>The button Highlighted color from &lt;a href="https://docs.unity3d.com/2018.3/Documentation/ScriptReference/UI.ColorBlock.html"&gt;ColorBlock&lt;/a&gt;</summary>
    </comments>
  </VrGamesDev.VRG_Skin.buttonHighlighted>
  <VrGamesDev.VRG_Skin.buttonPressed>
    <signature>VrGamesDev.VRG_Skin.buttonPressed</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>buttonPressed</name>
    <token>[SerializeField]
public Color buttonPressed </token>
    <scope>VrGamesDev.VRG_Skin</scope>
    <comments>
      <summary>The button Pressed color from &lt;a href="https://docs.unity3d.com/2018.3/Documentation/ScriptReference/UI.ColorBlock.html"&gt;ColorBlock&lt;/a&gt;</summary>
    </comments>
  </VrGamesDev.VRG_Skin.buttonPressed>
  <VrGamesDev.VRG_Skin.buttonSelected>
    <signature>VrGamesDev.VRG_Skin.buttonSelected</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>buttonSelected</name>
    <token>[SerializeField]
public Color buttonSelected </token>
    <scope>VrGamesDev.VRG_Skin</scope>
    <comments>
      <summary>The button Selected color from &lt;a href="https://docs.unity3d.com/2018.3/Documentation/ScriptReference/UI.ColorBlock.html"&gt;ColorBlock&lt;/a&gt;</summary>
    </comments>
  </VrGamesDev.VRG_Skin.buttonSelected>
  <VrGamesDev.VRG_Skin.buttonDisabled>
    <signature>VrGamesDev.VRG_Skin.buttonDisabled</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>buttonDisabled</name>
    <token>[SerializeField]
public Color buttonDisabled </token>
    <scope>VrGamesDev.VRG_Skin</scope>
    <comments>
      <summary>The button Disabled color from &lt;a href="https://docs.unity3d.com/2018.3/Documentation/ScriptReference/UI.ColorBlock.html"&gt;ColorBlock&lt;/a&gt;</summary>
    </comments>
  </VrGamesDev.VRG_Skin.buttonDisabled>
  <VrGamesDev.VRG_Skin.Set_x0028_VRG_Skin_x0029_>
    <signature>VrGamesDev.VRG_Skin.Set(VRG_Skin)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Set</name>
    <token>public void Set(VRG_Skin valueLocal)</token>
    <scope>VrGamesDev.VRG_Skin</scope>
    <comments>
      <summary>Assign this data to the main game</summary>
    </comments>
    <params>
      <valueLocal>VRG_Skin</valueLocal>
    </params>
  </VrGamesDev.VRG_Skin.Set_x0028_VRG_Skin_x0029_>
  <VrGamesDev.VRG_SkinApply>
    <signature>VrGamesDev.VRG_SkinApply</signature>
    <childcount>6</childcount>
    <type>Class</type>
    <name>VRG_SkinApply</name>
    <token>public class VRG_SkinApply : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>Load the current skin theme to the VRG_SkinPool</summary>
    </comments>
  </VrGamesDev.VRG_SkinApply>
  <VrGamesDev.VRG_SkinApply.m_SessionData>
    <signature>VrGamesDev.VRG_SkinApply.m_SessionData</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_SessionData</name>
    <token>[Tooltip("The data to query from the m_SessionObject")]
[SerializeField]
private string m_SessionData </token>
    <scope>VrGamesDev.VRG_SkinApply</scope>
    <comments>
      <summary>The data to query from the m_SessionObject</summary>
    </comments>
  </VrGamesDev.VRG_SkinApply.m_SessionData>
  <VrGamesDev.VRG_SkinApply.m_WhenApply>
    <signature>VrGamesDev.VRG_SkinApply.m_WhenApply</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_WhenApply</name>
    <token>[Tooltip("If the loaded value is true this GameObject will trigger")]
[SerializeField]
protected GameObject[] m_WhenApply </token>
    <scope>VrGamesDev.VRG_SkinApply</scope>
    <comments>
      <summary>If the loaded value is true this GameObject will trigger</summary>
    </comments>
  </VrGamesDev.VRG_SkinApply.m_WhenApply>
  <VrGamesDev.VRG_SkinApply.m_Skin>
    <signature>VrGamesDev.VRG_SkinApply.m_Skin</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Skin</name>
    <token>[Tooltip("All the skin data colors")]
[SerializeField]
private VRG_Skin m_Skin </token>
    <scope>VrGamesDev.VRG_SkinApply</scope>
    <comments>
      <summary>All the skin data colors</summary>
    </comments>
  </VrGamesDev.VRG_SkinApply.m_Skin>
  <VrGamesDev.VRG_SkinApply.Do_x0028__x0029_>
    <signature>VrGamesDev.VRG_SkinApply.Do()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Do</name>
    <token>protected override IEnumerator Do()</token>
    <scope>VrGamesDev.VRG_SkinApply</scope>
    <comments>
      <summary>&lt;strong&gt;&lt;em&gt;Do it's thing: &lt;/em&gt;&lt;/strong&gt;Load from VRG_Session a value</summary>
    </comments>
  </VrGamesDev.VRG_SkinApply.Do_x0028__x0029_>
  <VrGamesDev.VRG_SkinLoad>
    <signature>VrGamesDev.VRG_SkinLoad</signature>
    <childcount>3</childcount>
    <type>Class</type>
    <name>VRG_SkinLoad</name>
    <token>public class VRG_SkinLoad : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>Load the current skin theme to the VRG_SkinPool</summary>
    </comments>
  </VrGamesDev.VRG_SkinLoad>
  <VrGamesDev.VRG_SkinLoad.m_Value>
    <signature>VrGamesDev.VRG_SkinLoad.m_Value</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Value</name>
    <token>[Tooltip("The skin name to load")]
[SerializeField]
protected string m_Value </token>
    <scope>VrGamesDev.VRG_SkinLoad</scope>
    <comments>
      <summary>The skin name to load</summary>
    </comments>
  </VrGamesDev.VRG_SkinLoad.m_Value>
  <VrGamesDev.VRG_SkinLoad.Do_x0028__x0029_>
    <signature>VrGamesDev.VRG_SkinLoad.Do()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Do</name>
    <token>protected override IEnumerator Do()</token>
    <scope>VrGamesDev.VRG_SkinLoad</scope>
    <comments>
      <summary>&lt;strong&gt;&lt;em&gt;Do it's thing: &lt;/em&gt;&lt;/strong&gt; Load the Skin</summary>
    </comments>
  </VrGamesDev.VRG_SkinLoad.Do_x0028__x0029_>
  <VrGamesDev.VRG_SkinPool>
    <signature>VrGamesDev.VRG_SkinPool</signature>
    <childcount>21</childcount>
    <type>Class</type>
    <name>VRG_SkinPool</name>
    <token>public class VRG_SkinPool : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>Load the current skin theme to the VRG_SkinPool</summary>
    </comments>
  </VrGamesDev.VRG_SkinPool>
  <VrGamesDev.VRG_SkinPool.isReady>
    <signature>VrGamesDev.VRG_SkinPool.isReady</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>isReady</name>
    <token>public static bool isReady { get; }</token>
    <scope>VrGamesDev.VRG_SkinPool</scope>
    <comments>
      <summary>The available status, ask for this property to know if it is available to use</summary>
    </comments>
  </VrGamesDev.VRG_SkinPool.isReady>
  <VrGamesDev.VRG_SkinPool.m_IncludeCameraColor>
    <signature>VrGamesDev.VRG_SkinPool.m_IncludeCameraColor</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_IncludeCameraColor</name>
    <token>[Tooltip("The following objects will not be modified")]
[SerializeField]
private bool m_IncludeCameraColor </token>
    <scope>VrGamesDev.VRG_SkinPool</scope>
    <comments>
      <summary>The following objects will not be modified</summary>
    </comments>
  </VrGamesDev.VRG_SkinPool.m_IncludeCameraColor>
  <VrGamesDev.VRG_SkinPool.m_Current>
    <signature>VrGamesDev.VRG_SkinPool.m_Current</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Current</name>
    <token>[Tooltip("The current skin")]
[SerializeField]
protected int m_Current </token>
    <scope>VrGamesDev.VRG_SkinPool</scope>
    <comments>
      <summary>The current skin</summary>
    </comments>
  </VrGamesDev.VRG_SkinPool.m_Current>
  <VrGamesDev.VRG_SkinPool.m_Skin>
    <signature>VrGamesDev.VRG_SkinPool.m_Skin</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Skin</name>
    <token>[Tooltip("All the skin data colors")]
[SerializeField]
private VRG_Skin m_Skin </token>
    <scope>VrGamesDev.VRG_SkinPool</scope>
    <comments>
      <summary>All the skin data colors</summary>
    </comments>
  </VrGamesDev.VRG_SkinPool.m_Skin>
  <VrGamesDev.VRG_SkinPool.m_Pool>
    <signature>VrGamesDev.VRG_SkinPool.m_Pool</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Pool</name>
    <token>[Tooltip("The  skin pool")]
[SerializeField]
protected List&lt;Transform&gt; m_Pool </token>
    <scope>VrGamesDev.VRG_SkinPool</scope>
    <comments>
      <summary>The skin pool</summary>
    </comments>
  </VrGamesDev.VRG_SkinPool.m_Pool>
  <VrGamesDev.VRG_SkinPool.Instance>
    <signature>VrGamesDev.VRG_SkinPool.Instance</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>Instance</name>
    <token>public static VRG_SkinPool Instance </token>
    <scope>VrGamesDev.VRG_SkinPool</scope>
    <comments>
      <summary>Singleton pattern, Instance is the unique variable in the scene from this class</summary>
    </comments>
  </VrGamesDev.VRG_SkinPool.Instance>
  <VrGamesDev.VRG_SkinPool.IsValid_x0028_bool_x0029_>
    <signature>VrGamesDev.VRG_SkinPool.IsValid(bool)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>IsValid</name>
    <token>public static IEnumerator IsValid(bool valueLocal)</token>
    <scope>VrGamesDev.VRG_SkinPool</scope>
    <comments>
      <summary>Ask for this ienumerator if the VRG_SkinPool is ready</summary>
      <returns>Null when the VRG_SkinPool is ready to be queried</returns>
    </comments>
    <params>
      <valueLocal>bool</valueLocal>
    </params>
  </VrGamesDev.VRG_SkinPool.IsValid_x0028_bool_x0029_>
  <VrGamesDev.VRG_SkinPoolExists>
    <signature>VrGamesDev.VRG_SkinPoolExists</signature>
    <childcount>2</childcount>
    <type>Class</type>
    <name>VRG_SkinPoolExists</name>
    <token>public class VRG_SkinPoolExists : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>This class checks if the VRG_SkinPool singleton exists, if not, it disable itself</summary>
    </comments>
  </VrGamesDev.VRG_SkinPoolExists>
  <VrGamesDev.VRG_SkinPoolIcon>
    <signature>VrGamesDev.VRG_SkinPoolIcon</signature>
    <childcount>7</childcount>
    <type>Class</type>
    <name>VRG_SkinPoolIcon</name>
    <token>public class VRG_SkinPoolIcon : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>Load the current skin theme into the VRG_SkinPool</summary>
    </comments>
  </VrGamesDev.VRG_SkinPoolIcon>
  <VrGamesDev.VRG_SkinPoolIcon.m_UpdateBox>
    <signature>VrGamesDev.VRG_SkinPoolIcon.m_UpdateBox</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_UpdateBox</name>
    <token>[Tooltip("The Update component, it appears 2 seconds and dissapear")]
[SerializeField]
private GameObject m_UpdateBox </token>
    <scope>VrGamesDev.VRG_SkinPoolIcon</scope>
    <comments>
      <summary>The Update component, it appears 2 seconds and dissapear</summary>
    </comments>
  </VrGamesDev.VRG_SkinPoolIcon.m_UpdateBox>
  <VrGamesDev.VRG_SkinPoolIcon.m_UpdateText>
    <signature>VrGamesDev.VRG_SkinPoolIcon.m_UpdateText</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_UpdateText</name>
    <token>[Tooltip("The text component, it display the current skin uploaded")]
[SerializeField]
private Text m_UpdateText </token>
    <scope>VrGamesDev.VRG_SkinPoolIcon</scope>
    <comments>
      <summary>The text component, it display the current skin uploaded</summary>
    </comments>
  </VrGamesDev.VRG_SkinPoolIcon.m_UpdateText>
  <VrGamesDev.VRG_SkinPoolSon>
    <signature>VrGamesDev.VRG_SkinPoolSon</signature>
    <childcount>1</childcount>
    <type>Class</type>
    <name>VRG_SkinPoolSon</name>
    <token>public class VRG_SkinPoolSon : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>Load the current skin theme to the VRG_Campaign</summary>
    </comments>
  </VrGamesDev.VRG_SkinPoolSon>
  <VrGamesDev.VRG_SkinRandom>
    <signature>VrGamesDev.VRG_SkinRandom</signature>
    <childcount>6</childcount>
    <type>Class</type>
    <name>VRG_SkinRandom</name>
    <token>public class VRG_SkinRandom : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>Load the current skin theme to the VRG_SkinPool</summary>
    </comments>
  </VrGamesDev.VRG_SkinRandom>
  <VrGamesDev.VRG_SkinRandom.m_Button>
    <signature>VrGamesDev.VRG_SkinRandom.m_Button</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Button</name>
    <token>[Tooltip("The button colors data")]
[SerializeField]
private bool m_Button </token>
    <scope>VrGamesDev.VRG_SkinRandom</scope>
    <comments>
      <summary>The button colors data</summary>
    </comments>
  </VrGamesDev.VRG_SkinRandom.m_Button>
  <VrGamesDev.VRG_SkinRandom.m_Icon>
    <signature>VrGamesDev.VRG_SkinRandom.m_Icon</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Icon</name>
    <token>[Tooltip("The Icon colors data")]
[SerializeField]
private bool m_Icon </token>
    <scope>VrGamesDev.VRG_SkinRandom</scope>
    <comments>
      <summary>The Icon colors data</summary>
    </comments>
  </VrGamesDev.VRG_SkinRandom.m_Icon>
  <VrGamesDev.VRG_SkinRandom.m_Font>
    <signature>VrGamesDev.VRG_SkinRandom.m_Font</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Font</name>
    <token>[Tooltip("The Font colors data and type")]
[SerializeField]
private bool m_Font </token>
    <scope>VrGamesDev.VRG_SkinRandom</scope>
    <comments>
      <summary>The Font colors data and type</summary>
    </comments>
  </VrGamesDev.VRG_SkinRandom.m_Font>
  <VrGamesDev.VRG_SkinRandom.m_Background>
    <signature>VrGamesDev.VRG_SkinRandom.m_Background</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Background</name>
    <token>[Tooltip("The background and foregroubd colors data")]
[SerializeField]
private bool m_Background </token>
    <scope>VrGamesDev.VRG_SkinRandom</scope>
    <comments>
      <summary>The background and foregroubd colors data</summary>
    </comments>
  </VrGamesDev.VRG_SkinRandom.m_Background>
  <VrGamesDev.VRG_SkinRandom.m_Foreground>
    <signature>VrGamesDev.VRG_SkinRandom.m_Foreground</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Foreground</name>
    <token>[Tooltip("The background and foregroubd colors data")]
[SerializeField]
private bool m_Foreground </token>
    <scope>VrGamesDev.VRG_SkinRandom</scope>
    <comments>
      <summary>The background and foregroubd colors data</summary>
    </comments>
  </VrGamesDev.VRG_SkinRandom.m_Foreground>
  <VrGamesDev.VRG_SkinSession>
    <signature>VrGamesDev.VRG_SkinSession</signature>
    <childcount>3</childcount>
    <type>Class</type>
    <name>VRG_SkinSession</name>
    <token>public class VRG_SkinSession : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>Load the current skin theme to the VRG_SkinPool</summary>
    </comments>
  </VrGamesDev.VRG_SkinSession>
  <VrGamesDev.VRG_SkinSession.m_SessionData>
    <signature>VrGamesDev.VRG_SkinSession.m_SessionData</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_SessionData</name>
    <token>[Tooltip("The data to query from the m_SessionObject")]
[SerializeField]
private string m_SessionData </token>
    <scope>VrGamesDev.VRG_SkinSession</scope>
    <comments>
      <summary>The data to query from the m_SessionObject</summary>
    </comments>
  </VrGamesDev.VRG_SkinSession.m_SessionData>
  <VrGamesDev.VRG_UI>
    <signature>VrGamesDev.VRG_UI</signature>
    <childcount>15</childcount>
    <type>Class</type>
    <name>VRG_UI</name>
    <token>public class VRG_UI : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>Set the VRG_SkinPool UI data into a canvas elements</summary>
    </comments>
  </VrGamesDev.VRG_UI>
  <VrGamesDev.VRG_UI.m_SetMainCamera>
    <signature>VrGamesDev.VRG_UI.m_SetMainCamera</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_SetMainCamera</name>
    <token>[Tooltip("The following objects will not be modified")]
[SerializeField]
private bool m_SetMainCamera </token>
    <scope>VrGamesDev.VRG_UI</scope>
    <comments>
      <summary>The following objects will not be modified</summary>
    </comments>
  </VrGamesDev.VRG_UI.m_SetMainCamera>
  <VrGamesDev.VRG_UI.m_IncludeCameraColor>
    <signature>VrGamesDev.VRG_UI.m_IncludeCameraColor</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_IncludeCameraColor</name>
    <token>[Tooltip("The following objects will not be modified")]
[SerializeField]
private bool m_IncludeCameraColor </token>
    <scope>VrGamesDev.VRG_UI</scope>
    <comments>
      <summary>The following objects will not be modified</summary>
    </comments>
  </VrGamesDev.VRG_UI.m_IncludeCameraColor>
  <VrGamesDev.VRG_UI.m_Except>
    <signature>VrGamesDev.VRG_UI.m_Except</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Except</name>
    <token>[Tooltip("The following objects will not be modified")]
[SerializeField]
private List&lt;Transform&gt; m_Except </token>
    <scope>VrGamesDev.VRG_UI</scope>
    <comments>
      <summary>The following objects will not be modified</summary>
    </comments>
  </VrGamesDev.VRG_UI.m_Except>
  <VrGamesDev.VRG_UI.m_AllChildren>
    <signature>VrGamesDev.VRG_UI.m_AllChildren</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_AllChildren</name>
    <token>[Tooltip("This component and all its child are excepted")]
[SerializeField]
private List&lt;Transform&gt; m_AllChildren </token>
    <scope>VrGamesDev.VRG_UI</scope>
    <comments>
      <summary>The following objects will not be modified</summary>
    </comments>
  </VrGamesDev.VRG_UI.m_AllChildren>
  <VrGamesDev.VRG_UI.m_BackgroundColor>
    <signature>VrGamesDev.VRG_UI.m_BackgroundColor</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_BackgroundColor</name>
    <token>[Tooltip("The following objects will be Background Colored")]
[SerializeField]
private List&lt;Transform&gt; m_BackgroundColor </token>
    <scope>VrGamesDev.VRG_UI</scope>
    <comments>
      <summary>The following objects will be Background Colored</summary>
    </comments>
  </VrGamesDev.VRG_UI.m_BackgroundColor>
  <VrGamesDev.VRG_UI.m_ForegroundColor>
    <signature>VrGamesDev.VRG_UI.m_ForegroundColor</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_ForegroundColor</name>
    <token>[Tooltip("The following objects will be Foreground Colored")]
[SerializeField]
private List&lt;Transform&gt; m_ForegroundColor </token>
    <scope>VrGamesDev.VRG_UI</scope>
    <comments>
      <summary>The following objects will be Foreground Colored</summary>
    </comments>
  </VrGamesDev.VRG_UI.m_ForegroundColor>
  <VrGamesDev.VRG_UI.m_ThirdColor>
    <signature>VrGamesDev.VRG_UI.m_ThirdColor</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_ThirdColor</name>
    <token>[Tooltip("The following objects will be Camera Colored")]
[SerializeField]
private List&lt;Transform&gt; m_ThirdColor </token>
    <scope>VrGamesDev.VRG_UI</scope>
    <comments>
      <summary>The following objects will be Background Colored</summary>
    </comments>
  </VrGamesDev.VRG_UI.m_ThirdColor>
  <VrGamesDev.VRG_UI.m_FontMarked>
    <signature>VrGamesDev.VRG_UI.m_FontMarked</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_FontMarked</name>
    <token>[Tooltip("The following objects will be marked as font with the secondary color")]
[SerializeField]
private List&lt;Transform&gt; m_FontMarked </token>
    <scope>VrGamesDev.VRG_UI</scope>
    <comments>
      <summary>The following objects will be marked as font with the secondary color</summary>
    </comments>
  </VrGamesDev.VRG_UI.m_FontMarked>
  <VrGamesDev.VRG_UI.Do_x0028__x0029_>
    <signature>VrGamesDev.VRG_UI.Do()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Do</name>
    <token>protected override IEnumerator Do()</token>
    <scope>VrGamesDev.VRG_UI</scope>
    <comments>
      <summary>&lt;strong&gt;&lt;em&gt;Do it's thing: &lt;/em&gt;&lt;/strong&gt; Apply the "CSS" styles from VRG_SkinPool into this UI/Canvas elements</summary>
    </comments>
  </VrGamesDev.VRG_UI.Do_x0028__x0029_>
  <VrGamesDev.VRG_UICustom>
    <signature>VrGamesDev.VRG_UICustom</signature>
    <childcount>8</childcount>
    <type>Class</type>
    <name>VRG_UICustom</name>
    <token>public class VRG_UICustom : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>Set the VRG_Campaign UI data into a canvas elements</summary>
    </comments>
  </VrGamesDev.VRG_UICustom>
  <VrGamesDev.VRG_UICustom.m_Except>
    <signature>VrGamesDev.VRG_UICustom.m_Except</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Except</name>
    <token>[Tooltip("If you need to except this item")]
[SerializeField]
private ENUM_VRG_UIExcept m_Except </token>
    <scope>VrGamesDev.VRG_UICustom</scope>
    <comments>
      <summary>If you need this to get colorized with the Background</summary>
    </comments>
  </VrGamesDev.VRG_UICustom.m_Except>
  <VrGamesDev.VRG_UICustom.m_Color>
    <signature>VrGamesDev.VRG_UICustom.m_Color</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Color</name>
    <token>[Tooltip("If you need to except this item")]
[SerializeField]
private ENUM_VRG_UIColor m_Color </token>
    <scope>VrGamesDev.VRG_UICustom</scope>
    <comments>
      <summary>If you need this to get colorized with the Background</summary>
    </comments>
  </VrGamesDev.VRG_UICustom.m_Color>
  <VrGamesDev.VRG_UICustom.m_Font>
    <signature>VrGamesDev.VRG_UICustom.m_Font</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Font</name>
    <token>[Tooltip("If you need to mark this font with the secondary color")]
[SerializeField]
private bool m_Font </token>
    <scope>VrGamesDev.VRG_UICustom</scope>
    <comments>
      <summary>If you need to mark this font with the secondary color</summary>
    </comments>
  </VrGamesDev.VRG_UICustom.m_Font>
  <VrGamesDev.VRG_Audio>
    <signature>VrGamesDev.VRG_Audio</signature>
    <childcount>18</childcount>
    <type>Class</type>
    <name>VRG_Audio</name>
    <token>public class VRG_Audio : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>The main class from &lt;a href="#VrGamesDev.Missions"&gt;package Missions&lt;/a&gt;, this class handles all the data of the game
	 and can be accessed by its public static methods, VRG_Audio.Instance as a singleton design.</summary>
    </comments>
  </VrGamesDev.VRG_Audio>
  <VrGamesDev.VRG_Audio.isReady>
    <signature>VrGamesDev.VRG_Audio.isReady</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>isReady</name>
    <token>public static bool isReady { get; }</token>
    <scope>VrGamesDev.VRG_Audio</scope>
    <comments>
      <summary>You can ask for this variable to know if the object is ready or is still querying information</summary>
    </comments>
  </VrGamesDev.VRG_Audio.isReady>
  <VrGamesDev.VRG_Audio.m_AudioMixer>
    <signature>VrGamesDev.VRG_Audio.m_AudioMixer</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_AudioMixer</name>
    <token>[Tooltip("The base AudioMixer")]
[SerializeField]
private AudioMixer m_AudioMixer </token>
    <scope>VrGamesDev.VRG_Audio</scope>
    <comments>
      <summary>The base &lt;a href="https://docs.unity3d.com/2019.1/Documentation/ScriptReference/Audio.AudioMixer.html"&gt;AudioMixer&lt;/a&gt;, included in the &lt;a href="#VrGamesDev.Missions"&gt;Missions &lt;/a&gt;package</summary>
    </comments>
  </VrGamesDev.VRG_Audio.m_AudioMixer>
  <VrGamesDev.VRG_Audio.IsValid_x0028_bool_x0029_>
    <signature>VrGamesDev.VRG_Audio.IsValid(bool)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>IsValid</name>
    <token>public static IEnumerator IsValid(bool valueLocal)</token>
    <scope>VrGamesDev.VRG_Audio</scope>
    <comments>
      <summary>Ask for this ienumerator if the VRG_Audio is ready</summary>
      <returns>Null when the VRG_Remote is ready to be queried</returns>
    </comments>
    <params>
      <valueLocal>bool</valueLocal>
    </params>
  </VrGamesDev.VRG_Audio.IsValid_x0028_bool_x0029_>
  <VrGamesDev.VRG_Audio.Mute_x0028_ENUM_AudioMixer_x002C__x0020_bool_x0029_>
    <signature>VrGamesDev.VRG_Audio.Mute(ENUM_AudioMixer, bool)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Mute</name>
    <token>public static void Mute(ENUM_AudioMixer audioLocal, bool valueLocal)</token>
    <scope>VrGamesDev.VRG_Audio</scope>
    <comments>
      <summary>Mute a group from the &lt;a href="https://docs.unity3d.com/2019.1/Documentation/ScriptReference/Audio.AudioMixer.html"&gt;AudioMixer&lt;/a&gt; and save it into the game session</summary>
      <param-audioLocal>The &lt;a href="https://docs.unity3d.com/2019.1/Documentation/ScriptReference/Audio.AudioMixer.html"&gt;AudioMixer&lt;/a&gt; group as &lt;a href="#VrGamesDev.Missions.ENUM_AudioMixer"&gt;ENUM_AudioMixer&lt;/a&gt; or as the int place in the enum</param-audioLocal>
      <param-valueLocal>&lt;strong&gt;&lt;em&gt;(Optional)&lt;/em&gt;&lt;/strong&gt; The mute status, by default is true</param-valueLocal>
    </comments>
    <params>
      <audioLocal>ENUM_AudioMixer</audioLocal>
      <valueLocal>bool</valueLocal>
    </params>
  </VrGamesDev.VRG_Audio.Mute_x0028_ENUM_AudioMixer_x002C__x0020_bool_x0029_>
  <VrGamesDev.VRG_AudioExists>
    <signature>VrGamesDev.VRG_AudioExists</signature>
    <childcount>2</childcount>
    <type>Class</type>
    <name>VRG_AudioExists</name>
    <token>public class VRG_AudioExists : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>This class checks if the VRG_Audio singleton exists, if not, it disable itself</summary>
    </comments>
  </VrGamesDev.VRG_AudioExists>
  <VrGamesDev.VRG_AudioRefresh>
    <signature>VrGamesDev.VRG_AudioRefresh</signature>
    <childcount>1</childcount>
    <type>Class</type>
    <name>VRG_AudioRefresh</name>
    <token>public class VRG_AudioRefresh : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>Update the VRG_Audio mute settings of all the groups from the audio mixer</summary>
    </comments>
  </VrGamesDev.VRG_AudioRefresh>
  <VrGamesDev.VRG_CameraBackground>
    <signature>VrGamesDev.VRG_CameraBackground</signature>
    <childcount>15</childcount>
    <type>Class</type>
    <name>VRG_CameraBackground</name>
    <token>public class VRG_CameraBackground : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>Size a gameobject at the farClipPlane of the camera render distance,
     and scale it to aspect ratio (portrait / Landscape)</summary>
    </comments>
  </VrGamesDev.VRG_CameraBackground>
  <VrGamesDev.VRG_CameraBackground.m_Camera>
    <signature>VrGamesDev.VRG_CameraBackground.m_Camera</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Camera</name>
    <token>[Tooltip("The camera to affect, by default gets the main camera")]
[SerializeField]
private Camera m_Camera </token>
    <scope>VrGamesDev.VRG_CameraBackground</scope>
    <comments>
      <summary>The camera to affect, by default gets the main camera</summary>
    </comments>
  </VrGamesDev.VRG_CameraBackground.m_Camera>
  <VrGamesDev.VRG_CameraBackground.m_Orto_Portrait>
    <signature>VrGamesDev.VRG_CameraBackground.m_Orto_Portrait</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Orto_Portrait</name>
    <token>[Tooltip("The proportion to scale the background on 10:16 ortogonal camera ")]
[SerializeField]
private Vector2 m_Orto_Portrait </token>
    <scope>VrGamesDev.VRG_CameraBackground</scope>
    <comments>
      <summary>The proportion to scale the background on 10:16 ortogonal camera</summary>
    </comments>
  </VrGamesDev.VRG_CameraBackground.m_Orto_Portrait>
  <VrGamesDev.VRG_CameraBackground.m_Orto_Landscape>
    <signature>VrGamesDev.VRG_CameraBackground.m_Orto_Landscape</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Orto_Landscape</name>
    <token>[Tooltip("The proportion to scale the background on 10:16 ortogonal camera ")]
[SerializeField]
private Vector2 m_Orto_Landscape </token>
    <scope>VrGamesDev.VRG_CameraBackground</scope>
    <comments>
      <summary>The proportion to scale the background on 10:16 ortogonal camera</summary>
    </comments>
  </VrGamesDev.VRG_CameraBackground.m_Orto_Landscape>
  <VrGamesDev.VRG_CameraBackground.m_Orto_9_16>
    <signature>VrGamesDev.VRG_CameraBackground.m_Orto_9_16</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Orto_9_16</name>
    <token>[Tooltip("The proportion to scale the background on 9:16 ortogonal camera ")]
[SerializeField]
private Vector2 m_Orto_9_16 </token>
    <scope>VrGamesDev.VRG_CameraBackground</scope>
    <comments>
      <summary>The proportion to scale the background on 9:16 ortogonal camera</summary>
    </comments>
  </VrGamesDev.VRG_CameraBackground.m_Orto_9_16>
  <VrGamesDev.VRG_CameraBackground.m_Orto_16_9>
    <signature>VrGamesDev.VRG_CameraBackground.m_Orto_16_9</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Orto_16_9</name>
    <token>[Tooltip("The proportion to scale the background on 9:16 ortogonal camera ")]
[SerializeField]
private Vector2 m_Orto_16_9 </token>
    <scope>VrGamesDev.VRG_CameraBackground</scope>
    <comments>
      <summary>The proportion to scale the background on 9:16 ortogonal camera</summary>
    </comments>
  </VrGamesDev.VRG_CameraBackground.m_Orto_16_9>
  <VrGamesDev.VRG_CameraBackground.m_Pers_Portrait>
    <signature>VrGamesDev.VRG_CameraBackground.m_Pers_Portrait</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Pers_Portrait</name>
    <token>[Tooltip("The proportion to scale the background on 10:16 perspective camera ")]
[SerializeField]
private Vector2 m_Pers_Portrait </token>
    <scope>VrGamesDev.VRG_CameraBackground</scope>
    <comments>
      <summary>The proportion to scale the background on 10:16 perspective camera</summary>
    </comments>
  </VrGamesDev.VRG_CameraBackground.m_Pers_Portrait>
  <VrGamesDev.VRG_CameraBackground.m_Pers_Landscape>
    <signature>VrGamesDev.VRG_CameraBackground.m_Pers_Landscape</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Pers_Landscape</name>
    <token>[Tooltip("The proportion to scale the background on 9:16 ortogonal camera ")]
[SerializeField]
private Vector2 m_Pers_Landscape </token>
    <scope>VrGamesDev.VRG_CameraBackground</scope>
    <comments>
      <summary>The proportion to scale the background on 9:16 ortogonal camera</summary>
    </comments>
  </VrGamesDev.VRG_CameraBackground.m_Pers_Landscape>
  <VrGamesDev.VRG_CameraBackground.m_Pers_9_16>
    <signature>VrGamesDev.VRG_CameraBackground.m_Pers_9_16</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Pers_9_16</name>
    <token>[Tooltip("The proportion to scale the background on 9:16 perspective camera ")]
[SerializeField]
private Vector2 m_Pers_9_16 </token>
    <scope>VrGamesDev.VRG_CameraBackground</scope>
    <comments>
      <summary>The proportion to scale the background on 9:16 perspective camera</summary>
    </comments>
  </VrGamesDev.VRG_CameraBackground.m_Pers_9_16>
  <VrGamesDev.VRG_CameraBackground.m_Pers_16_9>
    <signature>VrGamesDev.VRG_CameraBackground.m_Pers_16_9</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Pers_16_9</name>
    <token>[Tooltip("The proportion to scale the background on 10:16 ortogonal camera ")]
[SerializeField]
private Vector2 m_Pers_16_9 </token>
    <scope>VrGamesDev.VRG_CameraBackground</scope>
    <comments>
      <summary>The proportion to scale the background on 10:16 ortogonal camera</summary>
    </comments>
  </VrGamesDev.VRG_CameraBackground.m_Pers_16_9>
  <VrGamesDev.VRG_CameraBackground.Do_x0028__x0029_>
    <signature>VrGamesDev.VRG_CameraBackground.Do()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Do</name>
    <token>protected override IEnumerator Do()</token>
    <scope>VrGamesDev.VRG_CameraBackground</scope>
    <comments>
      <summary>Resize the background, tint it and position it</summary>
    </comments>
  </VrGamesDev.VRG_CameraBackground.Do_x0028__x0029_>
  <VrGamesDev.VRG_OnClickFeedback>
    <signature>VrGamesDev.VRG_OnClickFeedback</signature>
    <childcount>7</childcount>
    <type>Class</type>
    <name>VRG_OnClickFeedback</name>
    <token>public class VRG_OnClickFeedback : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>On click, it spawns particles as feedback to the player and plays a sound</summary>
    </comments>
  </VrGamesDev.VRG_OnClickFeedback>
  <VrGamesDev.VRG_OnClickFeedback.m_Camera>
    <signature>VrGamesDev.VRG_OnClickFeedback.m_Camera</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Camera</name>
    <token>[Tooltip("The camera to spawn the feedback")]
[SerializeField]
private Camera m_Camera </token>
    <scope>VrGamesDev.VRG_OnClickFeedback</scope>
    <comments>
      <summary>The camera to spawn the feedback</summary>
    </comments>
  </VrGamesDev.VRG_OnClickFeedback.m_Camera>
  <VrGamesDev.VRG_OnClickFeedback.m_SFx>
    <signature>VrGamesDev.VRG_OnClickFeedback.m_SFx</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_SFx</name>
    <token>[Tooltip("The Sound effect to play, use a SpawnPrefab sound to have a fire and forget SFx")]
[SerializeField]
private GameObject m_SFx </token>
    <scope>VrGamesDev.VRG_OnClickFeedback</scope>
    <comments>
      <summary>The Sound effect to play, use a SpawnPrefab sound to have a fire and forget SFx</summary>
    </comments>
  </VrGamesDev.VRG_OnClickFeedback.m_SFx>
  <VrGamesDev.VRG_OnClickFeedback.m_ParticlesOrtographic>
    <signature>VrGamesDev.VRG_OnClickFeedback.m_ParticlesOrtographic</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_ParticlesOrtographic</name>
    <token>[Tooltip("The Ortographic particles prefab to spawn")]
[SerializeField]
private GameObject m_ParticlesOrtographic </token>
    <scope>VrGamesDev.VRG_OnClickFeedback</scope>
    <comments>
      <summary>The Ortographic particles prefab to spawn</summary>
    </comments>
  </VrGamesDev.VRG_OnClickFeedback.m_ParticlesOrtographic>
  <VrGamesDev.VRG_OnClickFeedback.m_ParticlesPerspective>
    <signature>VrGamesDev.VRG_OnClickFeedback.m_ParticlesPerspective</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_ParticlesPerspective</name>
    <token>[Tooltip("The Perspective particles prefab to spawn")]
[SerializeField]
private GameObject m_ParticlesPerspective </token>
    <scope>VrGamesDev.VRG_OnClickFeedback</scope>
    <comments>
      <summary>The Perspective particles prefab to spawn</summary>
    </comments>
  </VrGamesDev.VRG_OnClickFeedback.m_ParticlesPerspective>
  <VrGamesDev.VRG_OnMouse>
    <signature>VrGamesDev.VRG_OnMouse</signature>
    <childcount>7</childcount>
    <type>Class</type>
    <name>VRG_OnMouse</name>
    <token>public class VRG_OnMouse : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>Add this component to a 3d object to react OnMouse enter down and exit</summary>
    </comments>
  </VrGamesDev.VRG_OnMouse>
  <VrGamesDev.VRG_OnMouse.m_WhenMouseDown>
    <signature>VrGamesDev.VRG_OnMouse.m_WhenMouseDown</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_WhenMouseDown</name>
    <token>[Tooltip("Toogle the onclick")]
[SerializeField]
private GameObject[] m_WhenMouseDown </token>
    <scope>VrGamesDev.VRG_OnMouse</scope>
    <comments>
      <summary>Toogle the onclick</summary>
    </comments>
  </VrGamesDev.VRG_OnMouse.m_WhenMouseDown>
  <VrGamesDev.VRG_OnMouse.m_WhenMouseEnter>
    <signature>VrGamesDev.VRG_OnMouse.m_WhenMouseEnter</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_WhenMouseEnter</name>
    <token>[Tooltip("Toogle when entered the mouse")]
[SerializeField]
private GameObject[] m_WhenMouseEnter </token>
    <scope>VrGamesDev.VRG_OnMouse</scope>
    <comments>
      <summary>Toogle when entered the mouse</summary>
    </comments>
  </VrGamesDev.VRG_OnMouse.m_WhenMouseEnter>
  <VrGamesDev.VRG_OnMouse.m_WhenMouseExit>
    <signature>VrGamesDev.VRG_OnMouse.m_WhenMouseExit</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_WhenMouseExit</name>
    <token>[Tooltip("Toogle when exited the mouse")]
[SerializeField]
private GameObject[] m_WhenMouseExit </token>
    <scope>VrGamesDev.VRG_OnMouse</scope>
    <comments>
      <summary>Toogle when exited the mouse</summary>
    </comments>
  </VrGamesDev.VRG_OnMouse.m_WhenMouseExit>
  <VrGamesDev.VRG_OnMouse.OnMouseDown_x0028__x0029_>
    <signature>VrGamesDev.VRG_OnMouse.OnMouseDown()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>OnMouseDown</name>
    <token>private void OnMouseDown()</token>
    <scope>VrGamesDev.VRG_OnMouse</scope>
    <comments>
      <summary>Activate all the objects added to the m_WhenMouseDown Array</summary>
    </comments>
  </VrGamesDev.VRG_OnMouse.OnMouseDown_x0028__x0029_>
  <VrGamesDev.VRG_OnMouse.OnMouseEnter_x0028__x0029_>
    <signature>VrGamesDev.VRG_OnMouse.OnMouseEnter()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>OnMouseEnter</name>
    <token>private void OnMouseEnter()</token>
    <scope>VrGamesDev.VRG_OnMouse</scope>
    <comments>
      <summary>Activate all the objects added to the OnMouseEnter Array</summary>
    </comments>
  </VrGamesDev.VRG_OnMouse.OnMouseEnter_x0028__x0029_>
  <VrGamesDev.VRG_OnMouse.OnMouseExit_x0028__x0029_>
    <signature>VrGamesDev.VRG_OnMouse.OnMouseExit()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>OnMouseExit</name>
    <token>private void OnMouseExit()</token>
    <scope>VrGamesDev.VRG_OnMouse</scope>
    <comments>
      <summary>Activate all the objects added to the OnMouseExit Array</summary>
    </comments>
  </VrGamesDev.VRG_OnMouse.OnMouseExit_x0028__x0029_>
  <VrGamesDev.VRG_Session>
    <signature>VrGamesDev.VRG_Session</signature>
    <childcount>17</childcount>
    <type>Class</type>
    <name>VRG_Session</name>
    <token>public class VRG_Session : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>Handle and encapsulate the session data, persistant over the game sessions
     The class can be used without instantiationm and will use sufixes to know
     what data is from VrGamesDev packages from other software
     For more information: &lt;a href="https://docs.unity3d.com/ScriptReference/PlayerPrefs.html"&gt;Unity PlayerPrefs&lt;/a&gt;</summary>
    </comments>
  </VrGamesDev.VRG_Session>
  <VrGamesDev.VRG_Session.m_Sufix>
    <signature>VrGamesDev.VRG_Session.m_Sufix</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Sufix</name>
    <token>[Tooltip("The Main sufix of all the date of VrGamesDev Package")]
[SerializeField]
public static string m_Sufix </token>
    <scope>VrGamesDev.VRG_Session</scope>
    <comments>
      <summary>The Main sufix of all the date of VrGamesDev Package</summary>
    </comments>
  </VrGamesDev.VRG_Session.m_Sufix>
  <VrGamesDev.VRG_Session.m_Separation>
    <signature>VrGamesDev.VRG_Session.m_Separation</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Separation</name>
    <token>[Tooltip("The Main separator from an Object and its data")]
[SerializeField]
public static string m_Separation </token>
    <scope>VrGamesDev.VRG_Session</scope>
    <comments>
      <summary>The Main separator from an Object and its data</summary>
    </comments>
  </VrGamesDev.VRG_Session.m_Separation>
  <VrGamesDev.VRG_Session.m_Class>
    <signature>VrGamesDev.VRG_Session.m_Class</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Class</name>
    <token>[Tooltip("The Main sufix of all the data of VrGamesDev Package")]
[SerializeField]
public static string m_Class </token>
    <scope>VrGamesDev.VRG_Session</scope>
    <comments>
      <summary>The Main sufix of all the data of VrGamesDev Package</summary>
    </comments>
  </VrGamesDev.VRG_Session.m_Class>
  <VrGamesDev.VRG_Session.SessionName_x0028_string_x002C__x0020_string_x0029_>
    <signature>VrGamesDev.VRG_Session.SessionName(string, string)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>SessionName</name>
    <token>public static string SessionName(string sObjectLocal, string sDataLocal)</token>
    <scope>VrGamesDev.VRG_Session</scope>
    <comments>
      <summary>Get the session name, it uses the suffix and separation and all the data to save.</summary>
      <returns>The string of the session</returns>
      <param-sObjectLocal>The Object owner of the data</param-sObjectLocal>
      <param-sDataLocal>The data to query</param-sDataLocal>
    </comments>
    <params>
      <sObjectLocal>string</sObjectLocal>
      <sDataLocal>string</sDataLocal>
    </params>
  </VrGamesDev.VRG_Session.SessionName_x0028_string_x002C__x0020_string_x0029_>
  <VrGamesDev.VRG_Session.GetString_x0028_string_x002C__x0020_string_x0029_>
    <signature>VrGamesDev.VRG_Session.GetString(string, string)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetString</name>
    <token>public static string GetString(string sObjectLocal, string sDataLocal)</token>
    <scope>VrGamesDev.VRG_Session</scope>
    <comments>
      <summary>Query a string from the persistant data</summary>
      <returns>The string queried</returns>
      <param-sObjectLocal>The object to query</param-sObjectLocal>
      <param-sDataLocal>The data of the object</param-sDataLocal>
    </comments>
    <params>
      <sObjectLocal>string</sObjectLocal>
      <sDataLocal>string</sDataLocal>
    </params>
  </VrGamesDev.VRG_Session.GetString_x0028_string_x002C__x0020_string_x0029_>
  <VrGamesDev.VRG_Session.SetString_x0028_string_x002C__x0020_string_x002C__x0020_string_x0029_>
    <signature>VrGamesDev.VRG_Session.SetString(string, string, string)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>SetString</name>
    <token>public static void SetString(string sObjectLocal, string sDataLocal, string valueLocal)</token>
    <scope>VrGamesDev.VRG_Session</scope>
    <comments>
      <summary>Overloaded funtion: Save the string sent in the &lt;strong&gt;valueLocal&lt;/strong&gt; Data into the persistant data</summary>
      <param-sObjectLocal>The object to query</param-sObjectLocal>
      <param-sDataLocal>The data of the object</param-sDataLocal>
      <param-valueLocal>The value of the string to save</param-valueLocal>
    </comments>
    <params>
      <sObjectLocal>string</sObjectLocal>
      <sDataLocal>string</sDataLocal>
      <valueLocal>string</valueLocal>
    </params>
  </VrGamesDev.VRG_Session.SetString_x0028_string_x002C__x0020_string_x002C__x0020_string_x0029_>
  <VrGamesDev.VRG_Session.GetFloat_x0028_string_x002C__x0020_string_x0029_>
    <signature>VrGamesDev.VRG_Session.GetFloat(string, string)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetFloat</name>
    <token>public static float GetFloat(string sObjectLocal, string sDataLocal)</token>
    <scope>VrGamesDev.VRG_Session</scope>
    <comments>
      <summary>Query a float from the persistant data</summary>
      <returns>The float queried</returns>
      <param-sObjectLocal>The object to query</param-sObjectLocal>
      <param-sDataLocal>The data of the object</param-sDataLocal>
    </comments>
    <params>
      <sObjectLocal>string</sObjectLocal>
      <sDataLocal>string</sDataLocal>
    </params>
  </VrGamesDev.VRG_Session.GetFloat_x0028_string_x002C__x0020_string_x0029_>
  <VrGamesDev.VRG_Session.SetFloat_x0028_string_x002C__x0020_string_x002C__x0020_float_x0029_>
    <signature>VrGamesDev.VRG_Session.SetFloat(string, string, float)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>SetFloat</name>
    <token>public static void SetFloat(string sObjectLocal, string sDataLocal, float valueLocal)</token>
    <scope>VrGamesDev.VRG_Session</scope>
    <comments>
      <summary>Overloaded funtion: Save the float sent in the &lt;strong&gt;valueLocal&lt;/strong&gt; Data into the persistant data</summary>
      <param-sObjectLocal>The object to query</param-sObjectLocal>
      <param-sDataLocal>The data of the object</param-sDataLocal>
      <param-valueLocal>The value of the float to save</param-valueLocal>
    </comments>
    <params>
      <sObjectLocal>string</sObjectLocal>
      <sDataLocal>string</sDataLocal>
      <valueLocal>float</valueLocal>
    </params>
  </VrGamesDev.VRG_Session.SetFloat_x0028_string_x002C__x0020_string_x002C__x0020_float_x0029_>
  <VrGamesDev.VRG_Session.GetBool_x0028_string_x002C__x0020_string_x002C__x0020_bool_x0029_>
    <signature>VrGamesDev.VRG_Session.GetBool(string, string, bool)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetBool</name>
    <token>public static bool GetBool(string sObjectLocal, string sDataLocal, bool valueLocal)</token>
    <scope>VrGamesDev.VRG_Session</scope>
    <comments>
      <summary>Query a bool from the persistant data, if the data doesn't exist previously
         the valueLocal</summary>
      <returns>The bool value queried</returns>
      <param-sObjectLocal>The object to query</param-sObjectLocal>
      <param-sDataLocal>The data of the object</param-sDataLocal>
      <param-valueLocal>(Optional) By default is false</param-valueLocal>
    </comments>
    <params>
      <sObjectLocal>string</sObjectLocal>
      <sDataLocal>string</sDataLocal>
      <valueLocal>bool</valueLocal>
    </params>
  </VrGamesDev.VRG_Session.GetBool_x0028_string_x002C__x0020_string_x002C__x0020_bool_x0029_>
  <VrGamesDev.VRG_Session.SetBool_x0028_string_x002C__x0020_string_x002C__x0020_bool_x0029_>
    <signature>VrGamesDev.VRG_Session.SetBool(string, string, bool)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>SetBool</name>
    <token>public static void SetBool(string sObjectLocal, string sDataLocal, bool valueLocal)</token>
    <scope>VrGamesDev.VRG_Session</scope>
    <comments>
      <summary>Overloaded funtion: Save the bool sent in the &lt;strong&gt;valueLocal&lt;/strong&gt; into the persistant data</summary>
    </comments>
    <params>
      <sObjectLocal>string</sObjectLocal>
      <sDataLocal>string</sDataLocal>
      <valueLocal>bool</valueLocal>
    </params>
  </VrGamesDev.VRG_Session.SetBool_x0028_string_x002C__x0020_string_x002C__x0020_bool_x0029_>
  <VrGamesDev.VRG_Session.GetInt_x0028_string_x002C__x0020_string_x0029_>
    <signature>VrGamesDev.VRG_Session.GetInt(string, string)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>GetInt</name>
    <token>public static int GetInt(string sObjectLocal, string sDataLocal)</token>
    <scope>VrGamesDev.VRG_Session</scope>
    <comments>
      <summary>Query am Int from the persistant data</summary>
      <returns>The Int queried</returns>
      <param-sObjectLocal>The object to query</param-sObjectLocal>
      <param-sDataLocal>The data of the object</param-sDataLocal>
    </comments>
    <params>
      <sObjectLocal>string</sObjectLocal>
      <sDataLocal>string</sDataLocal>
    </params>
  </VrGamesDev.VRG_Session.GetInt_x0028_string_x002C__x0020_string_x0029_>
  <VrGamesDev.VRG_Session.SetInt_x0028_string_x002C__x0020_string_x002C__x0020_int_x0029_>
    <signature>VrGamesDev.VRG_Session.SetInt(string, string, int)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>SetInt</name>
    <token>public static void SetInt(string sObjectLocal, string sDataLocal, int valueLocal)</token>
    <scope>VrGamesDev.VRG_Session</scope>
    <comments>
      <summary>Overloaded funtion: Save the Int sent in the &lt;strong&gt;valueLocal&lt;/strong&gt; Data into the persistant data</summary>
      <param-sObjectLocal>The object to query</param-sObjectLocal>
      <param-sDataLocal>The data of the object</param-sDataLocal>
      <param-valueLocal>The value of the Int to save</param-valueLocal>
    </comments>
    <params>
      <sObjectLocal>string</sObjectLocal>
      <sDataLocal>string</sDataLocal>
      <valueLocal>int</valueLocal>
    </params>
  </VrGamesDev.VRG_Session.SetInt_x0028_string_x002C__x0020_string_x002C__x0020_int_x0029_>
  <VrGamesDev.VRG_Session.Add_x0028_string_x002C__x0020_string_x002C__x0020_int_x0029_>
    <signature>VrGamesDev.VRG_Session.Add(string, string, int)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Add</name>
    <token>public static int Add(string sObjectLocal, string sDataLocal, int iValueLocal)</token>
    <scope>VrGamesDev.VRG_Session</scope>
    <comments>
      <summary>Overloaded funtion: Add &lt;strong&gt;iValueLocal&lt;/strong&gt; from &lt;strong&gt;sDataLocal&lt;/strong&gt; into the persistant data
         By default it is +1</summary>
      <returns>The result number added to the previous data</returns>
      <param-sObjectLocal>The object to query</param-sObjectLocal>
      <param-sDataLocal>The data of the object</param-sDataLocal>
      <param-iValueLocal>(Optional) By default is 1</param-iValueLocal>
    </comments>
    <params>
      <sObjectLocal>string</sObjectLocal>
      <sDataLocal>string</sDataLocal>
      <iValueLocal>int</iValueLocal>
    </params>
  </VrGamesDev.VRG_Session.Add_x0028_string_x002C__x0020_string_x002C__x0020_int_x0029_>
  <VrGamesDev.VRG_SessionData>
    <signature>VrGamesDev.VRG_SessionData</signature>
    <childcount>23</childcount>
    <type>Class</type>
    <name>VRG_SessionData</name>
    <token>public class VRG_SessionData : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>Load a value from the persistant data from Object: VRG_Session</summary>
    </comments>
  </VrGamesDev.VRG_SessionData>
  <VrGamesDev.VRG_SessionData.m_DataType>
    <signature>VrGamesDev.VRG_SessionData.m_DataType</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_DataType</name>
    <token>[Tooltip("Choose the data type to save into the VRG_Session")]
[SerializeField]
protected ENUM_DataType m_DataType </token>
    <scope>VrGamesDev.VRG_SessionData</scope>
    <comments>
      <summary>Choose the &lt;a href="#VrGamesDev.ENUM_DataType"&gt;data type&lt;/a&gt; to save into the &lt;a href="#VrGamesDev.VRG_Session"&gt;VRG_Session&lt;/a&gt;</summary>
    </comments>
  </VrGamesDev.VRG_SessionData.m_DataType>
  <VrGamesDev.VRG_SessionData.m_Load>
    <signature>VrGamesDev.VRG_SessionData.m_Load</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Load</name>
    <token>[Tooltip("It will load the data from the ")]
[SerializeField]
protected bool m_Load </token>
    <scope>VrGamesDev.VRG_SessionData</scope>
    <comments>
      <summary>The value recovered</summary>
    </comments>
  </VrGamesDev.VRG_SessionData.m_Load>
  <VrGamesDev.VRG_SessionData.m_LoadText>
    <signature>VrGamesDev.VRG_SessionData.m_LoadText</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_LoadText</name>
    <token>[Tooltip("If set, the value will be taken from this Text component")]
[SerializeField]
protected Text m_LoadText </token>
    <scope>VrGamesDev.VRG_SessionData</scope>
    <comments>
      <summary>If set, the value will be dumped into this Text component</summary>
    </comments>
  </VrGamesDev.VRG_SessionData.m_LoadText>
  <VrGamesDev.VRG_SessionData.m_Save>
    <signature>VrGamesDev.VRG_SessionData.m_Save</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Save</name>
    <token>[Tooltip("The value recovered")]
[SerializeField]
protected bool m_Save </token>
    <scope>VrGamesDev.VRG_SessionData</scope>
    <comments>
      <summary>The value recovered</summary>
    </comments>
  </VrGamesDev.VRG_SessionData.m_Save>
  <VrGamesDev.VRG_SessionData.m_SaveText>
    <signature>VrGamesDev.VRG_SessionData.m_SaveText</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_SaveText</name>
    <token>[Tooltip("If set, the value will be dumped into this Text component")]
[SerializeField]
protected Text m_SaveText </token>
    <scope>VrGamesDev.VRG_SessionData</scope>
    <comments>
      <summary>If set, the value will be dumped into this Text component</summary>
    </comments>
  </VrGamesDev.VRG_SessionData.m_SaveText>
  <VrGamesDev.VRG_SessionData.m_SessionObject>
    <signature>VrGamesDev.VRG_SessionData.m_SessionObject</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_SessionObject</name>
    <token>[Tooltip("The Object owner of the data in the VRG_Session")]
[SerializeField]
protected string m_SessionObject </token>
    <scope>VrGamesDev.VRG_SessionData</scope>
    <comments>
      <summary>The Object owner of the data in the &lt;a href="#VrGamesDev.VRG_Session"&gt;VRG_Session&lt;/a&gt;</summary>
    </comments>
  </VrGamesDev.VRG_SessionData.m_SessionObject>
  <VrGamesDev.VRG_SessionData.m_SessionData>
    <signature>VrGamesDev.VRG_SessionData.m_SessionData</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_SessionData</name>
    <token>[Tooltip("The data to query from the m_SessionObject")]
[SerializeField]
protected string m_SessionData </token>
    <scope>VrGamesDev.VRG_SessionData</scope>
    <comments>
      <summary>The data to query from the m_SessionObject</summary>
    </comments>
  </VrGamesDev.VRG_SessionData.m_SessionData>
  <VrGamesDev.VRG_SessionData.m_Value>
    <signature>VrGamesDev.VRG_SessionData.m_Value</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Value</name>
    <token>[Tooltip("The value recovered")]
[SerializeField]
protected string m_Value </token>
    <scope>VrGamesDev.VRG_SessionData</scope>
    <comments>
      <summary>The value recovered</summary>
    </comments>
  </VrGamesDev.VRG_SessionData.m_Value>
  <VrGamesDev.VRG_SessionData.value>
    <signature>VrGamesDev.VRG_SessionData.value</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>value</name>
    <token>public string value { get; set; }</token>
    <scope>VrGamesDev.VRG_SessionData</scope>
    <comments>
      <summary>GETTER: the m_Value</summary>
    </comments>
  </VrGamesDev.VRG_SessionData.value>
  <VrGamesDev.VRG_SessionData.m_IgnoreOnNull>
    <signature>VrGamesDev.VRG_SessionData.m_IgnoreOnNull</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_IgnoreOnNull</name>
    <token>[Tooltip("When loaded, If the value is null do not save or load")]
[SerializeField]
protected bool m_IgnoreOnNull </token>
    <scope>VrGamesDev.VRG_SessionData</scope>
    <comments>
      <summary>When loaded, If the value is null do not save or load</summary>
    </comments>
  </VrGamesDev.VRG_SessionData.m_IgnoreOnNull>
  <VrGamesDev.VRG_SessionData.m_IfValue>
    <signature>VrGamesDev.VRG_SessionData.m_IfValue</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_IfValue</name>
    <token>[Tooltip("When loaded, if the value is the same as this, it will trigger the action object")]
[SerializeField]
protected string m_IfValue </token>
    <scope>VrGamesDev.VRG_SessionData</scope>
    <comments>
      <summary>When loaded, if the value is the same as this, it will trigger the action object</summary>
    </comments>
  </VrGamesDev.VRG_SessionData.m_IfValue>
  <VrGamesDev.VRG_SessionData.m_Activate>
    <signature>VrGamesDev.VRG_SessionData.m_Activate</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Activate</name>
    <token>[Tooltip("Array of the transform to activate setActive(true)")]
[SerializeField]
protected Transform[] m_Activate </token>
    <scope>VrGamesDev.VRG_SessionData</scope>
    <comments>
      <summary>Array of the transform to activate &lt;em&gt;setActive(true)&lt;/em&gt;</summary>
    </comments>
  </VrGamesDev.VRG_SessionData.m_Activate>
  <VrGamesDev.VRG_SessionData.m_Deactivate>
    <signature>VrGamesDev.VRG_SessionData.m_Deactivate</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Deactivate</name>
    <token>[Tooltip("Array of the transform to deactivate setActive(false)")]
[SerializeField]
protected Transform[] m_Deactivate </token>
    <scope>VrGamesDev.VRG_SessionData</scope>
    <comments>
      <summary>Array of the transform to deactivate &lt;em&gt;setActive(false)&lt;/em&gt;</summary>
    </comments>
  </VrGamesDev.VRG_SessionData.m_Deactivate>
  <VrGamesDev.VRG_SessionData.m_Toogle>
    <signature>VrGamesDev.VRG_SessionData.m_Toogle</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Toogle</name>
    <token>[Tooltip("If the loaded value is true this GameObject will trigger")]
[SerializeField]
protected Transform[] m_Toogle </token>
    <scope>VrGamesDev.VRG_SessionData</scope>
    <comments>
      <summary>If the loaded value is true this GameObject will trigger</summary>
    </comments>
  </VrGamesDev.VRG_SessionData.m_Toogle>
  <VrGamesDev.VRG_SessionData.Do_x0028__x0029_>
    <signature>VrGamesDev.VRG_SessionData.Do()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Do</name>
    <token>protected override IEnumerator Do()</token>
    <scope>VrGamesDev.VRG_SessionData</scope>
    <comments>
      <summary>&lt;strong&gt;&lt;em&gt;Do it's thing: &lt;/em&gt;&lt;/strong&gt;Load from VRG_Session a value</summary>
    </comments>
  </VrGamesDev.VRG_SessionData.Do_x0028__x0029_>
  <VrGamesDev.VRG_SessionData.Load_x0028_bool_x0029_>
    <signature>VrGamesDev.VRG_SessionData.Load(bool)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Load</name>
    <token>public virtual void Load(bool valueLocal)</token>
    <scope>VrGamesDev.VRG_SessionData</scope>
    <comments>
      <summary>Load the data from the session, and update a text data if provided</summary>
      <param-valueLocal>Force the load even if the object is not allowed</param-valueLocal>
    </comments>
    <params>
      <valueLocal>bool</valueLocal>
    </params>
  </VrGamesDev.VRG_SessionData.Load_x0028_bool_x0029_>
  <VrGamesDev.VRG_SessionData.Save_x0028_bool_x0029_>
    <signature>VrGamesDev.VRG_SessionData.Save(bool)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Save</name>
    <token>public virtual void Save(bool valueLocal)</token>
    <scope>VrGamesDev.VRG_SessionData</scope>
    <comments>
      <summary>Save the data into the session, get the data from the text UI if provided</summary>
      <param-valueLocal>Force the load even if the object is not allowed</param-valueLocal>
    </comments>
    <params>
      <valueLocal>bool</valueLocal>
    </params>
  </VrGamesDev.VRG_SessionData.Save_x0028_bool_x0029_>
  <VrGamesDev.VRG_EventSystem>
    <signature>VrGamesDev.VRG_EventSystem</signature>
    <childcount>3</childcount>
    <type>Class</type>
    <name>VRG_EventSystem</name>
    <token>public class VRG_EventSystem : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>This class makes a class not destroyable on load &lt;a href="https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html"&gt;&lt;em&gt;&lt;strong&gt;Object.DontDestroyOnLoad(this);&lt;/strong&gt;&lt;/em&gt;&lt;/a&gt;</summary>
    </comments>
  </VrGamesDev.VRG_EventSystem>
  <VrGamesDev.VRG_EventSystem.Instance>
    <signature>VrGamesDev.VRG_EventSystem.Instance</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>Instance</name>
    <token>public static VRG_EventSystem Instance </token>
    <scope>VrGamesDev.VRG_EventSystem</scope>
    <comments>
      <summary>Singleton pattern, Instance is the unique variable in the scene from this class</summary>
    </comments>
  </VrGamesDev.VRG_EventSystem.Instance>
  <VrGamesDev.VRG_Exit>
    <signature>VrGamesDev.VRG_Exit</signature>
    <childcount>1</childcount>
    <type>Class</type>
    <name>VRG_Exit</name>
    <token>public class VRG_Exit : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>Exit the aplication</summary>
    </comments>
  </VrGamesDev.VRG_Exit>
  <VrGamesDev.VRG_GraphicalNumber>
    <signature>VrGamesDev.VRG_GraphicalNumber</signature>
    <childcount>13</childcount>
    <type>Class</type>
    <name>VRG_GraphicalNumber</name>
    <token>public class VRG_GraphicalNumber : VRG_SessionData </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>It shows a graphical number with images</summary>
    </comments>
  </VrGamesDev.VRG_GraphicalNumber>
  <VrGamesDev.VRG_GraphicalNumber.m_Stretch>
    <signature>VrGamesDev.VRG_GraphicalNumber.m_Stretch</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Stretch</name>
    <token>[Tooltip("Stretch the number trying to fill the container")]
[SerializeField]
private bool m_Stretch </token>
    <scope>VrGamesDev.VRG_GraphicalNumber</scope>
    <comments>
      <summary>Stretch the number trying to fill the container</summary>
    </comments>
  </VrGamesDev.VRG_GraphicalNumber.m_Stretch>
  <VrGamesDev.VRG_GraphicalNumber.m_MaxDigit>
    <signature>VrGamesDev.VRG_GraphicalNumber.m_MaxDigit</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_MaxDigit</name>
    <token>[Tooltip("The maximum digit, if it is greater than the m_Digits, the maximum is m_Digits.length, set 0 for auto calculate")]
[SerializeField]
private int m_MaxDigit </token>
    <scope>VrGamesDev.VRG_GraphicalNumber</scope>
    <comments>
      <summary>The maximum digit, if it is greater than the m_Digits, the maximum is m_Digits.length, set 0 for auto calculate</summary>
    </comments>
  </VrGamesDev.VRG_GraphicalNumber.m_MaxDigit>
  <VrGamesDev.VRG_GraphicalNumber.m_RectTransform>
    <signature>VrGamesDev.VRG_GraphicalNumber.m_RectTransform</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_RectTransform</name>
    <token>[Tooltip("The container to display the number")]
[SerializeField]
private RectTransform m_RectTransform </token>
    <scope>VrGamesDev.VRG_GraphicalNumber</scope>
    <comments>
      <summary>The container to display the number</summary>
    </comments>
  </VrGamesDev.VRG_GraphicalNumber.m_RectTransform>
  <VrGamesDev.VRG_GraphicalNumber.m_Digits>
    <signature>VrGamesDev.VRG_GraphicalNumber.m_Digits</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Digits</name>
    <token>[Tooltip("The digits to display")]
[SerializeField]
private Image[] m_Digits </token>
    <scope>VrGamesDev.VRG_GraphicalNumber</scope>
    <comments>
      <summary>The digits to display</summary>
    </comments>
  </VrGamesDev.VRG_GraphicalNumber.m_Digits>
  <VrGamesDev.VRG_GraphicalNumber.m_Numbers>
    <signature>VrGamesDev.VRG_GraphicalNumber.m_Numbers</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Numbers</name>
    <token>[Tooltip("Graphical numbers")]
[SerializeField]
private Sprite[] m_Numbers </token>
    <scope>VrGamesDev.VRG_GraphicalNumber</scope>
    <comments>
      <summary>Graphical numbers</summary>
    </comments>
  </VrGamesDev.VRG_GraphicalNumber.m_Numbers>
  <VrGamesDev.VRG_GraphicalNumber.SetNumber_x0028_int_x0029_>
    <signature>VrGamesDev.VRG_GraphicalNumber.SetNumber(int)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>SetNumber</name>
    <token>public void SetNumber(int valueLocal)</token>
    <scope>VrGamesDev.VRG_GraphicalNumber</scope>
    <comments>
      <summary>Modify the number to display</summary>
      <param-valueLocal>The number to set into the Graphical Digital Number</param-valueLocal>
    </comments>
    <params>
      <valueLocal>int</valueLocal>
    </params>
  </VrGamesDev.VRG_GraphicalNumber.SetNumber_x0028_int_x0029_>
  <VrGamesDev.VRG_GraphicalNumber.Add_x0028_int_x0029_>
    <signature>VrGamesDev.VRG_GraphicalNumber.Add(int)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Add</name>
    <token>public void Add(int valueLocal)</token>
    <scope>VrGamesDev.VRG_GraphicalNumber</scope>
    <comments>
      <summary>Add valueLocal to the number to display</summary>
      <param-valueLocal>(Optional) The amount that will be added, by default is 1</param-valueLocal>
    </comments>
    <params>
      <valueLocal>int</valueLocal>
    </params>
  </VrGamesDev.VRG_GraphicalNumber.Add_x0028_int_x0029_>
  <VrGamesDev.VRG_GraphicalNumber_BackWardCountdown>
    <signature>VrGamesDev.VRG_GraphicalNumber_BackWardCountdown</signature>
    <childcount>10</childcount>
    <type>Class</type>
    <name>VRG_GraphicalNumber_BackWardCountdown</name>
    <token>public class VRG_GraphicalNumber_BackWardCountdown : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>This class uses a &lt;a href="#VrGamesDev.VRG_GraphicalNumber"&gt;VRG_GraphicalNumber&lt;/a&gt; and animate it
     to fade out scaled counting up to zero, and then display an image, by default is a "Start" label</summary>
    </comments>
  </VrGamesDev.VRG_GraphicalNumber_BackWardCountdown>
  <VrGamesDev.VRG_GraphicalNumber_BackWardCountdown.m_Number>
    <signature>VrGamesDev.VRG_GraphicalNumber_BackWardCountdown.m_Number</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Number</name>
    <token>[Tooltip("The initial number to count from, by default start at 3")]
[SerializeField]
private int m_Number </token>
    <scope>VrGamesDev.VRG_GraphicalNumber_BackWardCountdown</scope>
    <comments>
      <summary>The initial number to count from, by default start at 3</summary>
    </comments>
  </VrGamesDev.VRG_GraphicalNumber_BackWardCountdown.m_Number>
  <VrGamesDev.VRG_GraphicalNumber_BackWardCountdown.number>
    <signature>VrGamesDev.VRG_GraphicalNumber_BackWardCountdown.number</signature>
    <childcount>0</childcount>
    <type>Property</type>
    <name>number</name>
    <token>public int number { get; }</token>
    <scope>VrGamesDev.VRG_GraphicalNumber_BackWardCountdown</scope>
    <comments>
      <summary>GETTER: the starting number</summary>
    </comments>
  </VrGamesDev.VRG_GraphicalNumber_BackWardCountdown.number>
  <VrGamesDev.VRG_GraphicalNumber_BackWardCountdown.m_Duration>
    <signature>VrGamesDev.VRG_GraphicalNumber_BackWardCountdown.m_Duration</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Duration</name>
    <token>[Tooltip("The duration in seconds between each count, by default is 1 second")]
[SerializeField]
private float m_Duration </token>
    <scope>VrGamesDev.VRG_GraphicalNumber_BackWardCountdown</scope>
    <comments>
      <summary>The duration in seconds between each count, by default is 1 second</summary>
    </comments>
  </VrGamesDev.VRG_GraphicalNumber_BackWardCountdown.m_Duration>
  <VrGamesDev.VRG_GraphicalNumber_BackWardCountdown.m_GraphicalNumber>
    <signature>VrGamesDev.VRG_GraphicalNumber_BackWardCountdown.m_GraphicalNumber</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_GraphicalNumber</name>
    <token>[Tooltip("A VRG_GraphicalNumber component")]
[SerializeField]
private VRG_GraphicalNumber m_GraphicalNumber </token>
    <scope>VrGamesDev.VRG_GraphicalNumber_BackWardCountdown</scope>
    <comments>
      <summary>A &lt;a href="#VrGamesDev.VRG_GraphicalNumber"&gt;VRG_GraphicalNumber&lt;/a&gt; component</summary>
    </comments>
  </VrGamesDev.VRG_GraphicalNumber_BackWardCountdown.m_GraphicalNumber>
  <VrGamesDev.VRG_GraphicalNumber_BackWardCountdown.m_Scale>
    <signature>VrGamesDev.VRG_GraphicalNumber_BackWardCountdown.m_Scale</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Scale</name>
    <token>[Tooltip("A VRG_Scale component")]
[SerializeField]
private VRG_Scale m_Scale </token>
    <scope>VrGamesDev.VRG_GraphicalNumber_BackWardCountdown</scope>
    <comments>
      <summary>A &lt;a href="#VrGamesDev.VRG_Scale"&gt;VRG_Scale&lt;/a&gt; component</summary>
    </comments>
  </VrGamesDev.VRG_GraphicalNumber_BackWardCountdown.m_Scale>
  <VrGamesDev.VRG_GraphicalNumber_BackWardCountdown.Play_x0028_int_x0029_>
    <signature>VrGamesDev.VRG_GraphicalNumber_BackWardCountdown.Play(int)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Play</name>
    <token>public void Play(int valueLocal)</token>
    <scope>VrGamesDev.VRG_GraphicalNumber_BackWardCountdown</scope>
    <comments>
      <summary>This method starts the countdown, it starts at &lt;strong&gt;valueLocal&lt;/strong&gt;,
         by default its value is &lt;strong&gt;this.m_Number&lt;/strong&gt;</summary>
      <param-valueLocal>(Optional) The starting number to countdown, by default is this.m_Number</param-valueLocal>
    </comments>
    <params>
      <valueLocal>int</valueLocal>
    </params>
  </VrGamesDev.VRG_GraphicalNumber_BackWardCountdown.Play_x0028_int_x0029_>
  <VrGamesDev.VRG_GrowingNumber>
    <signature>VrGamesDev.VRG_GrowingNumber</signature>
    <childcount>10</childcount>
    <type>Class</type>
    <name>VRG_GrowingNumber</name>
    <token>public class VRG_GrowingNumber : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>Display a number during a duration seconds, it grows slowly with events to catch events</summary>
    </comments>
  </VrGamesDev.VRG_GrowingNumber>
  <VrGamesDev.VRG_GrowingNumber.m_Target>
    <signature>VrGamesDev.VRG_GrowingNumber.m_Target</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Target</name>
    <token>[Tooltip("Where we will add the origin data")]
[SerializeField]
protected Text m_Target </token>
    <scope>VrGamesDev.VRG_GrowingNumber</scope>
    <comments>
      <summary>Where we will add the origin data</summary>
    </comments>
  </VrGamesDev.VRG_GrowingNumber.m_Target>
  <VrGamesDev.VRG_GrowingNumber.m_ResetToZero>
    <signature>VrGamesDev.VRG_GrowingNumber.m_ResetToZero</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_ResetToZero</name>
    <token>[Tooltip("If we want to start from zero or to continue from Target Data")]
[SerializeField]
protected bool m_ResetToZero </token>
    <scope>VrGamesDev.VRG_GrowingNumber</scope>
    <comments>
      <summary>If we want to start from zero or to continue from Target Data</summary>
    </comments>
  </VrGamesDev.VRG_GrowingNumber.m_ResetToZero>
  <VrGamesDev.VRG_GrowingNumber.m_Decimals>
    <signature>VrGamesDev.VRG_GrowingNumber.m_Decimals</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Decimals</name>
    <token>[Tooltip("The detail of the floating point ")]
[SerializeField]
protected int m_Decimals </token>
    <scope>VrGamesDev.VRG_GrowingNumber</scope>
    <comments>
      <summary>The detail of the floating point</summary>
    </comments>
  </VrGamesDev.VRG_GrowingNumber.m_Decimals>
  <VrGamesDev.VRG_GrowingNumber.m_Duration>
    <signature>VrGamesDev.VRG_GrowingNumber.m_Duration</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Duration</name>
    <token>[Tooltip("How fast or slow the duration of the counting")]
[SerializeField]
protected float m_Duration </token>
    <scope>VrGamesDev.VRG_GrowingNumber</scope>
    <comments>
      <summary>How fast or slow the duration of the counting</summary>
    </comments>
  </VrGamesDev.VRG_GrowingNumber.m_Duration>
  <VrGamesDev.VRG_GrowingNumber.m_WhenBegin>
    <signature>VrGamesDev.VRG_GrowingNumber.m_WhenBegin</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_WhenBegin</name>
    <token>[Tooltip("When the movement finish Activate the event OnFinish")]
[SerializeField]
protected GameObject[] m_WhenBegin </token>
    <scope>VrGamesDev.VRG_GrowingNumber</scope>
    <comments>
      <summary>When the movement finish Activate the event OnFinish</summary>
    </comments>
  </VrGamesDev.VRG_GrowingNumber.m_WhenBegin>
  <VrGamesDev.VRG_GrowingNumber.m_WhenAdd>
    <signature>VrGamesDev.VRG_GrowingNumber.m_WhenAdd</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_WhenAdd</name>
    <token>[Tooltip("When the movement finish Activate the event OnFinish")]
[SerializeField]
protected GameObject[] m_WhenAdd </token>
    <scope>VrGamesDev.VRG_GrowingNumber</scope>
    <comments>
      <summary>When the movement finish Activate the event OnFinish</summary>
    </comments>
  </VrGamesDev.VRG_GrowingNumber.m_WhenAdd>
  <VrGamesDev.VRG_GrowingNumber.m_WhenDone>
    <signature>VrGamesDev.VRG_GrowingNumber.m_WhenDone</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_WhenDone</name>
    <token>[Tooltip("When the movement finish Activate the event OnFinish")]
[SerializeField]
protected GameObject[] m_WhenDone </token>
    <scope>VrGamesDev.VRG_GrowingNumber</scope>
    <comments>
      <summary>When the movement finish Activate the event OnFinish</summary>
    </comments>
  </VrGamesDev.VRG_GrowingNumber.m_WhenDone>
  <VrGamesDev.VRG_ModifyText>
    <signature>VrGamesDev.VRG_ModifyText</signature>
    <childcount>6</childcount>
    <type>Class</type>
    <name>VRG_ModifyText</name>
    <token>public class VRG_ModifyText : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>Modify a TExt UI component from outside, It can add or set a number, useful on Enabled objects</summary>
    </comments>
  </VrGamesDev.VRG_ModifyText>
  <VrGamesDev.VRG_ModifyText.m_Set>
    <signature>VrGamesDev.VRG_ModifyText.m_Set</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Set</name>
    <token>[Tooltip("The value to hardcore set it")]
[SerializeField]
private string m_Set </token>
    <scope>VrGamesDev.VRG_ModifyText</scope>
    <comments>
      <summary>The value to hardcore set it</summary>
    </comments>
  </VrGamesDev.VRG_ModifyText.m_Set>
  <VrGamesDev.VRG_ModifyText.m_Add>
    <signature>VrGamesDev.VRG_ModifyText.m_Add</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Add</name>
    <token>[Tooltip("Increase the text value by this amount")]
[SerializeField]
private float m_Add </token>
    <scope>VrGamesDev.VRG_ModifyText</scope>
    <comments>
      <summary>Increase the text value by this amount</summary>
    </comments>
  </VrGamesDev.VRG_ModifyText.m_Add>
  <VrGamesDev.VRG_ModifyText.m_Decimals>
    <signature>VrGamesDev.VRG_ModifyText.m_Decimals</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Decimals</name>
    <token>[Tooltip("The level of detail of the float number")]
[SerializeField]
private int m_Decimals </token>
    <scope>VrGamesDev.VRG_ModifyText</scope>
    <comments>
      <summary>The level of detail of the float number</summary>
    </comments>
  </VrGamesDev.VRG_ModifyText.m_Decimals>
  <VrGamesDev.VRG_ModifyText.m_Scene>
    <signature>VrGamesDev.VRG_ModifyText.m_Scene</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Scene</name>
    <token>[Tooltip("The level of detail of the float number")]
[SerializeField]
private bool m_Scene </token>
    <scope>VrGamesDev.VRG_ModifyText</scope>
    <comments>
      <summary>If the scene name is the one to fill</summary>
    </comments>
  </VrGamesDev.VRG_ModifyText.m_Scene>
  <VrGamesDev.VRG_ToogleIcon>
    <signature>VrGamesDev.VRG_ToogleIcon</signature>
    <childcount>7</childcount>
    <type>Class</type>
    <name>VRG_ToogleIcon</name>
    <token>public class VRG_ToogleIcon : VRG_SessionData </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>Toogle between 2 sprites On / Off</summary>
    </comments>
  </VrGamesDev.VRG_ToogleIcon>
  <VrGamesDev.VRG_ToogleIcon.m_IsItOn>
    <signature>VrGamesDev.VRG_ToogleIcon.m_IsItOn</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_IsItOn</name>
    <token>[Tooltip("If it is true, the image m_On; If it is false, the image is m_Off")]
[SerializeField]
private bool m_IsItOn </token>
    <scope>VrGamesDev.VRG_ToogleIcon</scope>
    <comments>
      <summary>If it is true, the image m_On; If it is false, the image is m_Off</summary>
    </comments>
  </VrGamesDev.VRG_ToogleIcon.m_IsItOn>
  <VrGamesDev.VRG_ToogleIcon.m_Image>
    <signature>VrGamesDev.VRG_ToogleIcon.m_Image</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Image</name>
    <token>[Tooltip("The icon image that will toogle.")]
[SerializeField]
private Image m_Image </token>
    <scope>VrGamesDev.VRG_ToogleIcon</scope>
    <comments>
      <summary>The icon image that will toogle.</summary>
    </comments>
  </VrGamesDev.VRG_ToogleIcon.m_Image>
  <VrGamesDev.VRG_ToogleIcon.m_On>
    <signature>VrGamesDev.VRG_ToogleIcon.m_On</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_On</name>
    <token>[Tooltip("The sprite image to toogle when the object is On")]
[SerializeField]
private Sprite m_On </token>
    <scope>VrGamesDev.VRG_ToogleIcon</scope>
    <comments>
      <summary>The sprite image to toogle when the object is On</summary>
    </comments>
  </VrGamesDev.VRG_ToogleIcon.m_On>
  <VrGamesDev.VRG_ToogleIcon.m_Off>
    <signature>VrGamesDev.VRG_ToogleIcon.m_Off</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Off</name>
    <token>[Tooltip("The sprite image to toogle when the object is off")]
[SerializeField]
private Sprite m_Off </token>
    <scope>VrGamesDev.VRG_ToogleIcon</scope>
    <comments>
      <summary>The sprite image to toogle when the object is off</summary>
    </comments>
  </VrGamesDev.VRG_ToogleIcon.m_Off>
  <VrGamesDev.VRG_AttachToCamera>
    <signature>VrGamesDev.VRG_AttachToCamera</signature>
    <childcount>1</childcount>
    <type>Class</type>
    <name>VRG_AttachToCamera</name>
    <token>public class VRG_AttachToCamera : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>On enable this gameobject attach itself to the main camera</summary>
    </comments>
  </VrGamesDev.VRG_AttachToCamera>
  <VrGamesDev.VRG_Delayed>
    <signature>VrGamesDev.VRG_Delayed</signature>
    <childcount>8</childcount>
    <type>Class</type>
    <name>VRG_Delayed</name>
    <token>public class VRG_Delayed : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>This class allows to activate, deactivate, toogle or destroy many items of the scene
     it will be delayed for some seconds, instant or the next frame</summary>
    </comments>
  </VrGamesDev.VRG_Delayed>
  <VrGamesDev.VRG_Delayed.m_Delay>
    <signature>VrGamesDev.VRG_Delayed.m_Delay</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Delay</name>
    <token>[Tooltip("The time it will wait to perform the actions")]
[SerializeField]
private float m_Delay </token>
    <scope>VrGamesDev.VRG_Delayed</scope>
    <comments>
      <summary>The time it will wait to perform the actions</summary>
    </comments>
  </VrGamesDev.VRG_Delayed.m_Delay>
  <VrGamesDev.VRG_Delayed.m_Loop>
    <signature>VrGamesDev.VRG_Delayed.m_Loop</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Loop</name>
    <token>[Tooltip("If false, it will do it just once, if true it will loop it every delay Seconds if &gt; 0")]
[SerializeField]
private bool m_Loop </token>
    <scope>VrGamesDev.VRG_Delayed</scope>
    <comments>
      <summary>If false, it will do the scaling just once, if true it will loop it.</summary>
    </comments>
  </VrGamesDev.VRG_Delayed.m_Loop>
  <VrGamesDev.VRG_Delayed.m_Activate>
    <signature>VrGamesDev.VRG_Delayed.m_Activate</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Activate</name>
    <token>[Tooltip("Array of the transform to activate setActive(true)")]
[SerializeField]
private Transform[] m_Activate </token>
    <scope>VrGamesDev.VRG_Delayed</scope>
    <comments>
      <summary>Array of the transform to activate &lt;em&gt;setActive(true)&lt;/em&gt;</summary>
    </comments>
  </VrGamesDev.VRG_Delayed.m_Activate>
  <VrGamesDev.VRG_Delayed.m_Deactivate>
    <signature>VrGamesDev.VRG_Delayed.m_Deactivate</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Deactivate</name>
    <token>[Tooltip("Array of the transform to deactivate setActive(false)")]
[SerializeField]
private Transform[] m_Deactivate </token>
    <scope>VrGamesDev.VRG_Delayed</scope>
    <comments>
      <summary>Array of the transform to deactivate &lt;em&gt;setActive(false)&lt;/em&gt;</summary>
    </comments>
  </VrGamesDev.VRG_Delayed.m_Deactivate>
  <VrGamesDev.VRG_Delayed.m_Destroy>
    <signature>VrGamesDev.VRG_Delayed.m_Destroy</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Destroy</name>
    <token>[Tooltip("Array of the gameobjects to destroy")]
[SerializeField]
private Transform[] m_Destroy </token>
    <scope>VrGamesDev.VRG_Delayed</scope>
    <comments>
      <summary>Array of the gameobjects to destroy</summary>
    </comments>
  </VrGamesDev.VRG_Delayed.m_Destroy>
  <VrGamesDev.VRG_Delayed.m_Toogle>
    <signature>VrGamesDev.VRG_Delayed.m_Toogle</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Toogle</name>
    <token>[Tooltip("Array of the transform to toogle, if on, then it will become off, and viceversa")]
[SerializeField]
private Transform[] m_Toogle </token>
    <scope>VrGamesDev.VRG_Delayed</scope>
    <comments>
      <summary>Array of the transform to toogle, if on, then it will become off, and viceversa</summary>
    </comments>
  </VrGamesDev.VRG_Delayed.m_Toogle>
  <VrGamesDev.VRG_Delayed.SetDelay_x0028_float_x0029_>
    <signature>VrGamesDev.VRG_Delayed.SetDelay(float)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>SetDelay</name>
    <token>public void SetDelay(float valueLocal)</token>
    <scope>VrGamesDev.VRG_Delayed</scope>
    <comments>
      <summary>Modify the delay to wait</summary>
      <param-valueLocal>The tine in seconds to delay</param-valueLocal>
    </comments>
    <params>
      <valueLocal>float</valueLocal>
    </params>
  </VrGamesDev.VRG_Delayed.SetDelay_x0028_float_x0029_>
  <VrGamesDev.VRG_Destroy>
    <signature>VrGamesDev.VRG_Destroy</signature>
    <childcount>6</childcount>
    <type>Class</type>
    <name>VRG_Destroy</name>
    <token>public class VRG_Destroy : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>Destroy a GameObject after some time, it could destroy itself or its parent</summary>
    </comments>
  </VrGamesDev.VRG_Destroy>
  <VrGamesDev.VRG_Destroy.m_Delay>
    <signature>VrGamesDev.VRG_Destroy.m_Delay</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Delay</name>
    <token>[Tooltip("The time it will wait to perform the actions")]
[SerializeField]
private float m_Delay </token>
    <scope>VrGamesDev.VRG_Destroy</scope>
    <comments>
      <summary>The time it will wait to perform the actions</summary>
    </comments>
  </VrGamesDev.VRG_Destroy.m_Delay>
  <VrGamesDev.VRG_Destroy.m_Parent>
    <signature>VrGamesDev.VRG_Destroy.m_Parent</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Parent</name>
    <token>[Tooltip("If false, i will destroy myself, if true, i will destroy my parent (myself included)")]
[SerializeField]
private bool m_Parent </token>
    <scope>VrGamesDev.VRG_Destroy</scope>
    <comments>
      <summary>If false, i will destroy myself, if true, i will destroy my parent (myself included)</summary>
    </comments>
  </VrGamesDev.VRG_Destroy.m_Parent>
  <VrGamesDev.VRG_DestroyOnSceneLoad>
    <signature>VrGamesDev.VRG_DestroyOnSceneLoad</signature>
    <childcount>3</childcount>
    <type>Class</type>
    <name>VRG_DestroyOnSceneLoad</name>
    <token>public class VRG_DestroyOnSceneLoad : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>This class allows a "DontDestroyOnLoad()" object, to be destroyed
     when a new scene is loaded</summary>
    </comments>
  </VrGamesDev.VRG_DestroyOnSceneLoad>
  <VrGamesDev.VRG_DontDestroyOnLoad>
    <signature>VrGamesDev.VRG_DontDestroyOnLoad</signature>
    <childcount>1</childcount>
    <type>Class</type>
    <name>VRG_DontDestroyOnLoad</name>
    <token>public class VRG_DontDestroyOnLoad : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>This class makes a class not destroyable on load &lt;a href="https://docs.unity3d.com/ScriptReference/Object.DontDestroyOnLoad.html"&gt;&lt;em&gt;&lt;strong&gt;Object.DontDestroyOnLoad(this);&lt;/strong&gt;&lt;/em&gt;&lt;/a&gt;</summary>
    </comments>
  </VrGamesDev.VRG_DontDestroyOnLoad>
  <VrGamesDev.VRG_EnableImage>
    <signature>VrGamesDev.VRG_EnableImage</signature>
    <childcount>3</childcount>
    <type>Class</type>
    <name>VRG_EnableImage</name>
    <token>public class VRG_EnableImage : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>It unparents the GameObject and makes the &lt;em&gt;m_Parent&lt;/em&gt; gameObject the new parent</summary>
    </comments>
  </VrGamesDev.VRG_EnableImage>
  <VrGamesDev.VRG_EnableImage.m_Image>
    <signature>VrGamesDev.VRG_EnableImage.m_Image</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Image</name>
    <token>[Tooltip("The future parent when this object enables")]
[SerializeField]
private Image m_Image </token>
    <scope>VrGamesDev.VRG_EnableImage</scope>
    <comments>
      <summary>The future parent when this object enables</summary>
    </comments>
  </VrGamesDev.VRG_EnableImage.m_Image>
  <VrGamesDev.VRG_Move>
    <signature>VrGamesDev.VRG_Move</signature>
    <childcount>9</childcount>
    <type>Class</type>
    <name>VRG_Move</name>
    <token>public class VRG_Move : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>Lerp a GameObject from Origin to Target at Duration speed</summary>
    </comments>
  </VrGamesDev.VRG_Move>
  <VrGamesDev.VRG_Move.m_Origin>
    <signature>VrGamesDev.VRG_Move.m_Origin</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Origin</name>
    <token>[Tooltip("The transform origin to move from")]
[SerializeField]
private GameObject m_Origin </token>
    <scope>VrGamesDev.VRG_Move</scope>
    <comments>
      <summary>The transform origin to move from</summary>
    </comments>
  </VrGamesDev.VRG_Move.m_Origin>
  <VrGamesDev.VRG_Move.m_Target>
    <signature>VrGamesDev.VRG_Move.m_Target</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Target</name>
    <token>[Tooltip("The transform target to move to")]
[SerializeField]
private GameObject m_Target </token>
    <scope>VrGamesDev.VRG_Move</scope>
    <comments>
      <summary>The transform target to move to</summary>
    </comments>
  </VrGamesDev.VRG_Move.m_Target>
  <VrGamesDev.VRG_Move.m_Duration>
    <signature>VrGamesDev.VRG_Move.m_Duration</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Duration</name>
    <token>[Tooltip("The time in seconds to complete the scaling")]
[SerializeField]
private float m_Duration </token>
    <scope>VrGamesDev.VRG_Move</scope>
    <comments>
      <summary>The time in seconds to complete the scaling</summary>
    </comments>
  </VrGamesDev.VRG_Move.m_Duration>
  <VrGamesDev.VRG_Move.m_Start>
    <signature>VrGamesDev.VRG_Move.m_Start</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Start</name>
    <token>[Tooltip("The distance to start the lerp movement")]
[Range(0.0f, 1.0f)]
[SerializeField]
private float m_Start </token>
    <scope>VrGamesDev.VRG_Move</scope>
    <comments>
      <summary>The distance to start the lerp movement</summary>
    </comments>
  </VrGamesDev.VRG_Move.m_Start>
  <VrGamesDev.VRG_Move.m_Finish>
    <signature>VrGamesDev.VRG_Move.m_Finish</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Finish</name>
    <token>[Tooltip("The distance to finish the lerp movement")]
[Range(0.0f, 1.0f)]
[SerializeField]
private float m_Finish </token>
    <scope>VrGamesDev.VRG_Move</scope>
    <comments>
      <summary>The distance to finish the lerp movement</summary>
    </comments>
  </VrGamesDev.VRG_Move.m_Finish>
  <VrGamesDev.VRG_Move.m_WhenDone>
    <signature>VrGamesDev.VRG_Move.m_WhenDone</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_WhenDone</name>
    <token>[Tooltip("When the movement finish Activate the event OnFinish")]
[SerializeField]
private GameObject[] m_WhenDone </token>
    <scope>VrGamesDev.VRG_Move</scope>
    <comments>
      <summary>When the movement finish Activate the event OnFinish</summary>
    </comments>
  </VrGamesDev.VRG_Move.m_WhenDone>
  <VrGamesDev.VRG_Move.Do_x0028__x0029_>
    <signature>VrGamesDev.VRG_Move.Do()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Do</name>
    <token>protected override IEnumerator Do()</token>
    <scope>VrGamesDev.VRG_Move</scope>
    <comments>
      <summary>&lt;strong&gt;&lt;em&gt;Do it's thing: &lt;/em&gt;&lt;/strong&gt; Lerp move this GameObject from origin to target</summary>
    </comments>
  </VrGamesDev.VRG_Move.Do_x0028__x0029_>
  <VrGamesDev.VRG_OpenUrl>
    <signature>VrGamesDev.VRG_OpenUrl</signature>
    <childcount>3</childcount>
    <type>Class</type>
    <name>VRG_OpenUrl</name>
    <token>public class VRG_OpenUrl : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>Easy call to the OpenURL funcionality, open one of the 3 predefined or a custom one</summary>
    </comments>
  </VrGamesDev.VRG_OpenUrl>
  <VrGamesDev.VRG_OpenUrl.Do_x0028__x0029_>
    <signature>VrGamesDev.VRG_OpenUrl.Do()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Do</name>
    <token>protected override IEnumerator Do()</token>
    <scope>VrGamesDev.VRG_OpenUrl</scope>
    <comments>
      <summary>&lt;strong&gt;&lt;em&gt;Do it's thing: &lt;/em&gt;&lt;/strong&gt; Call an external browser with the provided URL</summary>
    </comments>
  </VrGamesDev.VRG_OpenUrl.Do_x0028__x0029_>
  <VrGamesDev.VRG_Position>
    <signature>VrGamesDev.VRG_Position</signature>
    <childcount>4</childcount>
    <type>Class</type>
    <name>VRG_Position</name>
    <token>public class VRG_Position : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>Scale a GameObject in X,Y,X, simple and effective
     It scale from current Scale to the Target Vector3</summary>
    </comments>
  </VrGamesDev.VRG_Position>
  <VrGamesDev.VRG_Position.VRG_Position_x0028__x0029_>
    <signature>VrGamesDev.VRG_Position.VRG_Position()</signature>
    <childcount>0</childcount>
    <type>Constructor</type>
    <name>VRG_Position</name>
    <token>public  VRG_Position()</token>
    <scope>VrGamesDev.VRG_Position</scope>
    <comments>
      <summary>Empty Creator, everything is true and zero</summary>
    </comments>
  </VrGamesDev.VRG_Position.VRG_Position_x0028__x0029_>
  <VrGamesDev.VRG_Rotate>
    <signature>VrGamesDev.VRG_Rotate</signature>
    <childcount>13</childcount>
    <type>Class</type>
    <name>VRG_Rotate</name>
    <token>public class VRG_Rotate : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>Rotates a GameObject in X,Y,X, simple and effective
     0 for no rotation
     Positive and negative values, will rotate clockwise and anticlockwise</summary>
    </comments>
  </VrGamesDev.VRG_Rotate>
  <VrGamesDev.VRG_Rotate.m_IsReady>
    <signature>VrGamesDev.VRG_Rotate.m_IsReady</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_IsReady</name>
    <token>[Tooltip("The available status, ask for this property to know if it is available")]
[SerializeField]
protected bool m_IsReady </token>
    <scope>VrGamesDev.VRG_Rotate</scope>
    <comments>
      <summary>The available status, ask for this property to know if it is available to use</summary>
    </comments>
  </VrGamesDev.VRG_Rotate.m_IsReady>
  <VrGamesDev.VRG_Rotate.m_XRandom>
    <signature>VrGamesDev.VRG_Rotate.m_XRandom</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_XRandom</name>
    <token>[Tooltip("If it needs to start random in X axis")]
[SerializeField]
private bool m_XRandom </token>
    <scope>VrGamesDev.VRG_Rotate</scope>
    <comments>
      <summary>If it needs to start random in X axis</summary>
    </comments>
  </VrGamesDev.VRG_Rotate.m_XRandom>
  <VrGamesDev.VRG_Rotate.m_YRandom>
    <signature>VrGamesDev.VRG_Rotate.m_YRandom</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_YRandom</name>
    <token>[Tooltip("If it needs to start random in Y axis")]
[SerializeField]
private bool m_YRandom </token>
    <scope>VrGamesDev.VRG_Rotate</scope>
    <comments>
      <summary>If it needs to start random in Y axis</summary>
    </comments>
  </VrGamesDev.VRG_Rotate.m_YRandom>
  <VrGamesDev.VRG_Rotate.m_ZRandom>
    <signature>VrGamesDev.VRG_Rotate.m_ZRandom</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_ZRandom</name>
    <token>[Tooltip("If it needs to start random in Z axis")]
[SerializeField]
private bool m_ZRandom </token>
    <scope>VrGamesDev.VRG_Rotate</scope>
    <comments>
      <summary>If it needs to start random in Z axis</summary>
    </comments>
  </VrGamesDev.VRG_Rotate.m_ZRandom>
  <VrGamesDev.VRG_Rotate.m_Speed>
    <signature>VrGamesDev.VRG_Rotate.m_Speed</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Speed</name>
    <token>[Tooltip("Rotation speed in all axis")]
[SerializeField]
private Vector3 m_Speed </token>
    <scope>VrGamesDev.VRG_Rotate</scope>
    <comments>
      <summary>Rotation speed in all axis</summary>
    </comments>
  </VrGamesDev.VRG_Rotate.m_Speed>
  <VrGamesDev.VRG_Rotate.m_WhenDone>
    <signature>VrGamesDev.VRG_Rotate.m_WhenDone</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_WhenDone</name>
    <token>[Tooltip("When the movement finish Activate the event OnFinish")]
[SerializeField]
private GameObject[] m_WhenDone </token>
    <scope>VrGamesDev.VRG_Rotate</scope>
    <comments>
      <summary>When the movement finish Activate the event OnFinish</summary>
    </comments>
  </VrGamesDev.VRG_Rotate.m_WhenDone>
  <VrGamesDev.VRG_Scale>
    <signature>VrGamesDev.VRG_Scale</signature>
    <childcount>14</childcount>
    <type>Class</type>
    <name>VRG_Scale</name>
    <token>public class VRG_Scale : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>Scale a GameObject in X,Y,X, simple and effective
     It scale from current Scale to the Target Vector3</summary>
    </comments>
  </VrGamesDev.VRG_Scale>
  <VrGamesDev.VRG_Scale.m_IsReady>
    <signature>VrGamesDev.VRG_Scale.m_IsReady</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_IsReady</name>
    <token>[Tooltip("The available status, ask for this property to know if it is available")]
[SerializeField]
protected bool m_IsReady </token>
    <scope>VrGamesDev.VRG_Scale</scope>
    <comments>
      <summary>The available status, ask for this property to know if it is available to use</summary>
    </comments>
  </VrGamesDev.VRG_Scale.m_IsReady>
  <VrGamesDev.VRG_Scale.m_Loop>
    <signature>VrGamesDev.VRG_Scale.m_Loop</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Loop</name>
    <token>[Tooltip("If false, it will do the scaling just once, if true it will loop it.")]
[SerializeField]
private bool m_Loop </token>
    <scope>VrGamesDev.VRG_Scale</scope>
    <comments>
      <summary>If false, it will do the scaling just once, if true it will loop it.</summary>
    </comments>
  </VrGamesDev.VRG_Scale.m_Loop>
  <VrGamesDev.VRG_Scale.m_PingPong>
    <signature>VrGamesDev.VRG_Scale.m_PingPong</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_PingPong</name>
    <token>[Tooltip("It goes fromt origin -&gt; target -&gt; origin")]
[SerializeField]
private bool m_PingPong </token>
    <scope>VrGamesDev.VRG_Scale</scope>
    <comments>
      <summary>It goes fromt origin -&gt; target -&gt; origin</summary>
    </comments>
  </VrGamesDev.VRG_Scale.m_PingPong>
  <VrGamesDev.VRG_Scale.m_Duration>
    <signature>VrGamesDev.VRG_Scale.m_Duration</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Duration</name>
    <token>[Tooltip("The time in seconds to complete the scaling")]
[SerializeField]
private float m_Duration </token>
    <scope>VrGamesDev.VRG_Scale</scope>
    <comments>
      <summary>The time in seconds to complete the scaling</summary>
    </comments>
  </VrGamesDev.VRG_Scale.m_Duration>
  <VrGamesDev.VRG_Scale.m_TargetScale>
    <signature>VrGamesDev.VRG_Scale.m_TargetScale</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_TargetScale</name>
    <token>[Tooltip("Target Scale to scale")]
[SerializeField]
private Vector3 m_TargetScale </token>
    <scope>VrGamesDev.VRG_Scale</scope>
    <comments>
      <summary>Target Scale to scale</summary>
    </comments>
  </VrGamesDev.VRG_Scale.m_TargetScale>
  <VrGamesDev.VRG_Scale.m_WhenDone>
    <signature>VrGamesDev.VRG_Scale.m_WhenDone</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_WhenDone</name>
    <token>[Tooltip("When the movement finish Activate the event OnFinish")]
[SerializeField]
private GameObject[] m_WhenDone </token>
    <scope>VrGamesDev.VRG_Scale</scope>
    <comments>
      <summary>When the movement finish Activate the event OnFinish</summary>
    </comments>
  </VrGamesDev.VRG_Scale.m_WhenDone>
  <VrGamesDev.VRG_Scale.Play_x0028__x0029_>
    <signature>VrGamesDev.VRG_Scale.Play()</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>Play</name>
    <token>public override void Play()</token>
    <scope>VrGamesDev.VRG_Scale</scope>
    <comments>
      <summary>&lt;strong&gt;&lt;em&gt;Do it's thing: &lt;/em&gt;&lt;/strong&gt; Start the scaling from origin -&gt; target</summary>
    </comments>
  </VrGamesDev.VRG_Scale.Play_x0028__x0029_>
  <VrGamesDev.VRG_Scale.SetDuration_x0028_float_x0029_>
    <signature>VrGamesDev.VRG_Scale.SetDuration(float)</signature>
    <childcount>0</childcount>
    <type>Method</type>
    <name>SetDuration</name>
    <token>public void SetDuration(float valueLocal)</token>
    <scope>VrGamesDev.VRG_Scale</scope>
    <comments>
      <summary>Modify the duration of the scaling time</summary>
      <param-valueLocal>The new duration in seconds</param-valueLocal>
    </comments>
    <params>
      <valueLocal>float</valueLocal>
    </params>
  </VrGamesDev.VRG_Scale.SetDuration_x0028_float_x0029_>
  <VrGamesDev.VRG_SpawnPrefab>
    <signature>VrGamesDev.VRG_SpawnPrefab</signature>
    <childcount>3</childcount>
    <type>Class</type>
    <name>VRG_SpawnPrefab</name>
    <token>public class VRG_SpawnPrefab : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>Simple and efective: Spawn a random prefab from the prefabs list</summary>
    </comments>
  </VrGamesDev.VRG_SpawnPrefab>
  <VrGamesDev.VRG_SpawnPrefab.m_HowMany>
    <signature>VrGamesDev.VRG_SpawnPrefab.m_HowMany</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_HowMany</name>
    <token>[Tooltip("The amount of prefabs to spawn")]
[SerializeField]
private int m_HowMany </token>
    <scope>VrGamesDev.VRG_SpawnPrefab</scope>
    <comments>
      <summary>The amount of prefabs to spawn</summary>
    </comments>
  </VrGamesDev.VRG_SpawnPrefab.m_HowMany>
  <VrGamesDev.VRG_SpawnPrefab.m_Prefabs>
    <signature>VrGamesDev.VRG_SpawnPrefab.m_Prefabs</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Prefabs</name>
    <token>[Tooltip("The random Prefab to Spawn list")]
[SerializeField]
private GameObject[] m_Prefabs </token>
    <scope>VrGamesDev.VRG_SpawnPrefab</scope>
    <comments>
      <summary>The random Prefab to Spawn</summary>
    </comments>
  </VrGamesDev.VRG_SpawnPrefab.m_Prefabs>
  <VrGamesDev.VRG_Unparent>
    <signature>VrGamesDev.VRG_Unparent</signature>
    <childcount>2</childcount>
    <type>Class</type>
    <name>VRG_Unparent</name>
    <token>public class VRG_Unparent : VRG_Base </token>
    <scope>VrGamesDev</scope>
    <comments>
      <summary>It unparents the GameObject and makes the &lt;em&gt;m_Parent&lt;/em&gt; gameObject the new parent</summary>
    </comments>
  </VrGamesDev.VRG_Unparent>
  <VrGamesDev.VRG_Unparent.m_Parent>
    <signature>VrGamesDev.VRG_Unparent.m_Parent</signature>
    <childcount>0</childcount>
    <type>Field</type>
    <name>m_Parent</name>
    <token>[Tooltip("The future parent when this object enables")]
[SerializeField]
protected GameObject m_Parent </token>
    <scope>VrGamesDev.VRG_Unparent</scope>
    <comments>
      <summary>The future parent when this object enables</summary>
    </comments>
  </VrGamesDev.VRG_Unparent.m_Parent>
</members>